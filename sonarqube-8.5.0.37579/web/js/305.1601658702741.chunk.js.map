{"version":3,"sources":["webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx","webpack:///./src/main/js/apps/settings/side-tabs.css?de75","webpack:///./src/main/js/apps/settings/side-tabs.css","webpack:///./src/main/js/apps/settings/styles.css?cb9e","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionsTable.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationFeatureBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/api/settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts"],"names":["getNewCodePeriod","data","catch","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","days","parsed","parseInt","length","isNaN","String","getSettingValue","analysis","referenceBranch","type","validateSetting","state","currentSetting","currentSettingValue","overrideGeneralSetting","selected","isChanged","undefined","isValid","BaselineSettingDays","props","className","disabled","onChangeDays","onSelect","onClick","title","error","id","isInvalid","label","required","onChange","e","currentTarget","value","BaselineSettingPreviousVersion","isDefault","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","handleError","key","dispatch","response","then","message","Promise","reject","AlmBindingDefinitionFormModalRenderer","action","children","help","header","onClose","onCancel","onSubmit","size","onCloseClick","onFormSubmit","submitting","Alert","variant","loading","canSubmit","AlmBindingDefinitionFormRenderer","success","preventDefault","onEdit","onDelete","handleCancel","setState","formData","bindingDefinition","touched","handleDelete","handleEdit","handleFieldChange","fieldId","handleFormSubmit","values","hideKeyField","optionalFields","Object","some","v","componentDidUpdate","prevProps","this","render","showInModal","readOnly","showEdit","showCancel","showDelete","onFieldChange","AlmBindingDefinitionsTable","additionalColumnsHeaders","additionalTableInfo","alm","definitions","onCreate","map","h","colSpan","additionalColumns","AlmIntegrationFeatureBox","active","description","inactiveReason","name","fill","green","gray60","AlmTabRenderer","definition","additionalColumnsKeys","defaultBinding","editedDefinition","features","form","loadingAlmDefinitions","loadingProjectCount","multipleAlmEnabled","mappedDefinitions","k","properties","feature","mounted","handleCreate","definitionKey","find","d","handleSubmit","config","originalKey","call","updateConfiguration","newKey","createConfiguration","onUpdateDefinitions","componentDidMount","componentWillUnmount","AlmBindingDefinitionFormField","autoFocus","isTextArea","maxLength","optional","propKey","htmlFor","overlay","placement","rows","AzureForm","personalAccessToken","AzureTab","Azure","childProps","BitbucketForm","defaultMessage","example","url","BitbucketTab","Bitbucket","target","to","DeleteModal","projectCount","confirmButtonText","confirmData","isDestructive","onConfirm","showProjectCountWarning","reseting","handleClose","handleReset","onReset","renderModal","contentLabel","onRequestClose","setting","changedValue","hasValueChanged","hasValueToResetTo","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","InputForBoolean","displayedValue","handleInputChange","event","handleKeyDown","keyCode","onKeyDown","InputForNumber","changing","handleChangeClick","componentWillReceiveProps","nextProps","renderInput","autoComplete","option","clearable","InputForString","typeMapping","STRING","TEXT","PASSWORD","BOOLEAN","INTEGER","LONG","FLOAT","other","InputComponent","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","multiValues","fieldKey","emptyValue","newFields","renderFields","fieldValues","fields","field","width","minWidth","marginTop","Input","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","passValidation","checkValue","handleSave","saveValue","changes","validationMessage","propertyName","effectiveValue","dangerouslySetInnerHTML","__html","mapDispatchToProps","getState","defaultValue","keys","ownProps","DefinitionsList","settings","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","withCurrentUser","renderEmailForm","subCategoryKey","category","fetchValues","prevKeys","join","bySubCategory","subCategories","sortedSubCategories","subCategory","toLowerCase","filteredSubCategories","filter","c","GithubForm","appId","clientId","clientSecret","privateKey","GithubTab","branchesEnabled","GitHub","CategoryDefinitionsList","GitlabForm","GitlabTab","importFeatureEnabled","Boolean","GitLab","tabs","alt","height","src","requiresBranchesEnabled","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlm","onSelectAlm","tab","azure","bitbucket","github","gitlab","onConfirmDelete","deleteConfiguration","fetchPullRequestDecorationSetting","resolve","handleSelectAlm","appState","withAppState","AnalysisScope","selectedCategory","abap","apex","cobol","css","flex","go","html","java","javascript","kotlin","php","python","rpg","ruby","scala","swift","typescript","xml","withRouter","categories","location","router","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","availableLanguages","originalValue","selectedLanguage","newOption","query","placeholder","saving","onSelectDays","onSelectSetting","fetchNewCodePeriodSetting","link","optionRenderer","instance","renderLabel","helpParams","renderField","PRDecorationBindingRenderer","repository","slug","summaryCommentEnabled","instances","isConfigured","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","renderBooleanField","REQUIRED_FIELDS_BY_ALM","fetchDefinitions","project","all","getProjectBinding","originalData","newFormData","validateForm","orignalData","catchError","submitProjectAlmBinding","additionalFields","isDataSame","reduce","result","status","throwGlobalError","almSpecificFields","almSetting","oKey","oRepository","oSlug","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","renderLink","defaultCategory","pathname","categoriesWithName","concat","sortedCategories","PageHeader","InstanceMessage","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","defer","AllCategoriesList","filtered","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","AlmKeys","getAlmDefinitions","getAlmDefinitionsNoCatch","getAlmSettings","almSettings","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","countBindedProjects","projects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","getDefinitions","r","getValues","setSettingValue","JSON","stringify","resetSettingValue","sendTestEmail","checkSecretKey","generateSecretKey","encryptValue","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY"],"mappings":"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","file":"js/305.1601658702741.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  referenceBranch,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  referenceBranch?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'REFERENCE_BRANCH':\n      return referenceBranch;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  overrideGeneralSetting?: boolean;\n  referenceBranch?: string;\n  selected?: T.NewCodePeriodSettingType;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    overrideGeneralSetting,\n    referenceBranch = '',\n    selected\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue) ||\n      (selected === 'REFERENCE_BRANCH' && referenceBranch !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days)) ||\n    (selected === 'REFERENCE_BRANCH' && referenceBranch.length > 0);\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".side-tabs-layout{display:flex;justify-content:space-between;align-items:stretch}.modal .side-tabs-layout{padding-left:10px;background-color:#f3f3f3}.side-tabs-main{position:relative;z-index:2;flex-grow:1;padding:15px 20px;border:1px solid #e6e6e6;box-sizing:border-box;background-color:#fff;overflow:auto;height:100vh}.modal .side-tabs-main{border-top:none;border-bottom:none;border-right:none}.side-tabs-side{position:relative;z-index:3;width:160px;flex-shrink:0;padding:10px 0;box-sizing:border-box;transform:translateX(1px)}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#444;cursor:default}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".settings-layout{margin-bottom:60px}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#777}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormModalProps {\n  action: 'edit' | 'create';\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel: () => void;\n  onSubmit: () => void;\n}\n\nexport default function AlmBindingDefinitionFormModalRenderer(\n  props: AlmBindingDefinitionFormModalProps\n) {\n  const { action, children, help } = props;\n  const header = translate('settings.almintegration.form.header', action);\n\n  return (\n    <SimpleModal header={header} onClose={props.onCancel} onSubmit={props.onSubmit} size=\"medium\">\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form className=\"views-form\" onSubmit={onFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body modal-container\">\n            <div className=\"display-flex-start\">\n              <div className=\"flex-1\">{children}</div>\n\n              {help && (\n                <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n                  {help}\n                </Alert>\n              )}\n            </div>\n          </div>\n\n          <div className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton disabled={submitting || !props.canSubmit()}>\n              {translate('settings.almintegration.form.save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n          </div>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormRendererProps {\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel?: () => void;\n  onDelete?: () => void;\n  onEdit?: () => void;\n  onSubmit: () => void;\n  loading: boolean;\n  success: boolean;\n}\n\nexport default function AlmBindingDefinitionFormRenderer(\n  props: AlmBindingDefinitionFormRendererProps\n) {\n  const { children, help, loading, success } = props;\n\n  return (\n    <form\n      className=\"views-form\"\n      data-test=\"settings__alm-form\"\n      onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        props.onSubmit();\n      }}>\n      <div className=\"display-flex-start\">\n        <div className=\"flex-1\">\n          {children}\n\n          <div className=\"display-flex-center\">\n            {props.onEdit === undefined ? (\n              <SubmitButton disabled={loading || !props.canSubmit()}>\n                {translate('settings.almintegration.form.save')}\n              </SubmitButton>\n            ) : (\n              <Button disabled={loading} onClick={props.onEdit}>\n                {translate('edit')}\n              </Button>\n            )}\n            {props.onDelete && (\n              <Button\n                className=\"button-red spacer-left\"\n                disabled={loading}\n                onClick={props.onDelete}>\n                {translate('delete')}\n              </Button>\n            )}\n            {props.onCancel && (\n              <ResetButtonLink className=\"spacer-left\" onClick={props.onCancel}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            )}\n            {loading && <DeferredSpinner className=\"spacer-left\" />}\n            {!loading && success && (\n              <span className=\"text-success spacer-left\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {help && (\n          <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n            {help}\n          </Alert>\n        )}\n      </div>\n    </form>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual, omit } from 'lodash';\nimport * as React from 'react';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionFormModalRenderer from './AlmBindingDefinitionFormModalRenderer';\nimport AlmBindingDefinitionFormRenderer from './AlmBindingDefinitionFormRenderer';\n\nexport interface AlmBindingDefinitionFormChildrenProps<B> {\n  formData: B;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof B, value: string) => void;\n  readOnly?: boolean;\n}\n\ninterface Props<B> {\n  bindingDefinition: B;\n  children: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  hideKeyField?: boolean;\n  loading?: boolean;\n  onCancel?: () => void;\n  onDelete?: (definitionKey: string) => void;\n  onEdit?: (definitionKey: string) => void;\n  onSubmit: (data: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  readOnly?: boolean;\n  showInModal?: boolean;\n  success?: boolean;\n}\n\ninterface State<B> {\n  formData: B;\n  touched: boolean;\n}\n\nexport default class AlmBindingDefinitionForm<\n  B extends AlmBindingDefinition\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n    this.state = { formData: props.bindingDefinition, touched: false };\n  }\n\n  componentDidUpdate(prevProps: Props<B>) {\n    if (!isEqual(prevProps.bindingDefinition, this.props.bindingDefinition)) {\n      this.setState({ formData: this.props.bindingDefinition, touched: false });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({ formData: this.props.bindingDefinition, touched: false });\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      },\n      touched: true\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    const { hideKeyField, optionalFields } = this.props;\n    const { formData, touched } = this.state;\n\n    let values;\n    if (hideKeyField) {\n      values = omit(formData, 'key');\n    } else {\n      values = { ...formData };\n    }\n\n    if (optionalFields && optionalFields.length > 0) {\n      values = omit(values, optionalFields);\n    }\n\n    return touched && !Object.values(values).some(v => !v);\n  };\n\n  render() {\n    const {\n      bindingDefinition,\n      children,\n      help,\n      hideKeyField,\n      showInModal,\n      loading = false,\n      readOnly = false,\n      success = false\n    } = this.props;\n    const { formData, touched } = this.state;\n\n    const showEdit = this.props.onEdit !== undefined;\n    const showCancel = touched || !showEdit;\n    const showDelete = showEdit && this.props.onDelete !== undefined;\n\n    return showInModal ? (\n      <AlmBindingDefinitionFormModalRenderer\n        action={bindingDefinition.key ? 'edit' : 'create'}\n        canSubmit={this.canSubmit}\n        help={help}\n        onCancel={this.handleCancel}\n        onSubmit={this.handleFormSubmit}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmBindingDefinitionFormModalRenderer>\n    ) : (\n      <AlmBindingDefinitionFormRenderer\n        canSubmit={this.canSubmit}\n        help={help}\n        loading={loading}\n        onCancel={showCancel ? this.handleCancel : undefined}\n        onDelete={showDelete ? this.handleDelete : undefined}\n        onEdit={showEdit ? this.handleEdit : undefined}\n        onSubmit={this.handleFormSubmit}\n        success={success}>\n        {children({\n          formData,\n          hideKeyField,\n          onFieldChange: this.handleFieldChange,\n          readOnly\n        })}\n      </AlmBindingDefinitionFormRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ButtonIcon, DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionsTableProps {\n  additionalColumnsHeaders: Array<string>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  definitions: Array<{\n    key: string;\n    additionalColumns: Array<string>;\n  }>;\n  loading: boolean;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n}\n\nexport default function AlmBindingDefinitionsTable(props: AlmBindingDefinitionsTableProps) {\n  const { additionalColumnsHeaders, additionalTableInfo, alm, definitions, loading } = props;\n\n  return (\n    <>\n      <div className=\"spacer-top big-spacer-bottom display-flex-space-between\">\n        <h2 className=\"settings-sub-category-name\">\n          {translate('settings.almintegration.table.title')}\n        </h2>\n        <Button data-test=\"settings__alm-create\" disabled={loading} onClick={props.onCreate}>\n          {translate('settings.almintegration.table.create')}\n        </Button>\n      </div>\n\n      {additionalTableInfo}\n\n      <table className=\"data zebra fixed spacer-bottom\">\n        <thead>\n          <tr>\n            <th>{translate('settings.almintegration.table.column.name')}</th>\n            {additionalColumnsHeaders.map(h => (\n              <th key={h}>{h}</th>\n            ))}\n            <th className=\"action-small text-center\">\n              {translate('settings.almintegration.table.column.edit')}\n            </th>\n            <th className=\"action text-center\">\n              {translate('settings.almintegration.table.column.delete')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {definitions.length === 0 ? (\n            <tr data-test=\"settings__alm-empty-table\">\n              <td colSpan={3 + additionalColumnsHeaders.length}>\n                {translate('settings.almintegration.table.empty', alm)}\n              </td>\n            </tr>\n          ) : (\n            definitions.map(({ key, additionalColumns }) => (\n              <tr data-test=\"settings__alm-table-row\" key={key}>\n                <td className=\"nowrap hide-overflow\" title={key}>\n                  {key}\n                </td>\n                {additionalColumns.map(value => (\n                  <td className=\"nowrap hide-overflow\" key={value} title={value}>\n                    {value}\n                  </td>\n                ))}\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-edit\">\n                  <ButtonIcon disabled={loading} onClick={() => props.onEdit(key)}>\n                    <EditIcon />\n                  </ButtonIcon>\n                </td>\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-delete\">\n                  <DeleteButton disabled={loading} onClick={() => props.onDelete(key)} />\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\n\nexport interface AlmIntegrationFeatureBoxProps {\n  active: boolean;\n  description: React.ReactNode;\n  inactiveReason?: React.ReactNode;\n  name: React.ReactNode;\n}\n\nexport default function AlmIntegrationFeatureBox(props: AlmIntegrationFeatureBoxProps) {\n  const { active, description, inactiveReason, name } = props;\n\n  return (\n    <div\n      className={classNames(\n        'boxed-group-inner display-flex-start width-30 spacer-right spacer-bottom bordered',\n        {\n          'bg-muted': !active\n        }\n      )}>\n      {active ? (\n        <CheckIcon className=\"little-spacer-top spacer-right\" fill={colors.green} />\n      ) : (\n        <ClearIcon className=\"little-spacer-top spacer-right\" fill={colors.gray60} />\n      )}\n      <div className=\"display-flex-column abs-height-100\">\n        <h4>{name}</h4>\n\n        <div className=\"spacer-top flex-1\">{description}</div>\n\n        <div className=\"spacer-top\">\n          {active ? (\n            <em className=\"text-success\">{translate('settings.almintegration.feature.enabled')}</em>\n          ) : (\n            <em className=\"text-muted\">\n              {inactiveReason || translate('settings.almintegration.feature.disabled')}\n            </em>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionForm, {\n  AlmBindingDefinitionFormChildrenProps\n} from './AlmBindingDefinitionForm';\nimport AlmBindingDefinitionsTable from './AlmBindingDefinitionsTable';\nimport AlmIntegrationFeatureBox, {\n  AlmIntegrationFeatureBoxProps\n} from './AlmIntegrationFeatureBox';\n\nexport interface AlmTabRendererProps<B> {\n  additionalColumnsHeaders: string[];\n  additionalColumnsKeys: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  editedDefinition?: B;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default function AlmTabRenderer<B extends AlmBindingDefinition>(\n  props: AlmTabRendererProps<B>\n) {\n  const {\n    additionalColumnsHeaders,\n    additionalColumnsKeys,\n    additionalTableInfo,\n    alm,\n    defaultBinding,\n    definitions,\n    editedDefinition,\n    features = [],\n    form,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    optionalFields,\n    submitting,\n    success,\n    help = (\n      <FormattedMessage\n        defaultMessage={translate(`settings.almintegration.${alm}.info`)}\n        id={`settings.almintegration.${alm}.info`}\n        values={{\n          link: (\n            <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n              {translate('learn_more')}\n            </Link>\n          )\n        }}\n      />\n    )\n  } = props;\n\n  let definition: B | undefined;\n  let mappedDefinitions: Array<{ key: string; additionalColumns: string[] }> = [];\n  let showEdit: boolean | undefined;\n\n  if (!multipleAlmEnabled) {\n    definition = editedDefinition;\n    if (definition === undefined && definitions.length > 0) {\n      definition = definitions[0];\n    }\n    showEdit = definition && editedDefinition === undefined;\n  } else {\n    mappedDefinitions = definitions.map(({ key, ...properties }) => {\n      const additionalColumns = additionalColumnsKeys.map(k => (properties as any)[k]);\n      return {\n        key,\n        additionalColumns\n      };\n    });\n  }\n\n  return (\n    <div className=\"big-padded\">\n      {multipleAlmEnabled ? (\n        <DeferredSpinner loading={loadingAlmDefinitions}>\n          <AlmBindingDefinitionsTable\n            additionalColumnsHeaders={additionalColumnsHeaders}\n            additionalTableInfo={additionalTableInfo}\n            alm={alm}\n            definitions={mappedDefinitions}\n            loading={loadingProjectCount}\n            onCreate={props.onCreate}\n            onDelete={props.onDelete}\n            onEdit={props.onEdit}\n          />\n\n          {editedDefinition && (\n            <AlmBindingDefinitionForm\n              bindingDefinition={editedDefinition}\n              help={help}\n              onCancel={props.onCancel}\n              onSubmit={props.onSubmit}\n              optionalFields={optionalFields}\n              showInModal={true}>\n              {form}\n            </AlmBindingDefinitionForm>\n          )}\n        </DeferredSpinner>\n      ) : (\n        <AlmBindingDefinitionForm\n          bindingDefinition={definition || defaultBinding}\n          help={help}\n          hideKeyField={true}\n          loading={loadingAlmDefinitions || loadingProjectCount || submitting}\n          onCancel={props.onCancel}\n          onDelete={definition ? props.onDelete : undefined}\n          onEdit={showEdit ? props.onEdit : undefined}\n          onSubmit={props.onSubmit}\n          optionalFields={optionalFields}\n          readOnly={showEdit}\n          success={success}>\n          {form}\n        </AlmBindingDefinitionForm>\n      )}\n\n      {features.length > 0 && (\n        <div className=\"big-spacer-top big-padded-top bordered-top\">\n          <h3 className=\"big-spacer-bottom\">{translate('settings.almintegration.features')}</h3>\n\n          <div className=\"display-flex-wrap\">\n            {features.map((feature, i) => (\n              <AlmIntegrationFeatureBox key={i} {...feature} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormChildrenProps } from './AlmBindingDefinitionForm';\nimport { AlmIntegrationFeatureBoxProps } from './AlmIntegrationFeatureBox';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props<B> {\n  alm: AlmKeys;\n  additionalColumnsHeaders?: string[];\n  additionalColumnsKeys?: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  createConfiguration: (data: B) => Promise<void>;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n  optionalFields?: Array<keyof B>;\n  updateConfiguration: (data: B & { newKey?: string }) => Promise<void>;\n}\n\ninterface State<B> {\n  editedDefinition?: B;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default class AlmTab<B extends AlmBindingDefinition> extends React.PureComponent<\n  Props<B>,\n  State<B>\n> {\n  mounted = false;\n  state: State<B> = { submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined,\n      success: false\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: this.props.defaultBinding, success: false });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition, success: false });\n  };\n\n  handleSubmit = (config: B, originalKey: string) => {\n    const call = originalKey\n      ? this.props.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : // If there's no support for multi-ALM binding, the key will be an empty string.\n        // Set a default.\n        this.props.createConfiguration(config.key ? config : { ...config, key: this.props.alm });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined, submitting: false, success: true });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      additionalColumnsHeaders = [],\n      additionalColumnsKeys = [],\n      additionalTableInfo,\n      alm,\n      defaultBinding,\n      definitions,\n      features,\n      form,\n      help,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled,\n      optionalFields\n    } = this.props;\n    const { editedDefinition, submitting, success } = this.state;\n\n    return (\n      <AlmTabRenderer\n        additionalColumnsHeaders={additionalColumnsHeaders}\n        additionalColumnsKeys={additionalColumnsKeys}\n        additionalTableInfo={additionalTableInfo}\n        alm={alm}\n        defaultBinding={defaultBinding}\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        features={features}\n        form={form}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n        optionalFields={optionalFields}\n        submitting={submitting}\n        success={success}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionFormFieldProps<B extends AlmBindingDefinition> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  optional?: boolean;\n  propKey: keyof B;\n  readOnly?: boolean;\n  value: string;\n}\n\nexport function AlmBindingDefinitionFormField<B extends AlmBindingDefinition>(\n  props: AlmBindingDefinitionFormFieldProps<B>\n) {\n  const {\n    autoFocus,\n    help,\n    id,\n    isTextArea,\n    maxLength,\n    onFieldChange,\n    optional,\n    propKey,\n    readOnly = false,\n    value\n  } = props;\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.almintegration.form', id)}\n        {!optional && <em className=\"mandatory\">*</em>}\n        {help && <HelpTooltip className=\"spacer-left\" overlay={help} placement=\"right\" />}\n      </label>\n      {isTextArea ? (\n        <textarea\n          className=\"settings-large-input\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          required={!optional}\n          rows={5}\n          value={value}\n        />\n      ) : (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface AzureFormProps {\n  formData: AzureBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function AzureForm(props: AzureFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.azure.help')}\n          id=\"name.azure\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport AzureForm from './AzureForm';\n\nexport interface AzureTabProps {\n  definitions: AzureBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function AzureTab(props: AzureTabProps) {\n  const { multipleAlmEnabled, definitions, loadingAlmDefinitions, loadingProjectCount } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.Azure}\n        createConfiguration={createAzureConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          }\n        ]}\n        form={childProps => <AzureForm {...childProps} />}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateAzureConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface BitbucketFormProps {\n  formData: BitbucketBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof BitbucketBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function BitbucketForm(props: BitbucketFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.bitbucket.help')}\n          id=\"name.bitbucket\"\n          maxLength={100}\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.form.url.bitbucket.help')}\n            id=\"settings.almintegration.form.url.bitbucket.help\"\n            values={{ example: 'https://bitbucket-server.your-company.com' }}\n          />\n        }\n        id=\"url.bitbucket\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  createBitbucketConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/alm-settings';\nimport { AlmKeys, BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport BitbucketForm from './BitbucketForm';\n\nexport interface BitbucketTabProps {\n  definitions: BitbucketBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function BitbucketTab(props: BitbucketTabProps) {\n  const { multipleAlmEnabled, definitions, loadingAlmDefinitions, loadingProjectCount } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        additionalColumnsHeaders={[translate('settings.almintegration.table.column.bitbucket.url')]}\n        additionalColumnsKeys={['url']}\n        additionalTableInfo={\n          <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n            <FormattedMessage\n              defaultMessage={translate(\n                'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances'\n              )}\n              id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances\"\n              values={{\n                feature: (\n                  <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                )\n              }}\n            />\n          </Alert>\n        }\n        alm={AlmKeys.Bitbucket}\n        createConfiguration={createBitbucketConfiguration}\n        defaultBinding={{ key: '', url: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          },\n          {\n            name: translate('settings.almintegration.feature.alm_repo_import.title'),\n            active: definitions.length === 1,\n            description: translate('settings.almintegration.feature.alm_repo_import.description'),\n            inactiveReason: translateWithParameters(\n              'settings.almintegration.feature.alm_repo_import.bitbucket.wrong_count_x',\n              definitions.length\n            )\n          }\n        ]}\n        form={childProps => <BitbucketForm {...childProps} />}\n        help={\n          <>\n            <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n            <p className=\"big-spacer-top\">\n              {translate('settings.almintegration.bitbucket.help_1')}\n            </p>\n\n            <ul className=\"big-spacer-top list-styled\">\n              <li>{translate('settings.almintegration.bitbucket.help_2')}</li>\n              <li>{translate('settings.almintegration.bitbucket.help_3')}</li>\n            </ul>\n\n            <p className=\"big-spacer-top big-spacer-bottom\">\n              <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n                {translate('learn_more')}\n              </Link>\n            </p>\n          </>\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateBitbucketConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: T.Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<T.SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in T.SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited,\n  sanitizeTranslation\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: T.Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: T.Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success: boolean;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false,\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: false, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: true, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {this.state.success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters(\n                  'email_configuration.test.email_was_sent_to_x',\n                  this.state.recipient\n                )}\n              </Alert>\n            </div>\n          )}\n\n          {this.state.error != null && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{this.state.error}</Alert>\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={this.state.recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={this.state.subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={this.state.message}\n            />\n          </div>\n\n          <SubmitButton disabled={this.state.loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {this.state.loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { getSubCategoryDescription, getSubCategoryName, sanitizeTranslation } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<T.Setting & { definition: T.SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GithubFormProps {\n  formData: GithubBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GithubForm(props: GithubFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.github.help')}\n          id=\"name.github\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        readOnly={readOnly}\n        value={formData.appId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"clientId\"\n        readOnly={readOnly}\n        value={formData.clientId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_secret\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"clientSecret\"\n        readOnly={readOnly}\n        value={formData.clientSecret}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"privateKey\"\n        readOnly={readOnly}\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport WarningIcon from 'sonar-ui-common/components/icons/WarningIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GithubForm from './GithubForm';\n\nexport interface GithubTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GithubBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GithubTab(props: GithubTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.github.url'),\n              translate('settings.almintegration.table.column.app_id')\n            ]}\n            additionalColumnsKeys={['url', 'appId']}\n            additionalTableInfo={\n              <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_github_instances'\n                  )}\n                  id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_github_instances\"\n                  values={{\n                    feature: (\n                      <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                    )\n                  }}\n                />\n              </Alert>\n            }\n            alm={AlmKeys.GitHub}\n            createConfiguration={createGithubConfiguration}\n            defaultBinding={{\n              key: '',\n              appId: '',\n              clientId: '',\n              clientSecret: '',\n              url: '',\n              privateKey: ''\n            }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.pr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.pr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              },\n              {\n                name: translate('settings.almintegration.feature.alm_repo_import.title'),\n                active:\n                  definitions.length === 1 &&\n                  !!definitions[0].clientId &&\n                  !!definitions[0].clientSecret,\n                description: translate(\n                  'settings.almintegration.feature.alm_repo_import.description'\n                ),\n                inactiveReason:\n                  definitions.length === 1 ? (\n                    <>\n                      <WarningIcon className=\"little-spacer-right\" />\n                      <FormattedMessage\n                        id=\"settings.almintegration.feature.alm_repo_import.github.requires_fields\"\n                        defaultMessage={translate(\n                          'settings.almintegration.feature.alm_repo_import.github.requires_fields'\n                        )}\n                        values={{\n                          clientId: <strong>clientId</strong>,\n                          clientSecret: <strong>clientSecret</strong>\n                        }}\n                      />\n                    </>\n                  ) : (\n                    translateWithParameters(\n                      'settings.almintegration.feature.alm_repo_import.github.wrong_count_x',\n                      definitions.length\n                    )\n                  )\n              }\n            ]}\n            form={childProps => <GithubForm {...childProps} />}\n            loadingAlmDefinitions={loadingAlmDefinitions}\n            loadingProjectCount={loadingProjectCount}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            updateConfiguration={updateGithubConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitHub}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GitlabFormProps {\n  formData: GitlabBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GitlabForm(props: GitlabFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.gitlab.help')}\n          id=\"name.gitlab\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.gitlab.help')}\n            <br />\n            <em>https://gitlab.com/api/v4</em>\n          </>\n        }\n        id=\"url.gitlab\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GitlabForm from './GitlabForm';\n\nexport interface GitlabTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GitlabBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GitlabTab(props: GitlabTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  const importFeatureEnabled = Boolean(definitions.length === 1 && definitions[0].url);\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.gitlab.url')\n            ]}\n            additionalColumnsKeys={['url']}\n            additionalTableInfo={\n              <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_gitlab_instances'\n                  )}\n                  id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_gitlab_instances\"\n                  values={{\n                    feature: (\n                      <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                    )\n                  }}\n                />\n              </Alert>\n            }\n            alm={AlmKeys.GitLab}\n            createConfiguration={createGitlabConfiguration}\n            defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.mr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.mr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              },\n              {\n                name: translate('settings.almintegration.feature.alm_repo_import.title'),\n                active: importFeatureEnabled,\n                description: translate(\n                  'settings.almintegration.feature.alm_repo_import.description'\n                ),\n                inactiveReason:\n                  definitions.length === 1\n                    ? translate(\n                        'settings.almintegration.feature.alm_repo_import.gitlab.requires_fields'\n                      )\n                    : translateWithParameters(\n                        'settings.almintegration.feature.alm_repo_import.gitlab.wrong_count_x',\n                        definitions.length\n                      )\n              }\n            ]}\n            form={childProps => <GitlabForm {...childProps} />}\n            loadingAlmDefinitions={loadingAlmDefinitions}\n            loadingProjectCount={loadingProjectCount}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            updateConfiguration={updateGitlabConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitLab}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: AlmKeys) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    )\n  },\n  {\n    key: AlmKeys.Bitbucket,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    )\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    component,\n    definitionKeyForDeletion,\n    definitions,\n    currentAlm,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={tabs.filter(tab => !(tab.requiresBranchesEnabled && !branchesEnabled))}\n      />\n\n      {currentAlm === AlmKeys.Azure && (\n        <AzureTab\n          definitions={definitions.azure}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.Bitbucket && (\n        <BitbucketTab\n          definitions={definitions.bitbucket}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitHub && (\n        <GithubTab\n          branchesEnabled={branchesEnabled}\n          component={component}\n          definitions={definitions.github}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitLab && (\n        <GitlabTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.gitlab}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n  component?: T.Component;\n}\n\ninterface State {\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    currentAlm: AlmKeys.GitHub,\n    definitions: {\n      [AlmKeys.Azure]: [],\n      [AlmKeys.Bitbucket]: [],\n      [AlmKeys.GitHub]: [],\n      [AlmKeys.GitLab]: []\n    },\n    loadingAlmDefinitions: true,\n    loadingProjectCount: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPullRequestDecorationSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    const {\n      appState: { branchesEnabled }\n    } = this.props;\n\n    if (!branchesEnabled) {\n      return Promise.resolve();\n    }\n\n    this.setState({ loadingAlmDefinitions: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loadingAlmDefinitions: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingAlmDefinitions: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: AlmKeys) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loadingProjectCount: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loadingProjectCount: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingProjectCount: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled },\n      component\n    } = this.props;\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        component={component}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default withAppState(AlmIntegration);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nconst CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  'javascript / typescript': LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n\nexport default CATEGORY_OVERRIDES;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport InputForBoolean from '../inputs/InputForBoolean';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  saving: boolean;\n  success: boolean;\n}\n\ninterface LabelProps {\n  help?: boolean;\n  helpParams?: T.Dict<string | JSX.Element>;\n  id: string;\n  optional?: boolean;\n}\n\ninterface CommonFieldProps extends LabelProps {\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  propKey: keyof ProjectAlmBindingResponse;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nfunction renderLabel(props: LabelProps) {\n  const { help, helpParams, optional, id } = props;\n  return (\n    <label className=\"display-flex-center\" htmlFor={id}>\n      {translate('settings.pr_decoration.binding.form', id)}\n      {!optional && <em className=\"mandatory\">*</em>}\n      {help && (\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={\n            <FormattedMessage\n              defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n              id={`settings.pr_decoration.binding.form.${id}.help`}\n              values={helpParams}\n            />\n          }\n          placement=\"right\"\n        />\n      )}\n    </label>\n  );\n}\n\nfunction renderBooleanField(\n  props: Omit<CommonFieldProps, 'optional'> & {\n    value: boolean;\n  }\n) {\n  const { id, value, onFieldChange, propKey } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel({ ...props, optional: true })}\n      <InputForBoolean\n        isDefault={true}\n        name={id}\n        onChange={v => onFieldChange(propKey, v)}\n        value={value}\n      />\n    </div>\n  );\n}\n\nfunction renderField(\n  props: CommonFieldProps & {\n    value: string;\n  }\n) {\n  const { id, propKey, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel(props)}\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData: { key, repository, slug, summaryCommentEnabled },\n    instances,\n    isChanged,\n    isConfigured,\n    isValid,\n    loading,\n    saving,\n    success\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = key && instances.find(i => i.key === key);\n  const alm = selected && selected.alm;\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <em className=\"mandatory spacer-right\">*</em>\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm === AlmKeys.Bitbucket && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/'}\n                    <strong>{'{KEY}'}</strong>\n                    {'/repos/{SLUG}/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/{KEY}/repos/'}\n                    <strong>{'{SLUG}'}</strong>\n                    {'/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.slug',\n              onFieldChange: props.onFieldChange,\n              propKey: 'slug',\n              value: slug || ''\n            })}\n          </>\n        )}\n\n        {alm === AlmKeys.GitHub && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: { example: 'SonarSource/sonarqube' },\n              id: 'github.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderBooleanField({\n              help: true,\n              id: 'github.summary_comment_setting',\n              onFieldChange: props.onFieldChange,\n              propKey: 'summaryCommentEnabled',\n              value: summaryCommentEnabled === undefined ? true : summaryCommentEnabled\n            })}\n          </>\n        )}\n\n        {alm === AlmKeys.GitLab &&\n          renderField({\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {isConfigured && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ntype FormData = T.Omit<ProjectAlmBindingResponse, 'alm'>;\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: FormData;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  orignalData?: FormData;\n  saving: boolean;\n  success: boolean;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<FormData, 'key'>>;\n} = {\n  [AlmKeys.Azure]: [],\n  [AlmKeys.Bitbucket]: ['repository', 'slug'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: ['repository']\n};\n\nexport default class PRDecorationBinding extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '' },\n    instances: [],\n    isChanged: false,\n    isConfigured: false,\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isChanged: false,\n              isConfigured: !!originalData,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              orignalData: newFormData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBindingResponse | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === 404) {\n        return undefined;\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: ''\n            },\n            isChanged: false,\n            isConfigured: false,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<FormData, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n\n    switch (alm) {\n      case AlmKeys.Azure:\n        return setProjectAzureBinding({\n          almSetting,\n          project\n        });\n      case AlmKeys.Bitbucket: {\n        if (!almSpecificFields) {\n          return Promise.reject();\n        }\n        const { repository = '', slug = '' } = almSpecificFields;\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug\n        });\n      }\n      case AlmKeys.GitHub: {\n        const repository = almSpecificFields?.repository;\n        // By default it must remain true.\n        const summaryCommentEnabled =\n          almSpecificFields?.summaryCommentEnabled === undefined\n            ? true\n            : almSpecificFields?.summaryCommentEnabled;\n        if (!repository) {\n          return Promise.reject();\n        }\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository,\n          summaryCommentEnabled\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .then(this.fetchDefinitions)\n      .catch(this.catchError);\n  };\n\n  isDataSame(\n    { key, repository = '', slug = '', summaryCommentEnabled = false }: FormData,\n    {\n      key: oKey = '',\n      repository: oRepository = '',\n      slug: oSlug = '',\n      summaryCommentEnabled: osummaryCommentEnabled = false\n    }: FormData\n  ) {\n    return (\n      key === oKey &&\n      repository === oRepository &&\n      slug === oSlug &&\n      summaryCommentEnabled === osummaryCommentEnabled\n    );\n  }\n\n  handleFieldChange = (id: keyof ProjectAlmBindingResponse, value: string | boolean) => {\n    this.setState(({ formData, orignalData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        isChanged: !this.isDataSame(newFormData, orignalData || { key: '' }),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\ninterface Category {\n  key: string;\n  name: string;\n}\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport class CategoriesList extends React.PureComponent<CategoriesListProps> {\n  renderLink(category: Category) {\n    const { component, defaultCategory, selectedCategory } = this.props;\n    const pathname = this.props.component ? '/project/settings' : '/settings';\n    const query = {\n      category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n      id: component && component.key\n    };\n    return (\n      <IndexLink\n        className={classNames({\n          active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n        })}\n        title={category.name}\n        to={{ pathname, query }}>\n        {category.name}\n      </IndexLink>\n    );\n  }\n\n  render() {\n    const { branchesEnabled } = this.props;\n\n    const categoriesWithName = this.props.categories\n      .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n      .map(key => ({\n        key,\n        name: getCategoryName(key)\n      }))\n      .concat(\n        ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n          .filter(c =>\n            this.props.component\n              ? // Project settings\n                c.availableForProject\n              : // Global settings\n                c.availableGlobally\n          )\n          .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n      );\n    const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n    return (\n      <ul className=\"side-tabs-menu\">\n        {sortedCategories.map(category => (\n          <li key={category.key}>{this.renderLink(category)}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\ninterface Props {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: Props) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{title}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport '../side-tabs.css';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div className=\"page page-limited\" id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n\n        <PageHeader component={this.props.component} />\n\n        <div className=\"side-tabs-layout settings-layout\">\n          <div className=\"side-tabs-side\">\n            <AllCategoriesList\n              component={this.props.component}\n              defaultCategory={this.props.defaultCategory}\n              selectedCategory={selectedCategory}\n            />\n          </div>\n          <div className=\"side-tabs-main\">\n            {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n              foundAdditionalCategory.renderComponent({\n                component: this.props.component,\n                selectedCategory: originalCategory\n              })\n            ) : (\n              <CategoryDefinitionsList\n                category={selectedCategory}\n                component={this.props.component}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  clientId: string;\n  clientSecret: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBindingResponse {\n  alm: AlmKeys;\n  key: string;\n  repository?: string;\n  slug?: string;\n  summaryCommentEnabled?: boolean;\n}\n\nexport interface ProjectBitbucketBindingResponse extends ProjectAlmBindingResponse {\n  alm: AlmKeys.Bitbucket;\n  repository: string;\n  slug: string;\n}\n\nexport interface ProjectGitHubBindingResponse extends ProjectAlmBindingResponse {\n  alm: AlmKeys.GitHub;\n  repository: string;\n}\n\nexport interface ProjectGitLabBindingResponse extends ProjectAlmBindingResponse {\n  alm: AlmKeys.GitLab;\n  repository: string;\n  url: string;\n}\n\nexport interface ProjectAlmBindingParams {\n  almSetting: string;\n  project: string;\n}\n\nexport interface AzureProjectAlmBindingParams extends ProjectAlmBindingParams {}\n\nexport interface BitbucketProjectAlmBindingParams extends ProjectAlmBindingParams {\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBindingParams extends ProjectAlmBindingParams {\n  repository: string;\n  summaryCommentEnabled: boolean;\n}\n\nexport interface GitlabProjectAlmBindingParams extends ProjectAlmBindingParams {\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  [AlmKeys.Azure]: AzureBindingDefinition[];\n  [AlmKeys.Bitbucket]: BitbucketBindingDefinition[];\n  [AlmKeys.GitHub]: GithubBindingDefinition[];\n  [AlmKeys.GitLab]: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBindingParams,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getAlmDefinitionsNoCatch().catch(throwGlobalError);\n}\n\nexport function getAlmDefinitionsNoCatch(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getDefinitions(component?: string): Promise<T.SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<T.SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: T.SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n"],"sourceRoot":""}