{"version":3,"sources":["webpack:///./src/main/js/components/workspace/WorkspaceRuleTitle.tsx","webpack:///./src/main/js/components/workspace/WorkspaceHeader.tsx","webpack:///./src/main/js/components/workspace/WorkspaceRuleDetails.tsx","webpack:///./src/main/js/components/workspace/WorkspaceRuleViewer.tsx"],"names":["WorkspaceRuleTitle","limited","rule","name","className","fill","blue","handleDrag","_event","data","props","onResize","deltaY","render","this","children","offsetParent","document","body","onDrag","WorkspaceHeaderButton","icon","onClick","onCollapse","tooltip","maximized","onMinimize","onMaximize","onClose","color","Icon","undefined","mounted","state","loading","referencedRepositories","fetchRuleDetails","setState","Promise","all","organizationKey","key","ruleKey","organization","then","repositories","ruleDetails","onLoad","noOp","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","organizationsEnabled","RuleDetailsMeta","canWrite","hideSimilarRulesFilter","onFilterChange","onTagsChange","RuleDetailsDescription","onChange","withAppState","handleClose","handleLoaded","setTimeout","WorkspaceHeader","style","height"],"mappings":"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","file":"js/352.1601658702741.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport LightBulbIcon from 'sonar-ui-common/components/icons/LightBulbIcon';\nimport { colors } from '../../app/theme';\nimport { RuleDescriptor } from './context';\n\ninterface Props {\n  limited?: boolean;\n  rule: RuleDescriptor;\n}\n\nexport default function WorkspaceRuleTitle({ limited, rule }: Props) {\n  const { name = 'â€”' } = rule;\n  return (\n    <>\n      <LightBulbIcon className=\"little-spacer-right\" fill={colors.blue} />\n      {limited ? <span className=\"text-limited\">{name}</span> : name}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DraggableCore, DraggableData } from 'react-draggable';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport CollapseIcon from 'sonar-ui-common/components/icons/CollapseIcon';\nimport ExpandIcon from 'sonar-ui-common/components/icons/ExpandIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport MinimizeIcon from 'sonar-ui-common/components/icons/MinimizeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  children: React.ReactNode;\n  maximized?: boolean;\n  onClose: () => void;\n  onCollapse: () => void;\n  onMaximize: () => void;\n  onMinimize: () => void;\n  onResize: (deltaY: number) => void;\n}\n\nexport default class WorkspaceHeader extends React.PureComponent<Props> {\n  handleDrag = (_event: MouseEvent, data: DraggableData) => {\n    this.props.onResize(data.deltaY);\n  };\n\n  render() {\n    return (\n      <header className=\"workspace-viewer-header\">\n        <h6 className=\"workspace-viewer-name\">{this.props.children}</h6>\n\n        <DraggableCore offsetParent={document.body} onDrag={this.handleDrag}>\n          <div className=\"workspace-viewer-resize js-resize\" />\n        </DraggableCore>\n\n        <div className=\"workspace-viewer-actions\">\n          <WorkspaceHeaderButton\n            icon={MinimizeIcon}\n            onClick={this.props.onCollapse}\n            tooltip=\"workspace.minimize\"\n          />\n\n          {this.props.maximized ? (\n            <WorkspaceHeaderButton\n              icon={CollapseIcon}\n              onClick={this.props.onMinimize}\n              tooltip=\"workspace.normal_size\"\n            />\n          ) : (\n            <WorkspaceHeaderButton\n              icon={ExpandIcon}\n              onClick={this.props.onMaximize}\n              tooltip=\"workspace.full_window\"\n            />\n          )}\n\n          <WorkspaceHeaderButton\n            icon={ClearIcon}\n            onClick={this.props.onClose}\n            tooltip=\"workspace.close\"\n          />\n        </div>\n      </header>\n    );\n  }\n}\n\ninterface WorkspaceHeaderButtonProps {\n  icon: React.SFC<IconProps>;\n  onClick: () => void;\n  tooltip: string;\n}\n\nfunction WorkspaceHeaderButton({ icon: Icon, onClick, tooltip }: WorkspaceHeaderButtonProps) {\n  return (\n    <ButtonIcon\n      className=\"workspace-header-icon\"\n      color=\"#fff\"\n      onClick={onClick}\n      tooltip={translate(tooltip)}>\n      <Icon fill={undefined} />\n    </ButtonIcon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { getRuleDetails, getRulesApp } from '../../api/rules';\nimport RuleDetailsDescription from '../../apps/coding-rules/components/RuleDetailsDescription';\nimport RuleDetailsMeta from '../../apps/coding-rules/components/RuleDetailsMeta';\nimport '../../apps/coding-rules/styles.css';\nimport { withAppState } from '../hoc/withAppState';\n\ninterface Props {\n  appState: Pick<T.AppState, 'organizationsEnabled'>;\n  onLoad: (details: { name: string }) => void;\n  organizationKey: string | undefined;\n  ruleKey: string;\n}\n\ninterface State {\n  loading: boolean;\n  referencedRepositories: T.Dict<{ key: string; language: string; name: string }>;\n  ruleDetails?: T.RuleDetails;\n}\n\nexport class WorkspaceRuleDetails extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true, referencedRepositories: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRuleDetails();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.ruleKey !== this.props.ruleKey ||\n      prevProps.organizationKey !== this.props.organizationKey\n    ) {\n      this.fetchRuleDetails();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRuleDetails = () => {\n    this.setState({ loading: true });\n    Promise.all([\n      getRulesApp(this.props.organizationKey),\n      getRuleDetails({ key: this.props.ruleKey, organization: this.props.organizationKey })\n    ]).then(\n      ([{ repositories }, { rule }]) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            referencedRepositories: keyBy(repositories, 'key'),\n            ruleDetails: rule\n          });\n          this.props.onLoad({ name: rule.name });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  noOp = () => {};\n\n  render() {\n    const { organizationKey } = this.props;\n    const { organizationsEnabled } = this.props.appState;\n    const organization = organizationsEnabled ? organizationKey : undefined;\n\n    return (\n      <DeferredSpinner loading={this.state.loading}>\n        {this.state.ruleDetails && (\n          <>\n            <RuleDetailsMeta\n              canWrite={false}\n              hideSimilarRulesFilter={true}\n              onFilterChange={this.noOp}\n              onTagsChange={this.noOp}\n              organization={organization}\n              referencedRepositories={this.state.referencedRepositories}\n              ruleDetails={this.state.ruleDetails}\n            />\n            <RuleDetailsDescription\n              canWrite={false}\n              onChange={this.noOp}\n              organization={organization}\n              ruleDetails={this.state.ruleDetails}\n            />\n          </>\n        )}\n      </DeferredSpinner>\n    );\n  }\n}\n\nexport default withAppState(WorkspaceRuleDetails);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { RuleDescriptor } from './context';\nimport WorkspaceHeader, { Props as WorkspaceHeaderProps } from './WorkspaceHeader';\nimport WorkspaceRuleDetails from './WorkspaceRuleDetails';\nimport WorkspaceRuleTitle from './WorkspaceRuleTitle';\n\nexport interface Props extends T.Omit<WorkspaceHeaderProps, 'children' | 'onClose'> {\n  rule: RuleDescriptor;\n  height: number;\n  onClose: (componentKey: string) => void;\n  onLoad: (details: { key: string; name: string }) => void;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class WorkspaceRuleViewer extends React.PureComponent<Props> {\n  state: State = { loading: true };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.rule.key !== this.props.rule.key) {\n      this.setState({ loading: true });\n    }\n  }\n\n  handleClose = () => {\n    this.props.onClose(this.props.rule.key);\n  };\n\n  handleLoaded = (rule: { name: string }) => {\n    this.props.onLoad({ key: this.props.rule.key, name: rule.name });\n    // Allow time for the actual rendering, and the browser to pick it up.\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 1000);\n  };\n\n  render() {\n    const { rule } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div className=\"workspace-viewer\">\n        <WorkspaceHeader\n          maximized={this.props.maximized}\n          onClose={this.handleClose}\n          onCollapse={this.props.onCollapse}\n          onMaximize={this.props.onMaximize}\n          onMinimize={this.props.onMinimize}\n          onResize={this.props.onResize}>\n          <WorkspaceRuleTitle rule={rule} />\n        </WorkspaceHeader>\n\n        <div\n          aria-busy={loading}\n          aria-live=\"polite\"\n          className=\"workspace-viewer-container\"\n          style={{ height: this.props.height }}>\n          <WorkspaceRuleDetails\n            onLoad={this.handleLoaded}\n            organizationKey={rule.organization}\n            ruleKey={rule.key}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}