{"version":3,"sources":["webpack:///./src/main/js/apps/account/organizations/OrganizationCard.tsx","webpack:///./src/main/js/apps/account/organizations/OrganizationsList.tsx","webpack:///./src/main/js/apps/account/organizations/UserOrganizations.tsx","webpack:///./src/main/js/apps/account/organizations/actions.ts","webpack:///./node_modules/lodash/pickBy.js","webpack:///./node_modules/lodash/omitBy.js","webpack:///./node_modules/lodash/negate.js","webpack:///./src/main/js/api/settings.ts"],"names":["OrganizationCard","organization","actions","className","key","OrganizationAvatar","OrganizationLink","name","admin","description","url","href","rel","title","OrganizationsList","organizations","length","map","mounted","state","loading","stopLoading","setState","componentDidMount","this","props","fetchIfAnyoneCanCreateOrganizations","then","componentWillUnmount","render","anyoneCanCreate","canCreateOrganizations","canAdmin","to","mapDispatchToProps","dispatch","keys","values","Boolean","value","arrayMap","baseIteratee","basePickBy","getAllKeysIn","module","exports","object","predicate","prop","path","negate","pickBy","TypeError","args","arguments","call","apply","getDefinitions","component","r","getValues","data","setSettingValue","definition","multiValues","type","fieldValues","fields","JSON","stringify","resetSettingValue","sendTestEmail","subject","message","checkSecretKey","catch","generateSecretKey","encryptValue"],"mappings":"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","file":"js/331.1601658702741.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport OrganizationLink from '../../../components/ui/OrganizationLink';\n\ninterface Props {\n  organization: T.Organization;\n}\n\nexport default function OrganizationCard({ organization }: Props) {\n  const { actions = {} } = organization;\n  return (\n    <div className=\"account-project-card clearfix\">\n      <aside className=\"account-project-side note\">\n        <strong>{translate('organization.key')}:</strong> {organization.key}\n      </aside>\n\n      <h3 className=\"account-project-name\">\n        <OrganizationAvatar organization={organization} />\n        <OrganizationLink className=\"spacer-left text-middle\" organization={organization}>\n          {organization.name}\n        </OrganizationLink>\n        {actions.admin && <span className=\"badge spacer-left\">{translate('admin')}</span>}\n      </h3>\n\n      {!!organization.description && (\n        <div className=\"markdown spacer-top\">{organization.description}</div>\n      )}\n\n      {!!organization.url && (\n        <div className=\"markdown spacer-top\">\n          <a href={organization.url} rel=\"nofollow\" title={organization.url}>\n            {organization.url}\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport OrganizationCard from './OrganizationCard';\n\ninterface Props {\n  organizations: T.Organization[];\n}\n\nexport default function OrganizationsList({ organizations }: Props) {\n  if (organizations.length === 0) {\n    return <div>{translate('my_account.organizations.no_results')}</div>;\n  }\n\n  return (\n    <ul className=\"account-projects-list\">\n      {sortBy(organizations, organization => organization.name.toLocaleLowerCase()).map(\n        organization => (\n          <li key={organization.key}>\n            <OrganizationCard organization={organization} />\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getAppState,\n  getGlobalSettingValue,\n  getMyOrganizations,\n  Store\n} from '../../../store/rootReducer';\nimport { fetchIfAnyoneCanCreateOrganizations } from './actions';\nimport OrganizationsList from './OrganizationsList';\n\ninterface StateProps {\n  anyoneCanCreate: boolean;\n  canAdmin?: boolean;\n  organizations: T.Organization[];\n}\n\ninterface DispatchProps {\n  fetchIfAnyoneCanCreateOrganizations: () => Promise<void>;\n}\n\ninterface Props extends StateProps, DispatchProps {}\n\ninterface State {\n  loading: boolean;\n}\n\nclass UserOrganizations extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchIfAnyoneCanCreateOrganizations().then(this.stopLoading, this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { anyoneCanCreate } = this.props;\n    const canCreateOrganizations = !this.state.loading && (anyoneCanCreate || this.props.canAdmin);\n\n    return (\n      <div className=\"account-body account-container\">\n        <Helmet title={translate('my_account.organizations')} />\n\n        <div className=\"boxed-group\">\n          {canCreateOrganizations && (\n            <div className=\"clearfix\">\n              <div className=\"boxed-group-actions\">\n                <Link className=\"button\" to=\"/create-organization\">\n                  {translate('create')}\n                </Link>\n              </div>\n            </div>\n          )}\n          <div className=\"boxed-group-inner\">\n            {this.state.loading ? (\n              <i className=\"spinner\" />\n            ) : (\n              <OrganizationsList organizations={this.props.organizations} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => {\n  const anyoneCanCreate = getGlobalSettingValue(state, 'sonar.organizations.anyoneCanCreate');\n  return {\n    anyoneCanCreate: Boolean(anyoneCanCreate && anyoneCanCreate.value === 'true'),\n    canAdmin: getAppState(state).canAdmin,\n    organizations: getMyOrganizations(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchIfAnyoneCanCreateOrganizations: fetchIfAnyoneCanCreateOrganizations as any\n} as DispatchProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserOrganizations);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { getOrganizations } from '../../../api/organizations';\nimport { getValues } from '../../../api/settings';\nimport { receiveMyOrganizations } from '../../../store/organizations';\nimport { receiveValues } from '../../settings/store/values';\n\nexport const fetchMyOrganizations = () => (dispatch: Dispatch) => {\n  return getOrganizations({ member: true }).then(({ organizations }) => {\n    return dispatch(receiveMyOrganizations(organizations));\n  });\n};\n\nexport const fetchIfAnyoneCanCreateOrganizations = () => (dispatch: Dispatch) => {\n  return getValues({ keys: 'sonar.organizations.anyoneCanCreate' }).then(values => {\n    dispatch(receiveValues(values));\n  });\n};\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getDefinitions(component?: string): Promise<T.SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<T.SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: T.SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n"],"sourceRoot":""}