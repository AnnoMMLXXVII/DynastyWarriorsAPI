{"version":3,"sources":["webpack:///./src/main/js/apps/projectQualityGate/Form.tsx","webpack:///./src/main/js/apps/projectQualityGate/Header.tsx","webpack:///./src/main/js/apps/projectQualityGate/App.tsx","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.js","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.css?2512","webpack:///./node_modules/sonar-ui-common/components/controls/HelpTooltip.css","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts"],"names":["mounted","state","loading","stopLoading","setState","handleChange","option","gate","isSet","value","isUnset","isChanged","id","props","onChange","then","renderGateName","isDefault","label","componentDidMount","this","componentWillUnmount","renderSelect","options","allGates","map","String","name","clearable","disabled","optionRenderer","style","width","valueRenderer","render","className","Header","overlay","handleChangeGate","oldId","newId","Promise","resolve","component","requestData","gateId","organization","projectKey","key","addGlobalSuccessMessage","newGate","find","onComponentChange","qualityGate","undefined","checkPermissions","fetchQualityGates","handleRequiredAuthorization","configuration","showQualityGates","all","project","qualityGateList","qualitygates","Suggestions","suggestions","defer","title","A11ySkipTarget","anchor","Object","defineProperty","exports","classNames","React","HelpIcon_1","theme_1","Tooltip_1","default","_a","tagName","createElement","mouseLeaveDelay","onShow","placement","children","ThemeConsumer","theme","fill","colors","gray71","size","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps","api","content","__esModule","module","i","exported","locals","___CSS_LOADER_API_IMPORT___","push","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","message","dispatch","store","history","returnTo","window","location","pathname","search","hash","replace","query","return_to"],"mappings":"yfAuCA,uE,OACE,EAAAA,SAAU,EACV,EAAAC,MAAe,CAAEC,SAAS,GAU1B,EAAAC,YAAc,WACR,EAAKH,SACP,EAAKI,SAAS,CAAEF,SAAS,KAI7B,EAAAG,aAAe,SAACC,GACN,IAAAC,EAAA,QAAAA,KAEFC,EAAgB,MAARD,GAAgC,MAAhBD,EAAOG,MAC/BC,EAAkB,MAARH,GAAgC,MAAhBD,EAAOG,MACjCE,EAAoB,MAARJ,GAAgBA,EAAKK,KAAON,EAAOG,OAClCD,GAASE,GAAWC,KAGrC,EAAKP,SAAS,CAAEF,SAAS,IACzB,EAAKW,MAAMC,SAASP,GAAQA,EAAKK,GAAIN,EAAOG,OAAOM,KAAK,EAAKZ,YAAa,EAAKA,eAInF,EAAAa,eAAiB,SAACV,GAChB,OAAIA,EAAOW,UAEP,4BACE,8BAAS,oBAAU,YAClB,KACAX,EAAOY,OAKP,4BAAOZ,EAAOY,Q,EAkCzB,OA7EkC,OAIhC,YAAAC,kBAAA,WACEC,KAAKpB,SAAU,GAGjB,YAAAqB,qBAAA,WACED,KAAKpB,SAAU,GAqCjB,YAAAsB,aAAA,WACQ,iBAAEf,EAAA,EAAAA,KAEFgB,EAFQ,EAAAC,SAEqBC,KAAI,SAAAlB,GAAQ,MAAC,CAC9CE,MAAOiB,OAAOnB,EAAKK,IACnBM,MAAOX,EAAKoB,KACZV,UAAWV,EAAKU,cAGlB,OACE,gBAAC,IAAM,CACLW,WAAW,EACXC,SAAUT,KAAKnB,MAAMC,QACrBY,SAAUM,KAAKf,aACfyB,eAAgBV,KAAKJ,eACrBO,QAASA,EACTQ,MAAO,CAAEC,MAAO,KAChBvB,MAAOF,GAAQmB,OAAOnB,EAAKK,IAC3BqB,cAAeb,KAAKJ,kBAK1B,YAAAkB,OAAA,WACE,OACE,2BACGd,KAAKE,eACLF,KAAKnB,MAAMC,SAAW,qBAAGiC,UAAU,0BAI5C,EA7EA,CAAkC,iB,kBChBpB,SAAUC,IACtB,OACE,0BAAQD,UAAU,eAChB,uBAAKA,UAAU,kCACb,0BAAK,oBAAU,8BACf,gBAAC,IAAW,CACVA,UAAU,cACVE,QACE,uBAAKF,UAAU,oCACZ,oBAAU,mCAKnB,uBAAKA,UAAU,oBAAoB,oBAAU,2C,+UCSnD,yE,OACE,EAAAnC,SAAU,EACV,EAAAC,MAAe,CAAEC,SAAS,GA6C1B,EAAAoC,iBAAmB,SAACC,EAAgBC,GAC1B,IAAAhB,EAAA,QAAAA,SACR,IAAMe,IAAUC,IAAWhB,EACzB,OAAOiB,QAAQC,UAGT,IAAAC,EAAA,QAAAA,UACFC,EAAc,CAClBC,OAAQL,GAAgBD,EACxBO,aAAcH,EAAUG,aACxBC,WAAYJ,EAAUK,KAMxB,OAJgBR,EACZ,YAAyBI,GACzB,YAA0BA,IAEf7B,MAAK,WAClB,GAAI,EAAKf,QAEP,GADA,OAAAiD,EAAA,GAAwB,oBAAU,8CAC9BT,EAAO,CACT,IAAMU,EAAU1B,EAAS2B,MAAK,SAAA5C,GAAQ,OAAAA,EAAKK,KAAL,KAClCsC,IACF,EAAK9C,SAAS,CAAEG,KAAM2C,IACtB,EAAKrC,MAAMuC,kBAAkB,CAAEC,YAAaH,UAG9C,EAAK9C,SAAS,CAAEG,UAAM+C,Q,EA2BhC,OApGiC,OAI/B,YAAAnC,kBAAA,WACEC,KAAKpB,SAAU,EACXoB,KAAKmC,mBACPnC,KAAKoC,oBAEL,OAAAC,EAAA,MAIJ,YAAApC,qBAAA,WACED,KAAKpB,SAAU,GAGjB,YAAAuD,iBAAA,WACU,IAAAG,EAAA,qBAAAA,cAER,SADsBA,GAAiBA,EAAcC,mBAIvD,YAAAH,kBAAA,sBACUb,EAAA,WAAAA,UACRvB,KAAKhB,SAAS,CAAEF,SAAS,IACzBuC,QAAQmB,IAAI,CACV,YAAkB,CAAEd,aAAcH,EAAUG,eAC5C,YAAkB,CAAEA,aAAcH,EAAUG,aAAce,QAASlB,EAAUK,QAC5EjC,MACD,SAAC,G,IAAC+C,EAAA,KAAiBvD,EAAA,KACb,EAAKP,SACP,EAAKI,SAAS,CACZoB,SAAUsC,aAAe,EAAfA,EAAiBC,aAC3BxD,KAAI,EACJL,SAAS,OAIf,WACM,EAAKF,SACP,EAAKI,SAAS,CAAEF,SAAS,QAsCjC,YAAAgC,OAAA,WACE,IAAKd,KAAKmC,mBACR,OAAO,KAGH,iBAAE/B,EAAA,EAAAA,SAAUjB,EAAA,EAAAA,KAAML,EAAA,EAAAA,QAExB,OACE,uBAAKiC,UAAU,oBAAoBvB,GAAG,wBACpC,gBAACoD,EAAA,EAAW,CAACC,YAAY,yBACzB,gBAAC,IAAM,CAACC,OAAO,EAAOC,MAAO,oBAAU,+BACvC,gBAACC,EAAA,EAAc,CAACC,OAAO,YACvB,gBAACjC,EAAM,MACNlC,EACC,qBAAGiC,UAAU,YAEbX,GAAY,gBAAC,EAAI,CAACA,SAAUA,EAAUjB,KAAMA,EAAMO,SAAUM,KAAKkB,qBAK3E,EApGA,CAAiC,iB,8CC7CjCgC,OAAOC,eAAeC,EAAS,aAAc,CAAE/D,OAAO,IACtD,IAAIgE,EAAa,EAAQ,KACrBC,EAAQ,EAAQ,IAChBC,EAAa,EAAQ,KACrBC,EAAU,EAAQ,KACtB,EAAQ,KACR,IAAIC,EAAY,EAAQ,KAMxBL,EAAQM,QALR,SAAqBjE,GACjB,IAAIkE,EAAKlE,EAAMmE,QAASA,OAAiB,IAAPD,EAAgB,MAAQA,EAC1D,OAAOL,EAAMO,cAAcD,EAAS,CAAE7C,UAAWsC,EAAW,eAAgB5D,EAAMsB,YAAcuC,EAAMO,cAAcJ,EAAUC,QAAS,CAAEI,gBAAiB,IAAMC,OAAQtE,EAAMsE,OAAQ9C,QAASxB,EAAMwB,QAAS+C,UAAWvE,EAAMuE,WAC3NV,EAAMO,cAAc,OAAQ,CAAE9C,UAAW,8BAAgCtB,EAAMwE,UAAaX,EAAMO,cAAcL,EAAQU,cAAe,MAAM,SAAUC,GAAS,OAAOb,EAAMO,cAAcN,EAAWG,QAAS,CAAEU,KAAMD,EAAME,OAAOC,OAAQC,KAAM,a,8YCe5O,SAAU3B,EAAY,G,IAAEC,EAAA,EAAAA,YACpC,OACE,gBAAC,IAAmB2B,SAAQ,MACzB,SAAC,G,IAAEC,EAAA,EAAAA,eAAgBC,EAAA,EAAAA,kBAAwB,OAC1C,gBAACC,EAAgB,CACfF,eAAgBA,EAChBC,kBAAmBA,EACnB7B,YAAaA,OAavB,+B,+CAmBA,OAnB+B,OAC7B,YAAA9C,kBAAA,WACEC,KAAKP,MAAMgF,eAAezE,KAAKP,MAAMoD,cAGvC,YAAA+B,mBAAA,SAAmBC,GACbA,EAAUhC,cAAgB7C,KAAKP,MAAMoD,cACvC7C,KAAKP,MAAMiF,kBAAkB1E,KAAKP,MAAMoD,aACxC7C,KAAKP,MAAMgF,eAAeI,EAAUhC,eAIxC,YAAA5C,qBAAA,WACED,KAAKP,MAAMiF,kBAAkB1E,KAAKP,MAAMoD,cAG1C,YAAA/B,OAAA,WACE,OAAO,MAEX,EAnBA,CAA+B,kB,oBC9C/B,IAAIgE,EAAM,EAAQ,KACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQrB,QAAUqB,KAG/CA,EAAU,CAAC,CAACE,EAAOC,EAAIH,EAAS,MAG9C,IAAI5E,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBgF,GAFSL,EAAIC,EAAS5E,GAEX4E,EAAQK,OAASL,EAAQK,OAAS,IAIjDH,EAAO7B,QAAU+B,G,qBClBjB/B,EADkC,EAAQ,IAChCiC,EAA4B,IAE9BC,KAAK,CAACL,EAAOC,EAAI,iJAAkJ,KAE3KD,EAAO7B,QAAUA,G,smBCuBH,SAAUJ,EAAevD,GACrC,OACE,gBAAC,IAAY+E,SAAQ,MAClB,SAAC,G,IAAEe,EAAA,EAAAA,gBAAiBC,EAAA,EAAAA,mBAAyB,OAC5C,gBAACC,EAAmB,GAClBF,gBAAiBA,EACjBC,mBAAoBA,GAChB/F,OAYd,6E,OASE,EAAAiG,QAAU,WACF,cAAE,IAAAzC,OAAa,IAAAnD,MACrB,MAAO,CAAE8B,IAAG,EAAE9B,WADO,IAAQ,EAAR,yCACA6F,OADsC,EAAAA,S,EAQ/D,OAlByC,OACvC,YAAA5F,kBAAA,WACEC,KAAKP,MAAM8F,gBAAgBvF,KAAK0F,YAGlC,YAAAzF,qBAAA,WACED,KAAKP,MAAM+F,mBAAmBxF,KAAK0F,YAQrC,YAAA5E,OAAA,WACU,IAAAmC,EAAA,WAAAA,OACR,OAAO,wBAAMzD,GAAI,gBAAgByD,KAErC,EAlBA,CAAyC,kB,iCChDzC,wDAsBc,SAAUpB,EAAwB+D,GAChC,oBACRC,SAAS,IAAuCD,M,iCCxBxD,0EAuBc,SAAUvD,IACtB,IAAMyD,EAAQ,oBACRC,EAAU,MAEVC,EAAWC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAASH,OAAOC,SAASG,KAErFP,EAAMD,SAAS,eACfE,EAAQO,QAAQ,CAAEH,SAAU,gBAAiBI,MAAO,CAAEC,UAAWR","file":"js/320.1601658702741.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  allGates: T.QualityGate[];\n  gate?: T.QualityGate;\n  onChange: (oldGate?: string, newGate?: string) => Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\ninterface Option {\n  isDefault?: boolean;\n  label: string;\n  value: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleChange = (option: { value: string }) => {\n    const { gate } = this.props;\n\n    const isSet = gate == null && option.value != null;\n    const isUnset = gate != null && option.value == null;\n    const isChanged = gate != null && gate.id !== option.value;\n    const hasChanged = isSet || isUnset || isChanged;\n\n    if (hasChanged) {\n      this.setState({ loading: true });\n      this.props.onChange(gate && gate.id, option.value).then(this.stopLoading, this.stopLoading);\n    }\n  };\n\n  renderGateName = (option: { isDefault?: boolean; label: string }) => {\n    if (option.isDefault) {\n      return (\n        <span>\n          <strong>{translate('default')}</strong>\n          {': '}\n          {option.label}\n        </span>\n      );\n    }\n\n    return <span>{option.label}</span>;\n  };\n\n  renderSelect() {\n    const { gate, allGates } = this.props;\n\n    const options: Option[] = allGates.map(gate => ({\n      value: String(gate.id),\n      label: gate.name,\n      isDefault: gate.isDefault\n    }));\n\n    return (\n      <Select\n        clearable={false}\n        disabled={this.state.loading}\n        onChange={this.handleChange}\n        optionRenderer={this.renderGateName}\n        options={options}\n        style={{ width: 300 }}\n        value={gate && String(gate.id)}\n        valueRenderer={this.renderGateName}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSelect()}\n        {this.state.loading && <i className=\"spinner spacer-left\" />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function Header() {\n  return (\n    <header className=\"page-header\">\n      <div className=\"page-title display-flex-center\">\n        <h1>{translate('project_quality_gate.page')}</h1>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={\n            <div className=\"big-padded-top big-padded-bottom\">\n              {translate('quality_gates.projects.help')}\n            </div>\n          }\n        />\n      </div>\n      <div className=\"page-description\">{translate('project_quality_gate.page.description')}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  associateGateWithProject,\n  dissociateGateWithProject,\n  fetchQualityGates,\n  getGateForProject\n} from '../../api/quality-gates';\nimport A11ySkipTarget from '../../app/components/a11y/A11ySkipTarget';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport handleRequiredAuthorization from '../../app/utils/handleRequiredAuthorization';\nimport Form from './Form';\nimport Header from './Header';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface State {\n  allGates?: T.QualityGate[];\n  gate?: T.QualityGate;\n  loading: boolean;\n}\n\nexport default class App extends React.PureComponent<Props> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.checkPermissions()) {\n      this.fetchQualityGates();\n    } else {\n      handleRequiredAuthorization();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkPermissions() {\n    const { configuration } = this.props.component;\n    const hasPermission = configuration && configuration.showQualityGates;\n    return !!hasPermission;\n  }\n\n  fetchQualityGates() {\n    const { component } = this.props;\n    this.setState({ loading: true });\n    Promise.all([\n      fetchQualityGates({ organization: component.organization }),\n      getGateForProject({ organization: component.organization, project: component.key })\n    ]).then(\n      ([qualityGateList, gate]) => {\n        if (this.mounted) {\n          this.setState({\n            allGates: qualityGateList?.qualitygates,\n            gate,\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeGate = (oldId?: string, newId?: string) => {\n    const { allGates } = this.state;\n    if ((!oldId && !newId) || !allGates) {\n      return Promise.resolve();\n    }\n\n    const { component } = this.props;\n    const requestData = {\n      gateId: newId ? newId : oldId!,\n      organization: component.organization,\n      projectKey: component.key\n    };\n    const request = newId\n      ? associateGateWithProject(requestData)\n      : dissociateGateWithProject(requestData);\n\n    return request.then(() => {\n      if (this.mounted) {\n        addGlobalSuccessMessage(translate('project_quality_gate.successfully_updated'));\n        if (newId) {\n          const newGate = allGates.find(gate => gate.id === newId);\n          if (newGate) {\n            this.setState({ gate: newGate });\n            this.props.onComponentChange({ qualityGate: newGate });\n          }\n        } else {\n          this.setState({ gate: undefined });\n        }\n      }\n    });\n  };\n\n  render() {\n    if (!this.checkPermissions()) {\n      return null;\n    }\n\n    const { allGates, gate, loading } = this.state;\n\n    return (\n      <div className=\"page page-limited\" id=\"project-quality-gate\">\n        <Suggestions suggestions=\"project_quality_gate\" />\n        <Helmet defer={false} title={translate('project_quality_gate.page')} />\n        <A11ySkipTarget anchor=\"qg_main\" />\n        <Header />\n        {loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          allGates && <Form allGates={allGates} gate={gate} onChange={this.handleChangeGate} />\n        )}\n      </div>\n    );\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar HelpIcon_1 = require(\"../icons/HelpIcon\");\nvar theme_1 = require(\"../theme\");\nrequire(\"./HelpTooltip.css\");\nvar Tooltip_1 = require(\"./Tooltip\");\nfunction HelpTooltip(props) {\n    var _a = props.tagName, tagName = _a === void 0 ? 'div' : _a;\n    return React.createElement(tagName, { className: classNames('help-tooltip', props.className) }, React.createElement(Tooltip_1.default, { mouseLeaveDelay: 0.25, onShow: props.onShow, overlay: props.overlay, placement: props.placement },\n        React.createElement(\"span\", { className: \"display-inline-flex-center\" }, props.children || (React.createElement(theme_1.ThemeConsumer, null, function (theme) { return React.createElement(HelpIcon_1.default, { fill: theme.colors.gray71, size: 12 }); })))));\n}\nexports.default = HelpTooltip;\n//# sourceMappingURL=HelpTooltip.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","var api = require(\"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../css-loader/dist/cjs.js??ref--6-1!../../../postcss-loader/src/index.js??postcss!./HelpTooltip.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".help-tooltip{display:inline-flex;align-items:center;vertical-align:middle}.help-toolip-link{display:block;width:12px;height:12px;border:none}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getHistory from 'sonar-ui-common/helpers/getHistory';\nimport { requireAuthorization } from '../../store/appState';\nimport getStore from './getStore';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n"],"sourceRoot":""}