{"version":3,"sources":["webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css?8738","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css?82fb","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css","webpack:///./src/main/js/app/components/nav/component/Menu.css?14a8","webpack:///./src/main/js/app/components/nav/component/Menu.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css?f7cf","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css?4563","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css?e00c","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLike.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItemList.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLikeMergeInformation.tsx","webpack:///./src/main/js/app/components/nav/component/Breadcrumb.tsx","webpack:///./src/main/js/app/components/nav/component/Header.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.tsx","webpack:///./src/main/js/app/components/nav/component/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/utils.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeButton.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeParams.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/ProjectBadges.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawerPage.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationPages.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/DrawerLink.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaKey.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLinks.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityGate.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaSize.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTags.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationRenderer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/components/tags/TagsList.css?d861","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/shared/DrilldownLink.tsx","webpack:///./src/main/js/components/common/DocumentationTooltip.tsx","webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/components/common/CodeSnippet.css?463c","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/api/projectLinks.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLink.tsx","webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/api/notifications.ts"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","ComponentContainerNotFound","defaultTitle","defer","className","id","to","mounted","state","loading","fetchIsValidLicense","this","setState","then","isValidLicense","currentTask","props","errorType","Alert","display","variant","componentQualifier","Project","errorMessage","appState","canAdmin","withAppState","messageKey","status","branch","component","canSeeBackgroundTasks","configuration","showBackgroundTasks","type","url","key","defaultMessage","values","currentTaskOnSameBranch","isInProgress","isPending","renderMessage","ALL","Failed","pullRequest","pullRequestTitle","message","undefined","branchesEnabled","currentBranchLike","hasManyBranches","displayName","isApplication","qualifier","Application","canAdminComponent","showSettings","BranchLikeIcon","branchLike","title","plusIcon","fill","blue","size","overlay","DocumentationTooltip","links","href","label","additionalIcon","indent","setSelectedNode","onSelect","selected","active","onClick","ref","BranchStatus","listNode","selectedNode","parent","smooth","branchLikeTree","hasResults","selectedBranchLike","renderItem","node","mainBranchTree","branchTree","filter","map","tree","pullRequests","length","pr","parentlessPullRequests","orphanPullRequests","super","processBranchLikes","branchLikes","branchLikesToDisplay","reduce","prev","t","branchLikesToDisplayTree","openHighlightedBranchLike","handleOnSelect","highlightSiblingBranchlike","indexDelta","selectBranchLikeIndex","findIndex","b","newIndex","handleKeyDown","event","keyCode","Enter","preventDefault","UpArrow","DownArrow","handleSearchChange","query","q","toLowerCase","filteredBranchLikes","bl","filterBranch","name","includes","onClose","router","some","showManageLink","Dropdown","noPadding","autoFocus","onChange","onKeyDown","placeholder","value","pathname","withRouter","isMenuOpen","setIsMenuOpen","isMenuEnabled","currentBranchLikeElement","Boolean","dropdown","onRequestClose","open","target","Breadcrumb","breadcrumbs","lastBreadcrumbElement","isNoMainBranch","breadcrumbElement","isFirst","isNotLast","currentUser","Favorite","favorite","isFavorite","AnalysisWarningsModal","lazyLoadComponent","modal","handleClick","currentTarget","blur","handleCloseModal","warnings","warningsCount","componentKey","onWarningDismiss","isABranch","currentPage","isMain","Portfolio","SubPortfolio","getCurrentPage","displayVersion","version","analysisDate","date","HomePageSelect","rel","SETTINGS_URLS","MenuLink","hasAnalysis","isProject","isDeveloper","Developper","isPortfolio","getConfiguration","getQuery","renderDashboardLink","activeClassName","renderCodeLink","renderActivityLink","renderIssuesLink","resolved","renderComponentMeasuresLink","renderSecurityHotspotsLink","renderSecurityReports","extensions","extension","startsWith","renderAdministration","isSettingsActive","window","location","indexOf","adminLinks","renderAdministrationLinks","link","tagName","onToggleClick","renderSettingsLink","renderBranchesLink","renderBaselineLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderAdminExtensions","renderDeletionLink","renderProjectInformationButton","e","onToggleProjectInfo","role","tabIndex","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showUpdateKey","renderExtension","isAdmin","baseQuery","renderExtensions","withoutSecurityExtension","children","displayed","top","style","onKeydown","onClickOutside","BadgeType","getBadgeSnippet","getBadgeUrl","format","metric","project","projectUrl","marketing","measure","qualityGate","mdImage","color","width","alt","src","badgeMetrics","getColorOptions","getFormatOptions","getMetricOptions","metrics","handleColorChange","updateOptions","handleFormatChange","handleMetricChange","renderBadgeType","htmlFor","clearable","searchable","menuStyle","maxHeight","fetchBadgeMetrics","webservices","domain","find","d","path","ws","actions","w","param","params","p","possibleValues","selectedType","badgeOptions","alert_status","handleSelectBadge","handleUpdateOptions","fullBadgeOptions","CodeSnippet","isOneLine","snippet","InfoDrawerPage","onPageChange","ProjectInformationPages","withNotifications","channels","notifications","perProjectTypes","projectNotifications","n","channel","NotificationsList","checkboxId","onAdd","addNotification","onRemove","removeNotification","types","MetaKey","readOnly","copyValue","loadLinks","prevProps","orderedLinks","MetaLink","MetaQualityGate","isDefault","deprecatedByKey","loadDeprecatedRules","existingProfiles","profiles","deleted","requests","profile","loadDeprecatedRulesForProfile","Promise","all","responses","forEach","count","profileKey","data","activation","organization","ps","qprofile","statuses","r","total","languageFromStore","languages","language","languageName","inner","tooltip","getDeprecatedRulesCount","headerClassName","renderProfile","MetaSize","measures","isApp","ncloc","projects","DrilldownLink","Number","searchResult","onSearch","Math","min","selectedTags","tags","tag","setProjectTags","onUnselect","availableTags","TagsSelector","listSize","canUpdateTags","getPopupPos","eltPos","containerPos","height","right","setTags","application","join","handleSetProjectTags","onComponentChange","card","closeOnClick","closeOnClickOutside","overlayPlacement","BottomLeft","innerRef","tagsList","stopPropagation","TagsList","allowUpdate","canConfigureNotifications","canUseBadges","visibility","PrivacyBadgeContainer","description","qualityProfiles","badges","page","main","setPage","loadMeasures","metricKeys","fetchMetrics","mapDispatchToProps","ComponentNav","contextNavHeightRaw","globalNavHeightRaw","displayProjectInfo","setDisplayProjectInfo","notifComponent","RecentHistory","add","contextNavHeight","notif","addQualifier","fetchBranches","breadcrumb","resolve","branches","getCurrentBranchLike","registerBranchStatuses","fetchStatus","current","queue","shouldFetchComponent","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","InProgress","currentTaskChanged","progressChanged","clearTimeout","watchStatusTimer","setTimeout","Pending","fetchComponent","fetchWarnings","isSameBranch","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","handleWarningDismiss","nav","componentWithQualifier","match","replace","response","requireAuthorization","needIssueSync","PageUnavailableDueToIndexation","ComponentContext","Provider","onBranchesChange","fetchOrganization","noCopy","snippetRef","finalSnippet","Array","isArray","line","MultiSelectOption","custom","disabled","element","onHover","renderLabel","onFocus","onMouseOver","checked","onCheck","onSelectChange","handleSelectChange","item","onSelectItem","onUnselectItem","onSearchQuery","validateSearchInput","handleElementHover","prevState","activeIdx","getAllElements","handleKeyboard","evt","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","selectedElements","elements","updateSelectedElements","filterSelected","updateUnselectedElements","unselectedElements","slice","setElementActive","idx","allElements","container","addEventListener","nextProps","totalElements","searchInput","focus","removeEventListener","allowSelection","allowNewElements","footerNode","activeElement","showNewElement","infiniteList","listClasses","div","defaultProps","getComponentNavigation","catch","getMarketplaceNavigation","getSettingsNavigation","validateTag","STATUSES","ALL_EXCEPT_PENDING","ALL_TYPES","CURRENTS","ONLY_CURRENTS","DEFAULT_FILTERS","taskType","currents","minSubmittedAt","maxExecutedAt","DEBOUNCE_DELAY","PROVIDED_TYPES","isProvided","orderLinks","provided","unknown","getLinkName","DEFAULT_HOMEPAGE","setHomePage","handleReset","homepage","isChecked","isSameHomePage","filled","a","ISSUE_MEASURES","issueParamsPerMetric","blocker_violations","severities","new_blocker_violations","critical_violations","new_critical_violations","major_violations","new_major_violations","minor_violations","new_minor_violations","info_violations","new_info_violations","open_issues","reopened_issues","confirmed_issues","false_positive_issues","resolutions","code_smells","new_code_smells","bugs","new_bugs","vulnerabilities","new_vulnerabilities","isIssueMeasure","propsToIssueParams","sinceLeakPeriod","listView","getBranches","getPullRequests","deleteBranch","deletePullRequest","renameBranch","excludeBranchFromPurge","projectKey","branchName","excluded","test","addFavorite","removeFavorite","toggleFavorite","newFavorite","handleFavorite","_prevProps","level","small","fetchWebApi","showInternal","include_internals","webServices","fetchResponseExample","action","controller","notification","dispatcher","globalMessageKey","projectMessageKey","getDispatcherLabel","isEnabled","handleCheck","getProjectLinks","deleteLink","linkId","createLink","expanded","handleCollapse","handleSelect","select","iconOnly","linkTitle","WrappedComponent","Wrapper","globalTypes","fetchNotifications","throwGlobalError","addNotificationToState","added","areNotificationsEqual","removeNotificationFromState","removed"],"mappings":"gFAAA,IAAIA,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,wvBAAyvB,KAElxBD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,qGAAsG,KAE/HD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,oQAAqQ,KAE9RD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,uhBAAwhB,KAEjjBD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,kgBAAmgB,KAE5hBD,EAAOK,QAAUA,G,qBCNjB,IAAIT,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,sBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,mbAAob,KAE7cD,EAAOK,QAAUA,G,uPCkBF,SAASG,IACtB,OACE,gCACE,gBAAC,IAAM,CAACC,aAAc,oBAAU,iBAAkBC,OAAO,IACzD,uBAAKC,UAAU,sBAAsBC,GAAG,MACtC,uBAAKD,UAAU,cAAcC,GAAG,SAC9B,sBAAID,UAAU,qBAAqB,oBAAU,gCAC7C,qBAAGA,UAAU,iBAAiB,oBAAU,kCACxC,yBACE,gBAAC,OAAI,CAACE,GAAG,KAAK,oBAAU,4B,iHCK7B,MAAM,UAAiC,gBAA9C,c,oBACE,KAAAC,SAAU,EACV,KAAAC,MAAe,CAAEC,SAAS,GAW1B,KAAAC,oBAAsB,KACpBC,KAAKC,SAAS,CAAEH,SAAS,IACzB,cAAiBI,KACf,EAAGC,qBACGH,KAAKJ,SACPI,KAAKC,SAAS,CAAEE,iBAAgBL,SAAS,KAG7C,KACME,KAAKJ,SACPI,KAAKC,SAAS,CAAEH,SAAS,OAnBjC,oBACEE,KAAKJ,SAAU,EACfI,KAAKD,sBAGP,uBACEC,KAAKJ,SAAU,EAmBjB,SACE,MAAM,YAAEQ,GAAgBJ,KAAKK,OACvB,eAAEF,EAAF,QAAkBL,GAAYE,KAAKH,MAEzC,OAAIC,GAAYM,GAAgBA,EAAYE,UAIxCH,GAA4C,kBAA1BC,EAAYE,UAE9B,gBAACC,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,SAC7B,kCACC,gEACA,oBAAU,YAAaL,EAAYM,oBAAsB,IAAmBC,WAOlF,gBAACJ,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,SAC9B,wBAAMhB,UAAU,uBAAuBW,EAAYQ,cAClDZ,KAAKK,MAAMQ,SAASC,SACnB,gBAAC,OAAI,CAACnB,GAAG,gCACN,oBAAU,sCAAuCS,EAAYE,WACzD,KAEP,oBAAU,iCAtBP,MA6BE,aAAAS,EAAA,GAAa,GChEb,MAAM,UAAgC,gBACnD,cAAcC,EAAoBC,EAAiBC,GACjD,MAAM,UAAEC,EAAF,YAAaf,GAAgBJ,KAAKK,MAClCe,EACJD,EAAUE,eAAiBF,EAAUE,cAAcC,oBAErD,IAAIC,EAMAC,EAUJ,OAfIpB,GAAe,qBAAW,uBAAwBA,EAAYmB,QAChEP,GAAc,KACdO,EAAO,oBAAU,uBAAwBnB,EAAYmB,OAInDH,IACFJ,GAAc,SACdQ,EACE,gBAAC,OAAI,CAAC7B,GAAI,YAA8BwB,EAAUM,IAAKR,IACpD,oBAAU,2BAMf,gBAAC,mBAAgB,CACfS,eAAgB,oBAAUV,GAC1BtB,GAAIsB,EACJW,OAAQ,CAAET,SAAQM,MAAKD,UAK7B,SACE,MAAM,YAAEnB,EAAF,wBAAewB,EAAf,aAAwCC,EAAxC,UAAsDC,GAAc9B,KAAKK,MAC/E,GAAIwB,EACF,OACE,gBAACtB,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,QAC7BT,KAAK+B,cAAc,4CAGnB,GAAID,EACT,OACE,gBAACvB,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,QAC7BT,KAAK+B,cAAc,sCAAuC,IAASC,MAGnE,GAAI5B,GAAeA,EAAYa,SAAW,IAAagB,OAAQ,CACpE,GACE7B,EAAYE,WACZ,qBAAW,sCAAuCF,EAAYE,WAE9D,OAAO,gBAAC,EAAwB,CAACF,YAAaA,IAEhD,MAAMc,EACJd,EAAYc,QAAZ,UACGd,EAAY8B,aADf,OAEE9B,EAAY+B,iBAAmB,MAAQ/B,EAAY+B,iBAAmB,IAE1E,IAAIC,EAWJ,OATEA,GAD8B,IAA5BR,GAAqCV,EAC7BlB,KAAK+B,cACb,iDACAM,EACAnB,GAGQlB,KAAK+B,cAAc,sCAI7B,gBAACxB,EAAA,MAAK,CAACC,QAAQ,SAASC,QAAQ,SAC7B2B,GAIP,OAAO,M,oICsBI,cA7FR,SAA2B/B,GAChC,MAAM,gBACJiC,EADI,UAEJnB,EACAA,WAAW,cAAEE,GAHT,kBAIJkB,EAJI,gBAKJC,GACEnC,EAEEoC,EAAc,YAAyBF,GACvCG,EAAgBvB,EAAUwB,YAAc,IAAmBC,YAC3DC,EAAoBxB,GAAiBA,EAAcyB,aAqEzD,OACE,wBAAMrD,UAAU,iDACd,gBAACsD,EAAA,EAAc,CAACC,WAAYT,IAC5B,wBACE9C,UAAU,yEACVwD,MAAOR,GACNA,GAzEgB,MACrB,MAAMS,EAAW,gBAAC,IAAc,CAACC,KAAM,SAAOC,KAAMC,KAAM,KAE1D,GAAIf,GAAmBE,EACrB,OAAO,gBAAC,IAAY,MAGtB,GAAIE,GACF,IAAKF,GAAmBK,EACtB,OACE,gBAAC,IAAW,CACVS,QACE,gCACE,yBAAI,oBAAU,8BACd,sBAAI7D,UAAU,6BACd,gBAAC,OAAI,CAACE,GAAI,YAAqBwB,EAAUM,IAAKN,EAAUwB,YACrD,oBAAU,gCAIhBO,OAIF,CACL,IAAKZ,EACH,OACE,gBAACiB,EAAA,EAAoB,CACnB5E,QAAS,oBAAU,oDAAmD,YAC5D,4BACV6E,MAAO,CACL,CACEC,KAAM,2DACNC,MAAO,oBAAU,gBAGrBT,MAAO,oBAAU,mDAChBC,GAKP,IAAKV,EACH,OACE,gBAACe,EAAA,EAAoB,CACnB5E,QAAS,oBAAU,kDAAiD,YAC1D,uBACV6E,MAAO,CACL,CACEC,KAAM,oCACNC,MAAO,oBAAU,yDAEnB,CACED,KAAM,wCACNC,MAAO,oBAAU,wDAGrBT,MAAO,oBAAU,iDAChBC,GAMT,OAAO,MAWJS,O,4EC9DQ,eA9BR,SAAkBtD,GACvB,MAAM,WAAE2C,EAAF,UAAc7B,EAAd,OAAyByC,EAAzB,gBAAiCC,EAAjC,SAAkDC,EAAlD,SAA4DC,GAAa1D,EACzEoC,EAAc,YAAyBO,GAE7C,OACE,sBACEvD,UAAW,EAAW,OAAQ,CAC5BuE,OAAQD,IAEVE,QAAS,IAAMH,EAASd,GACxBkB,IAAKH,EAAWF,OAAkBxB,GAClC,uBACE5C,UAAW,EAAW,iDAAkD,CACtE,kBAAmBmE,KAErB,uBAAKnE,UAAU,0BAA0BwD,MAAOR,GAC9C,gBAACM,EAAA,EAAc,CAACC,WAAYA,IAC5B,wBAAMvD,UAAU,eAAegD,GAC9B,YAAaO,IACZ,wBAAMvD,UAAU,qBAAqB,oBAAU,0BAGnD,uBAAKA,UAAU,eACb,gBAAC0E,GAAA,EAAY,CAACnB,WAAYA,EAAY7B,UAAWA,EAAUM,YCoDtD,eA3ER,SAAsBpB,GAC3B,IAAI+D,EAAoC,KACpCC,EAAqC,KAEzC,YAAgB,KACVD,GAAYC,GACd,2BAAgBA,EAAc,CAAEC,OAAQF,EAAUG,QAAQ,MAI9D,MAAM,eAAEC,EAAF,UAAkBrD,EAAlB,WAA6BsD,EAA7B,SAAyCX,EAAzC,mBAAmDY,GAAuBrE,EAE1EsE,EAAa,CAAC3B,EAAwBY,IAC1C,gBAAC,GAAQ,CACPZ,WAAYA,EACZ7B,UAAWA,EACXyC,OAAQA,EACRnC,IAAK,YAAiBuB,GACtBc,SAAUA,EACVC,SAAU,YAAiBf,EAAY0B,GACvCb,gBAAiBe,GAASP,EAAeO,IAI7C,OACE,sBAAInF,UAAU,YAAYyE,IAAKU,GAASR,EAAWQ,IAC/CH,GACA,sBAAIhF,UAAU,QACZ,wBAAMA,UAAU,QAAQ,oBAAU,gBAKrC,CAAC+E,EAAeK,kBAAmBL,EAAeM,YAAYC,OAAO,cAAWC,IAAIC,GACnF,gBAAC,WAAc,CAACxD,IAAK,YAAiBwD,EAAK/D,SACxCyD,EAAWM,EAAK/D,QAChB+D,EAAKC,aAAaC,OAAS,GAC1B,gCACE,sBAAI1F,UAAU,eACZ,wBAAMA,UAAU,mBACb,oBAAU,0CAGdwF,EAAKC,aAAaF,IAAII,GAAMT,EAAWS,GAAI,KAGhD,6BAKHZ,EAAea,uBAAuBF,OAAS,GAC9C,gCACE,sBAAI1F,UAAU,eAAe,oBAAU,yCACtC+E,EAAea,uBAAuBL,IAAII,GAAMT,EAAWS,KAK/DZ,EAAec,mBAAmBH,OAAS,GAC1C,gCACE,sBAAI1F,UAAU,eACX,oBAAU,+CACX,gBAAC,IAAW,CACVA,UAAU,qBACV6D,QAAS,oBAAU,0DAGtBkB,EAAec,mBAAmBN,IAAII,GAAMT,EAAWS,S,6rBCnD3D,MAAM,WAAa,gBACxB,YAAY/E,GACVkF,MAAMlF,GAiBR,KAAAmF,mBAAsBC,IACpB,MAAMR,EAAO,YAAsBQ,GACnC,MAAO,CACLC,qBAAsB,IAChBT,EAAKJ,eACL,CAACI,EAAKJ,eAAe3D,UAAW+D,EAAKJ,eAAeK,cACpD,MACDD,EAAKH,WAAWa,OAAO,CAACC,EAAMC,IAAM,IAAID,EAAMC,EAAE3E,UAAW2E,EAAEX,cAAe,OAC5ED,EAAKI,0BACLJ,EAAKK,oBAEVQ,yBAA0Bb,IAI9B,KAAAc,0BAA4B,KACtB/F,KAAKH,MAAM6E,oBACb1E,KAAKgG,eAAehG,KAAKH,MAAM6E,qBAInC,KAAAuB,2BAA8BC,IAC5B,MAAMC,EAAwBnG,KAAKH,MAAM6F,qBAAqBU,UAAUC,GACtE,YAAiBA,EAAGrG,KAAKH,MAAM6E,qBAE3B4B,EAAWH,EAAwBD,GAGZ,IAA3BC,GACAG,GAAY,GACZA,EAAWtG,KAAKH,MAAM6F,qBAAqBP,QAE3CnF,KAAKC,SAAS,EAAGyF,2BAAH,CACZhB,mBAAoBgB,EAAqBY,OAK/C,KAAAC,cAAiBC,IACf,OAAQA,EAAMC,SACZ,KAAK,YAASC,MACZF,EAAMG,iBACN3G,KAAK+F,4BACL,MACF,KAAK,YAASa,QACZJ,EAAMG,iBACN3G,KAAKiG,4BAA4B,GACjC,MACF,KAAK,YAASY,UACZL,EAAMG,iBACN3G,KAAKiG,2BAA2B,KAKtC,KAAAa,mBAAsBC,IACpB,MAAMC,EAAID,EAAME,cAOVC,EAAsBlH,KAAKK,MAAMoF,YAAYV,OACjDoC,IAAMC,OANclG,EAMDiG,EALnB,YAASjG,IAAWA,EAAOmG,KAAKJ,cAAcK,SAASN,KAC9B5B,EAImB+B,EAH5C,YAAc/B,KAAQA,EAAGnC,MAAMgE,cAAcK,SAASN,IAAM5B,EAAG3D,IAAIwF,cAAcK,SAASN,KADjE5B,MAFLlE,IAStBlB,KAAKC,SAAL,IACE8G,MAAOC,EACPtC,mBAAoBwC,EAAoB/B,OAAS,EAAI+B,EAAoB,QAAK7E,GAC3ErC,KAAKwF,mBAAmB0B,MAI/B,KAAAlB,eAAkBhD,IAChBhD,KAAKC,SAAS,CAAEyE,mBAAoB1B,GAAc,KAChDhD,KAAKK,MAAMkH,UACXvH,KAAKK,MAAMmH,OAAOnI,KAAK,YAAiBW,KAAKK,MAAMc,UAAUM,IAAKuB,OA5FpE,IAAI0B,OAAqBrC,EAErBhC,EAAMoF,YAAYgC,KAAKpB,GAAK,YAAiBA,EAAGhG,EAAMkC,oBACxDmC,EAAqBrE,EAAMkC,kBAClBlC,EAAMoF,YAAYN,OAAS,IACpCT,EAAqBrE,EAAMoF,YAAY,IAGzCzF,KAAKH,MAAL,IACEkH,MAAO,GACPrC,sBACG1E,KAAKwF,mBAAmBnF,EAAMoF,cAqFrC,SACE,MAAM,kBAAE5C,EAAF,UAAqB1B,EAArB,QAAgCoG,GAAYvH,KAAKK,OACjD,qBACJqF,EADI,yBAEJI,EAFI,MAGJiB,EAHI,mBAIJrC,GACE1E,KAAKH,MAEH6H,EAAiBvG,EAAUwB,YAAc,IAAmBhC,SAAWkC,EACvE4B,EAAaiB,EAAqBP,OAAS,EAEjD,OACE,gBAACwC,EAAA,gBAAe,CAAClI,UAAU,8BAA8BmI,WAAW,GAClE,uBAAKnI,UAAU,wBACb,gBAAC,IAAS,CACRoI,WAAW,EACXC,SAAU9H,KAAK8G,mBACfiB,UAAW/H,KAAKuG,cAChByB,YAAa,oBAAU,iDACvBC,MAAOlB,KAIX,uBAAKtH,UAAU,uBACb,gBAAC,GAAY,CACX+E,eAAgBsB,EAChB3E,UAAWA,EACXsD,WAAYA,EACZX,SAAU9D,KAAKgG,eACftB,mBAAoBA,KAIvBgD,GACC,uBAAKjI,UAAU,6BACb,gBAAC,OAAI,CACHwE,QAAS,IAAMsD,IACf5H,GAAI,CAAEuI,SAAU,oBAAqBnB,MAAO,CAAErH,GAAIyB,EAAUM,OAC3D,oBAAU,qCASV,cAAA0G,EAAA,GAAW,IC9GX,cAAApH,EAAA,GAAa,QAxDrB,SAA8BV,GACnC,MACEQ,UAAU,gBAAEyB,GADR,YAEJmD,EAFI,UAGJtE,EACAA,WAAW,cAAEE,GAJT,kBAKJkB,GACElC,GAEG+H,EAAYC,GAAiB,YAAe,GAE7CxF,EAAoBxB,GAAiBA,EAAcyB,aACnDN,EAAkBiD,EAAYN,QAAU,EACxCmD,EAAgBhG,GAAmBE,EAEnC+F,EACJ,gBAAC,EAAiB,CAChBjG,gBAAiBkG,QAAQlG,GACzBnB,UAAWA,EACXoB,kBAAmBA,EACnBC,gBAAiBA,IAIrB,OACE,wBACE/C,UAAW,EAAW,kEAAmE,CACvFgJ,SAAUH,KAEXA,EACC,gBAAC,IAAO,CACNI,eAAgB,IAAML,GAAc,GACpCM,KAAMP,EACN9E,QACE,gBAAC,GAAI,CACHmC,YAAaA,EACb5C,kBAAmBA,EACnB1B,UAAWA,EACXoB,kBAAmBA,EACnBgF,QAAS,IAAMc,GAAc,MAGjC,qBACE5I,UAAU,oCACVgE,KAAK,IACLQ,QAAS,IAAMoE,GAAeD,IAC7BG,IAILA,OCnCO,eArBR,SAA2ClI,GAChD,MAAM,kBAAEkC,GAAsBlC,EAE9B,OAAK,YAAckC,GAKjB,wBAAM9C,UAAU,kDACd,gBAAC,mBAAgB,CACfiC,eAAgB,oBAAU,kDAC1BhC,GAAG,iDACHiC,OAAQ,CACNiH,OAAQ,8BAASrG,EAAkBqG,QACnC1H,OAAQ,8BAASqB,EAAkBrB,YAVlC,Q,0CCDJ,SAAS2H,GAAWxI,GACzB,MACEc,WAAW,YAAE2H,GADT,kBAEJvG,GACElC,EACE0I,EAAwB,KAAKD,GAC7BE,EAAiBzG,IAAsB,YAAaA,GAE1D,OACE,uBAAK9C,UAAU,uCACZqJ,EAAY9D,IAAI,CAACiE,EAAmBlK,KACnC,MAAMmK,EAAgB,IAANnK,EACVoK,EAAYpK,EAAI+J,EAAY3D,OAAS,EAE3C,OACE,wBAAM1F,UAAU,kCAAkCgC,IAAKwH,EAAkBxH,KACtEyH,GAAWH,GACV,gBAAC,KAAa,CAACtJ,UAAU,eAAekD,UAAWoG,EAAsBpG,YAE1EqG,GAAkBG,EACjB,gBAAC,OAAI,CACH1J,UAAU,kCACVwD,MAAOgG,EAAkB5B,KACzB1H,GAAI,YAAwBsJ,EAAkBxH,IAAKwH,EAAkBtG,YACpEsG,EAAkB5B,MAGrB,wBAAM5H,UAAU,gBAAgBwD,MAAOgG,EAAkB5B,MACtD4B,EAAkB5B,MAGtB8B,GAAa,wBAAM1J,UAAU,wBAQ3B,OAAWoJ,ICCX,yBAJUhJ,IAAD,CACtBuJ,YAAa,yBAAevJ,KAGf,CAAyB,QAnCjC,SAAgBQ,GACrB,MAAM,YAAEoF,EAAF,UAAetE,EAAf,kBAA0BoB,EAA1B,YAA6C6G,GAAgB/I,EAEnE,OACE,gCACE,gBAAC,IAAM,CAAC4C,MAAO9B,EAAUkG,OACzB,0BAAQ5H,UAAU,mCAChB,gBAACoJ,GAAU,CAAC1H,UAAWA,EAAWoB,kBAAmBA,IACpD,YAAW6G,IACV,gBAACC,EAAA,EAAQ,CACP5J,UAAU,cACV0B,UAAWA,EAAUM,IACrB6H,SAAUd,QAAQrH,EAAUoI,YAC5B5G,UAAWxB,EAAUwB,YAGxBJ,GACC,gCACE,gBAAC,GAAoB,CACnBkD,YAAaA,EACbtE,UAAWA,EACXoB,kBAAmBA,IAErB,gBAAC,GAAiC,CAACA,kBAAmBA,W,8DClClE,MAAMiH,GAAwB,OAAAC,GAAA,mBAC5B,IAAM,gCACN,yBAaa,MAAM,WAA6B,gBAAlD,c,oBACE,KAAA5J,MAAe,CAAE6J,OAAO,GAExB,KAAAC,YAAenD,IACbA,EAAMG,iBACNH,EAAMoD,cAAcC,OACpB7J,KAAKC,SAAS,CAAEyJ,OAAO,KAGzB,KAAAI,iBAAmB,KACjB9J,KAAKC,SAAS,CAAEyJ,OAAO,KAGzB,SACE,OACE,gCACE,gBAACnJ,EAAA,MAAK,CAACd,UAAU,wCAAwCe,QAAQ,SAASC,QAAQ,WAChF,gBAAC,mBAAgB,CACfiB,eAAgB,oBAAU,mDAC1BhC,GAAG,kDACHiC,OAAQ,CACNoI,SACE,qBAAGtG,KAAK,IAAIQ,QAASjE,KAAK2J,aACxB,gBAAC,mBAAgB,CACfjI,eAAgB,oBAAU,mCAC1BhC,GAAG,kCACHiC,OAAQ,CACNqI,cAAehK,KAAKK,MAAM0J,SAAS5E,eAQhDnF,KAAKH,MAAM6J,OACV,gBAACF,GAAqB,CACpBS,aAAcjK,KAAKK,MAAM4J,aACzB1C,QAASvH,KAAK8J,iBACdI,iBAAkBlK,KAAKK,MAAM6J,iBAC7BH,SAAU/J,KAAKK,MAAM0J,a,QCgDlB,yBAJUlK,IAAD,CACtBuJ,YAAa,yBAAevJ,KAGf,EAtFR,SAAoBQ,GACzB,MAAM,WAAE2C,EAAF,UAAc7B,EAAd,YAAyBiI,EAAzB,SAAsCW,GAAa1J,EAEnD8J,EAAY,YAASnH,GACrBoH,EAgDD,SAAwBjJ,EAAwB6B,GACrD,IAAIoH,EAEJ,MAAMlJ,EAAS,YAAS8B,KAAgBA,EAAWqH,OAASrH,EAAWqE,UAAOhF,EAE9E,OAAQlB,EAAUwB,WAChB,KAAK,IAAmB2H,UACxB,KAAK,IAAmBC,aACtBH,EAAc,CAAE7I,KAAM,YAAaJ,UAAWA,EAAUM,KACxD,MACF,KAAK,IAAmBmB,YACtBwH,EAAc,CACZ7I,KAAM,cACNJ,UAAWA,EAAUM,IACrBP,UAEF,MACF,KAAK,IAAmBP,QAEtByJ,EAAc,CACZ7I,KAAM,UACNJ,UAAWA,EAAUM,IACrBP,UAKN,OAAOkJ,EA3EaI,CAAerJ,EAAW6B,GACxCyH,OAAuCpI,IAAtBlB,EAAUuJ,SAAyBP,EAE1D,OACE,gCACE,uBAAK1K,UAAU,oCACZsK,EAAS5E,OAAS,GACjB,wBAAM1F,UAAU,wBACd,gBAAC,GAAoB,CACnBwK,aAAc9I,EAAUM,IACxByI,iBAAkB7J,EAAM6J,iBACxBH,SAAUA,KAIf5I,EAAUwJ,cACT,wBAAMlL,UAAU,2BACd,gBAAC,KAAiB,CAACmL,KAAMzJ,EAAUwJ,gBAGtCF,GACC,wBAAMhL,UAAU,2BAAhB,UAA8C,oBAAU,WAAxD,YACE0B,EAAUuJ,UAGb,YAAWtB,SAAgC/G,IAAhB+H,IAA8B,YAAcpH,IACtE,gBAAC6H,GAAA,EAAc,CAACpL,UAAU,cAAc2K,YAAaA,KAGxD,YAAcpH,IACb,uBAAKvD,UAAU,iEACO4C,IAAnBW,EAAWxB,KACV,qBACE/B,UAAU,8CACVgE,KAAMT,EAAWxB,IACjBsJ,IAAI,sBACJlC,OAAO,UACN,oBAAU,uBACX,gBAAC,KAAU,CAACnJ,UAAU,qBAAqB4D,KAAM,MAGrD,gBAACc,GAAA,EAAY,CAACnB,WAAYA,EAAY7B,UAAWA,EAAUM,W,ioCCpDrE,MAAMsJ,GAAgB,CACpB,iBACA,oBACA,oBACA,oBACA,4BACA,wBACA,mBACA,iBACA,iBACA,mBACA,mBACA,eACA,oBACA,qBAeF,SAASC,GAAT,GAI+D,IAJ7C,YAChBC,EADgB,MAEhBvH,GAE6D,EAD1DrD,EAC0D,8BAC7D,OAAO4K,EACL,gBAAC,OAAI,iBAAK5K,GAAQqD,GAElB,gBAAC,KAAO,CAACJ,QAAS,oBAAU,8BAC1B,qCAAiB,OAAO7D,UAAU,iBAC/BiE,IAMF,MAAM,WAAa,gBAA1B,c,oBACE,KAAAuH,YAAc,KACZ,MAAM,YAAExF,EAAc,GAAhB,UAAoBtE,EAApB,aAA+BU,EAA/B,UAA6CC,GAAc9B,KAAKK,MAEtE,OADoBoF,EAAYN,OAAS,GACnBtD,GAAgBC,QAAwCO,IAA3BlB,EAAUwJ,cAG/D,KAAAO,UAAY,IACHlL,KAAKK,MAAMc,UAAUwB,YAAc,IAAmBhC,QAG/D,KAAAwK,YAAc,IACLnL,KAAKK,MAAMc,UAAUwB,YAAc,IAAmByI,WAG/D,KAAAC,YAAc,KACZ,MAAM,UAAE1I,GAAc3C,KAAKK,MAAMc,UACjC,OAAO,YAAgBwB,IAGzB,KAAAD,cAAgB,IACP1C,KAAKK,MAAMc,UAAUwB,YAAc,IAAmBC,YAG/D,KAAA0I,iBAAmB,IACVtL,KAAKK,MAAMc,UAAUE,eAAiB,GAG/C,KAAAkK,SAAW,IACF,IAAE7L,GAAIM,KAAKK,MAAMc,UAAUM,KAAQ,YAAmBzB,KAAKK,MAAM2C,aAG1E,KAAAwI,oBAAsB,CAAC,EAA8BH,KAAwB,IAAtD,GAAE3L,GAAoD,EAA7CsD,EAA6C,aAC3E,OACE,0BACE,gBAAC,OAAI,CACHyI,gBAAgB,SAChB9L,GAAI0L,EAAc,YAAgB3L,GAAM,YAAmBA,EAAIsD,IAC9D,oBAAU,oBAMnB,KAAA0I,eAAiB,CACfT,EACAlE,EACArE,EACA2I,IAEIrL,KAAKmL,cACA,KAIP,0BACE,gBAACH,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbvH,MACE2H,GAAe3I,EAAgB,oBAAU,sBAAwB,oBAAU,aAE7E/C,GAAI,CAAEuI,SAAU,QAASnB,YAMjC,KAAA4E,mBAAqB,CAACV,EAAsBlE,KAC1C,MAAM,WAAE/D,GAAehD,KAAKK,MAE5B,OAAI,YAAc2C,GACT,KAIP,0BACE,gBAACgI,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbvH,MAAO,oBAAU,yBACjB/D,GAAI,CAAEuI,SAAU,oBAAqBnB,aAM7C,KAAA6E,iBAAmB,CAACX,EAAsBlE,IAEtC,0BACE,gBAACiE,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbvH,MAAO,oBAAU,eACjB/D,GAAI,CAAEuI,SAAU,kBAAmBnB,MAAM,MAAMA,EAAP,CAAc8E,SAAU,cAMxE,KAAAC,4BAA8B,CAACb,EAAsBlE,IAEjD,0BACE,gBAACiE,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbvH,MAAO,oBAAU,mBACjB/D,GAAI,CAAEuI,SAAU,sBAAuBnB,YAM/C,KAAAgF,2BAA6B,CAACd,EAAsBlE,EAAcsE,KAE7DA,GACC,0BACE,gBAACL,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbvH,MAAO,oBAAU,4BACjB/D,GAAI,CAAEuI,SAAU,qBAAsBnB,YAOhD,KAAAiF,sBAAwB,CAACf,EAAsBlE,KAC7C,MAAM,WAAE/D,EAAF,UAAc7B,GAAcnB,KAAKK,OACjC,WAAE4L,EAAa,IAAO9K,EAE5B,OAAI,YAAc6B,GACT,KAGyBiJ,EAAWxE,KAAKyE,GAChDA,EAAUzK,IAAI0K,WAAW,oBAQzB,0BACE,gBAACnB,GAAQ,CACPS,gBAAgB,SAChBR,YAAaA,EACbvH,MAAO,oBAAU,2BACjB/D,GAAI,CACFuI,SAAU,mDACVnB,YAXC,MAkBX,KAAAqF,qBAAuB,CACrBrF,EACAmE,EACAxI,EACA2I,KAEA,MAAM,WAAErI,EAAF,UAAc7B,GAAcnB,KAAKK,MAEvC,IAAKL,KAAKsL,mBAAmBxI,cAAgB,YAAcE,GACzD,OAAO,KAGT,MAAMqJ,EAAmBtB,GAActD,KAAKjG,IAA8C,IAAvC8K,OAAOC,SAAS9I,KAAK+I,QAAQhL,IAE1EiL,EAAazM,KAAK0M,0BAA0B3F,EAAOmE,EAAWxI,EAAe2I,GACnF,OAAKoB,EAAWhF,KAAKkF,GAAgB,MAARA,GAK3B,gBAAC,IAAQ,aACG,iBACVrJ,QAAS,sBAAI7D,UAAU,QAAQgN,GAC/BG,QAAQ,MACP,EAAGC,gBAAelE,UACjB,qCACiBA,EAAI,gBACL,OACdlJ,UAAW,EAAW,kBAAmB,CAAEuE,OAAQqI,GAAoB1D,IACvElF,KAAK,IACL/D,GAAG,6BACHuE,QAAS4I,GACR,qBAAW,kBAAmB1L,EAAUwB,WACrC,oBAAU,kBAAmBxB,EAAUwB,WACvC,oBAAU,mBACd,gBAAC,IAAY,CAAClD,UAAU,yBAnBvB,MA0BX,KAAAiN,0BAA4B,CAC1B3F,EACAmE,EACAxI,EACA2I,IAEO,CACLrL,KAAK8M,mBAAmB/F,EAAOrE,EAAe2I,GAC9CrL,KAAK+M,mBAAmBhG,EAAOmE,GAC/BlL,KAAKgN,mBAAmBjG,EAAOrE,EAAe2I,GAC9CrL,KAAKiN,mBAAmBlG,GACxB/G,KAAKkN,sBAAsBnG,GAC3B/G,KAAKmN,yBAAyBpG,GAC9B/G,KAAKoN,gBAAgBrG,GACrB/G,KAAKqN,sBAAsBtG,GAC3B/G,KAAKsN,0BAA0BvG,GAC/B/G,KAAKuN,oBAAoBxG,GACzB/G,KAAKwN,mBAAmBzG,EAAOmE,MAC5BlL,KAAKyN,sBAAsB1G,GAC9B/G,KAAK0N,mBAAmB3G,IAI5B,KAAA4G,+BAAiC,CAACzC,EAAoBxI,IAChD,YAAc1C,KAAKK,MAAM2C,YACpB,MAINkI,GAAaxI,IACZ,0BACE,qBACEjD,UAAU,cACVwE,QAAU2J,IACRA,EAAEjH,iBACFiH,EAAEhE,cAAcC,OAChB7J,KAAKK,MAAMwN,uBAEbC,KAAK,SACLC,SAAU,GACV,gBAAC,KAAc,CAACtO,UAAU,wBACzB,oBAAUyL,EAAY,UAAY,cAAe,gBAO5D,KAAA4B,mBAAqB,CAAC/F,EAAcrE,EAAwB2I,KACrDrL,KAAKsL,mBAAmBxI,cAAgBJ,GAAiB2I,EACrD,KAGP,sBAAI5J,IAAI,YACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,oBAAqBnB,UACjE,oBAAU,2BAMnB,KAAAgG,mBAAqB,CAAChG,EAAcmE,IAE/BlL,KAAKK,MAAMQ,SAASyB,iBACpB4I,GACAlL,KAAKsL,mBAAmBxI,aAMzB,sBAAIrB,IAAI,YACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,oBAAqBnB,UACjE,oBAAU,sCANR,KAYX,KAAAiG,mBAAqB,CAACjG,EAAcrE,EAAwB2I,KACrDrL,KAAKsL,mBAAmBxI,cAAgBJ,GAAiB2I,EACrD,KAGP,sBAAI5J,IAAI,YACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,oBAAqBnB,UACjE,oBAAU,2BAMnB,KAAAkG,mBAAsBlG,GACf/G,KAAKsL,mBAAmB0C,oBAI3B,sBAAIvM,IAAI,YACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,4BAA6BnB,UACzE,oBAAU,mCALR,KAWX,KAAAmG,sBAAyBnG,GAClB/G,KAAKsL,mBAAmB2C,iBAI3B,sBAAIxM,IAAI,gBACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,wBAAyBnB,UACrE,oBAAU,+BALR,KAWX,KAAAoG,yBAA4BpG,GACtB,4BAAmB/G,KAAKsL,mBAAmB4C,mBACtC,KAGP,sBAAIzM,IAAI,mBACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,mBAAoBnB,UAChE,oBAAU,0BAMnB,KAAAqG,gBAAmBrG,GACZ/G,KAAKsL,mBAAmB6C,UAI3B,sBAAI1M,IAAI,SACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,iBAAkBnB,UAC9D,oBAAU,wBALR,KAWX,KAAAsG,sBAAyBtG,GAClB/G,KAAKsL,mBAAmB8C,gBAI3B,sBAAI3M,IAAI,eACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,iBAAkBnB,UAC9D,oBAAU,sBALR,KAWX,KAAAuG,0BAA6BvG,GACtB/G,KAAKsL,mBAAmBhK,oBAI3B,sBAAIG,IAAI,oBACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,4BAA6BnB,UACzE,oBAAU,2BALR,KAWX,KAAAwG,oBAAuBxG,GAChB/G,KAAKsL,mBAAmB+C,cAI3B,sBAAI5M,IAAI,cACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,eAAgBnB,UAC5D,oBAAU,qBALR,KAWX,KAAAyG,mBAAqB,CAACzG,EAAcmE,IAC7BlL,KAAKsL,mBAAmBxI,cAAiBoI,EAI5C,sBAAIzJ,IAAI,YACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,oBAAqBnB,UACjE,oBAAU,mBALR,KAWX,KAAA2G,mBAAsB3G,IACpB,MAAM,UAAEpE,GAAc3C,KAAKK,MAAMc,UAEjC,OAAKnB,KAAKsL,mBAAmBxI,cAK1B,CACC,IAAmBnC,QACnB,IAAmB2J,UACnB,IAAmB1H,aACnB0E,SAAS3E,GAMX,sBAAIlB,IAAI,kBACN,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,SAAU,oBAAqBnB,UACjE,oBAAU,mBAhBR,MAsBX,KAAAuH,gBAAkB,EAAG7M,MAAK4F,QAAqBkH,EAAkBC,KAC/D,MAAMtG,EAAWqG,EAAO,mCAA+B9M,GAA/B,6BAA6DA,GAC/EsF,EAAK,MAAQyH,EAAR,CAAmB7L,UAAW3C,KAAKK,MAAMc,UAAUwB,YAC9D,OACE,sBAAIlB,IAAKA,GACP,gBAAC,OAAI,CAACgK,gBAAgB,SAAS9L,GAAI,CAAEuI,WAAUnB,UAC5CM,KAMT,KAAAoG,sBAAyB1G,IACJ/G,KAAKsL,mBAAmBW,YAAc,IACvCjH,IAAI4I,GAAK5N,KAAKsO,gBAAgBV,GAAG,EAAM7G,IAG3D,KAAA0H,iBAAoB1H,IAClB,MACM2H,GADa1O,KAAKK,MAAMc,UAAU8K,YAAc,IACVlH,OAC1CmH,IAAcA,EAAUzK,IAAI0K,WAAW,oBAGzC,OAAwC,IAApCuC,EAAyBvJ,OACpB,KAIP,gBAAC,IAAQ,aACG,aACV7B,QACE,sBAAI7D,UAAU,QACXiP,EAAyB1J,IAAI4I,GAAK5N,KAAKsO,gBAAgBV,GAAG,EAAO7G,KAGtE6F,QAAQ,MACP,EAAGC,gBAAelE,UACjB,qCACiBA,EAAI,gBACL,OACdlJ,UAAW,EAAW,kBAAmB,CAAEuE,OAAQ2E,IACnDlF,KAAK,IACL/D,GAAG,4BACHuE,QAAS4I,GACR,oBAAU,QACX,gBAAC,IAAY,CAACpN,UAAU,0BAOlC,SACE,MAAMyL,EAAYlL,KAAKkL,YACjBxI,EAAgB1C,KAAK0C,gBACrB2I,EAAcrL,KAAKqL,cACnBJ,EAAcjL,KAAKiL,cACnBlE,EAAQ/G,KAAKuL,WACnB,OACE,uBAAK9L,UAAU,kDACb,gBAAC,KAAU,KACRO,KAAKwL,oBAAoBzE,EAAOsE,GAChCrL,KAAK4L,iBAAiBX,EAAalE,GACnC/G,KAAK+L,2BAA2Bd,EAAalE,EAAOsE,GACpDrL,KAAKgM,sBAAsBf,EAAalE,GACxC/G,KAAK8L,4BAA4Bb,EAAalE,GAC9C/G,KAAK0L,eAAeT,EAAalE,EAAOrE,EAAe2I,GACvDrL,KAAK2L,mBAAmBV,EAAalE,GACrC/G,KAAKyO,iBAAiB1H,IAEzB,gBAAC,KAAU,KACR/G,KAAKoM,qBAAqBrF,EAAOmE,EAAWxI,EAAe2I,GAC3DrL,KAAK2N,+BAA+BzC,EAAWxI,MAO3C,cAAA3B,EAAA,GAAa,I,4DCtiBb,SAAS,GAAWV,GACjC,MAAM,SAAEsO,EAAF,UAAYC,EAAZ,QAAuBrH,EAAvB,IAAgCsH,GAAQxO,EAE9C,OACE,uBACEZ,UAAW,EAAW,+BAAgC,CAAEkJ,KAAMiG,IAC9DE,MAAO,CAAED,QACT,uBAAKpP,UAAU,gBACb,gBAAC,eAAW,CAACwE,QAASsD,KAEvBqH,GACC,gBAAC,KAAiB,CAACG,UAAWxH,GAC5B,gBAAC,KAAmB,CAACyH,eAAgBzH,GACnC,uBAAK9H,UAAU,sCAAsCkP,M,ICTrDM,G,yDAML,SAASC,GAAgB3N,EAAiBvC,GAC/C,MAAMwC,EAAM2N,GAAY5N,EAAMvC,IACxB,OAAEkC,EAAF,OAAUkO,EAAS,KAAnB,OAAyBC,EAAS,eAAlC,QAAkDC,GAAYtQ,EAEpE,GAAe,QAAXoQ,EACF,OAAO5N,EACF,CACL,IAAIkC,EACA6L,EAEJ,OAAQhO,GACN,KAAK0N,GAAUO,UACb9L,EAAQ,aACR,MACF,KAAKuL,GAAUQ,QACb/L,EAAQ,iCAAuB,CAAEjC,IAAK4N,IACtC,MACF,KAAKJ,GAAUS,YACf,QACEhM,EAAQ,eAIR4L,IACFC,EAAa,8BAAmB,YAAcD,EAASpO,IAAS,IAGlE,MAAMyO,EAAO,YAAQjM,EAAR,aAAkBlC,EAAlB,KACb,OAAO+N,EAAU,WAAOI,EAAP,aAAmBJ,EAAnB,KAAmCI,GAIjD,SAASR,GACd5N,GACA,OAAEL,EAAF,QAAUoO,EAAV,MAAmBM,EAAQ,QAA3B,OAAoCP,EAAS,eAA7C,YAA6DnN,IAE7D,OAAQX,GACN,KAAK0N,GAAUO,UACb,MAAM,GAAN,OAAU,wBAAV,6CAA2DI,EAA3D,QACF,KAAKX,GAAUS,YACb,MAAM,GAAN,OAAU,wBAAV,4CAA0D,qBACxD,mBAAQ,CAAExO,SAAQoO,UAASpN,kBAE/B,KAAK+M,GAAUQ,QACf,QACE,MAAM,GAAN,OAAU,wBAAV,uCAAqD,qBACnD,mBAAQ,CAAEvO,SAAQoO,UAASD,SAAQnN,oBApD3C,SAAY+M,GACV,oBACA,6BACA,wBAHF,CAAYA,QAAS,KCLN,MAAM,WAAoB,gBAAzC,c,oBACE,KAAAtF,YAAc,KACZ3J,KAAKK,MAAM4D,QAAQjE,KAAKK,MAAMkB,OAGhC,SACE,MAAM,SAAEwC,EAAF,KAAYxC,EAAZ,IAAkBC,GAAQxB,KAAKK,MAC/BwP,EAAQtO,IAAS0N,GAAUQ,QAAU,aAAUpN,EACrD,OACE,gBAAC,UAAM,CAAC5C,UAAW,EAAW,eAAgB,CAAEsE,aAAaE,QAASjE,KAAK2J,aACzE,uBAAKmG,IAAK,oBAAU,kBAAmBvO,EAAM,OAAQwO,IAAKvO,EAAKqO,MAAOA,M,mCCJ/D,MAAM,WAAoB,gBAAzC,c,oBACE,KAAAjQ,SAAU,EAEV,KAAAC,MAAe,CAAEmQ,aAAc,IA2B/B,KAAAC,gBAAkB,IACT,CAAC,QAAS,QAAS,UAAUjL,IAAI4K,IAAK,CAC3ClM,MAAO,oBAAU,iCAAkCkM,GACnD3H,MAAO2H,KAIX,KAAAM,iBAAmB,IACV,CAAC,KAAM,OAAOlL,IAAIoK,IAAM,CAC7B1L,MAAO,oBAAU,kCAAmC0L,GACpDnH,MAAOmH,KAIX,KAAAe,iBAAmB,IACVnQ,KAAKH,MAAMmQ,aAAahL,IAAIvD,IACjC,MAAM4N,EAASrP,KAAKK,MAAM+P,QAAQ3O,GAClC,MAAO,CACLwG,MAAOxG,EACPiC,MAAO2L,EAAS,iCAAuBA,GAAU5N,KAKvD,KAAA4O,kBAAoB,EAAGpI,YACrBjI,KAAKK,MAAMiQ,cAAc,CAAEV,MAAO3H,KAGpC,KAAAsI,mBAAqB,EAAGtI,YACtBjI,KAAKK,MAAMiQ,cAAc,CAAElB,OAAQnH,KAGrC,KAAAuI,mBAAqB,EAAGvI,YACtBjI,KAAKK,MAAMiQ,cAAc,CAAEjB,OAAQpH,KAGrC,KAAAwI,gBAAkB,CAAClP,EAAiBvC,IAC9BuC,IAAS0N,GAAUO,UAEnB,gCACE,yBAAO/P,UAAU,eAAeiR,QAAQ,eACrC,oBAAU,SACL,KACR,gBAAC,KAAM,CACLjR,UAAU,eACVkR,WAAW,EACXtJ,KAAK,cACLS,SAAU9H,KAAKqQ,kBACfrR,QAASgB,KAAKiQ,kBACdW,YAAY,EACZ3I,MAAOjJ,EAAQ4Q,SAIZrO,IAAS0N,GAAUQ,QAE1B,gCACE,yBAAOhQ,UAAU,eAAeiR,QAAQ,gBACrC,oBAAU,0BACL,KACR,gBAAC,KAAM,CACLjR,UAAU,eACVkR,WAAW,EACXE,UAAW,CAAEC,UAAW,KACxBzJ,KAAK,eACLS,SAAU9H,KAAKwQ,mBACfxR,QAASgB,KAAKmQ,mBACdS,YAAY,EACZ3I,MAAOjJ,EAAQqQ,UAKd,KAlGX,oBACErP,KAAKJ,SAAU,EACfI,KAAK+Q,oBAGP,uBACE/Q,KAAKJ,SAAU,EAGjB,oBACE,cAAY,GAAOM,KACjB8Q,IACE,GAAIhR,KAAKJ,QAAS,CAChB,MAAMqR,EAASD,EAAYE,KAAKC,GAAgB,uBAAXA,EAAEC,MACjCC,EAAKJ,GAAUA,EAAOK,QAAQJ,KAAKK,GAAe,YAAVA,EAAE9P,KAC1C+P,EAAQH,GAAMA,EAAGI,QAAUJ,EAAGI,OAAOP,KAAKQ,GAAe,WAAVA,EAAEjQ,KACnD+P,GAASA,EAAMG,gBACjB3R,KAAKC,SAAS,CAAE+P,aAAcwB,EAAMG,mBAI1C,QAiFJ,SACE,MAAM,UAAElS,EAAF,QAAaT,EAAb,KAAsBuC,GAASvB,KAAKK,MAC1C,OACE,uBAAKZ,UAAWA,GACbO,KAAKyQ,gBAAgBlP,EAAMvC,GAE5B,yBACES,UAAW,EAAW,eAAgB,CACpC,aAAc8B,IAAS0N,GAAUS,cAEnCgB,QAAQ,gBACP,oBAAU,UACL,KACR,gBAAC,KAAM,CACLjR,UAAU,eACVkR,WAAW,EACXtJ,KAAK,eACLS,SAAU9H,KAAKuQ,mBACfvR,QAASgB,KAAKkQ,mBACdU,YAAY,EACZ3I,MAAOjI,KAAKK,MAAMrB,QAAQoQ,QAAU,S,qsBC3H/B,MAAM,WAAsB,gBAA3C,c,oBACE,KAAAvP,MAAe,CACb+R,aAAc3C,GAAUQ,QACxBoC,aAAc,CAAEjC,MAAO,QAASP,OAAQ,KAAUyC,eAGpD,KAAAC,kBAAqBH,IACnB5R,KAAKC,SAAS,CAAE2R,kBAGlB,KAAAI,oBAAuBhT,IACrBgB,KAAKC,SAASJ,IAAK,CAAOgS,aAAa,MAAMhS,EAAMgS,aAAb,GAA8B7S,OAGtE,SACE,MAAM,WAAEgE,EAAF,QAAcsM,EAAd,UAAuB3M,GAAc3C,KAAKK,OAC1C,aAAEuR,EAAF,aAAgBC,GAAiB7R,KAAKH,MACtCoS,EAAgB,IAAK3C,WAAYuC,EAAjB,GAAkC,YAAmB7O,IAE3E,OACE,uBAAKvD,UAAU,uBACb,0BAAK,oBAAU,4BAA6BkD,IAC5C,qBAAGlD,UAAU,qBAAqB,oBAAU,8BAA+BkD,IAC3E,gBAAC,GAAW,CACVsB,QAASjE,KAAK+R,kBACdhO,SAAUkL,GAAUQ,UAAYmC,EAChCrQ,KAAM0N,GAAUQ,QAChBjO,IAAK2N,GAAYF,GAAUQ,QAASwC,KAEtC,qBAAGxS,UAAU,iCACV,oBAAU,kBAAmBwP,GAAUQ,QAAS,cAAe9M,IAElE,gBAAC,GAAW,CACVsB,QAASjE,KAAK+R,kBACdhO,SAAUkL,GAAUS,cAAgBkC,EACpCrQ,KAAM0N,GAAUS,YAChBlO,IAAK2N,GAAYF,GAAUS,YAAauC,KAE1C,qBAAGxS,UAAU,iCACV,oBAAU,kBAAmBwP,GAAUS,YAAa,cAAe/M,IAEtE,gBAAC,GAAW,CACVlD,UAAU,wCACV2Q,QAASpQ,KAAKK,MAAM+P,QACpBpR,QAAS6S,EACTtQ,KAAMqQ,EACNtB,cAAetQ,KAAKgS,sBAEtB,gBAACE,GAAA,EAAW,CAACC,WAAW,EAAMC,QAASlD,GAAgB0C,EAAcK,O,yBC5D9D,SAASI,GAAehS,GACrC,MAAM,SAAEsO,EAAF,UAAYC,EAAZ,aAAuB0D,GAAiBjS,EAC9C,OACE,uBACEZ,UAAW,EACT,wEACA,CACEkJ,KAAMiG,KAGV,sBAAInP,UAAU,yCAAyCwE,QAAS,IAAMqO,KACpE,gBAAC,KAAQ,CAAC7S,UAAU,wBACnB,oBAAU,SAGZmP,GAAa,uBAAKnP,UAAU,8BAA8BkP,I,6CC8ClD,ICxEH4D,GDwEG,UAAAC,GAAA,IAzDR,SAA8BnS,GACnC,MAAM,SAAEoS,EAAF,UAAYtR,EAAZ,QAAuBrB,EAAvB,cAAgC4S,EAAhC,gBAA+CC,GAAoBtS,EAkBnEuS,EAAuBF,EAAc3N,OAAO8N,GAAKA,EAAEvD,SAAWuD,EAAEvD,UAAYnO,EAAUM,KAE5F,OACE,gCACE,0BAAK,oBAAU,+BAEf,gBAAClB,EAAA,MAAK,CAACd,UAAU,aAAagB,QAAQ,QACnC,oBAAU,wCAGb,gBAAC,KAAe,CAACX,QAASA,GACxB,yBAAOL,UAAU,kCACf,6BACE,0BACE,mCAAgB,oBAAU,aACzBgT,EAASzN,IAAI8N,GACZ,sBAAIrT,UAAU,cAAcgC,IAAKqR,GAC/B,0BAAK,oBAAU,uBAAwBA,QAM/C,gBAACC,GAAA,EAAiB,CAChBN,SAAUA,EACVO,WA7BY,CAACzR,EAAcuR,IAC7B,wBAAN,OAA+B3R,EAAUM,IAAzC,YAAgDF,EAAhD,YAAwDuR,GA6BhDJ,cAAeE,EACfK,MA3CoB,EAAGH,UAASvR,WACxClB,EAAM6S,gBAAgB,CAAE5D,QAASnO,EAAUM,IAAKqR,UAASvR,UA2CjD4R,SAxCuB,EAAGL,UAASvR,WAC3ClB,EAAM+S,mBAAmB,CACvB9D,QAASnO,EAAUM,IACnBqR,UACAvR,UAqCM+N,SAAS,EACT+D,MAAOV,U,SChEnB,SAAYJ,GACV,mBACA,uBACA,qCAHF,CAAYA,QAAuB,K,mCCwBpB,eAfR,SAAuBlS,GAC5B,MAAM,MAAEqD,EAAF,GAAS/D,GAAOU,EAEtB,OACE,qBACEZ,UAAU,wDACVwE,QAAS,IAAM5D,EAAMiS,aAAa3S,GAClCmO,KAAK,OACLC,SAAU,GACTrK,EACD,gBAAC,KAAgB,U,UCVR,SAAS4P,IAAQ,aAAErJ,EAAF,UAAgBtH,IAC9C,OACE,gCACE,0BAAK,oBAAU,uBAAwBA,IACvC,uBAAKlD,UAAU,uBACb,yBAAOA,UAAU,eAAe8T,UAAU,EAAMhS,KAAK,OAAO0G,MAAOgC,IACnE,gBAAC,mBAAe,CAACxK,UAAU,qBAAqB+T,UAAWvJ,M,kCCDpD,MAAM,WAAkB,gBAAvC,c,oBACE,KAAArK,SAAU,EACV,KAAAC,MAAe,GAiBf,KAAA4T,UAAY,IACV,aAAgBzT,KAAKK,MAAMc,UAAUM,KAAKvB,KACxCsD,IACMxD,KAAKJ,SACPI,KAAKC,SAAS,CAAEuD,WAGpB,QAtBJ,oBACExD,KAAKJ,SAAU,EACfI,KAAKyT,YAGP,mBAAmBC,GACbA,EAAUvS,UAAUM,MAAQzB,KAAKK,MAAMc,UAAUM,KACnDzB,KAAKyT,YAIT,uBACEzT,KAAKJ,SAAU,EAajB,SACE,MAAM,MAAE4D,GAAUxD,KAAKH,MAEvB,IAAK2D,GAA0B,IAAjBA,EAAM2B,OAClB,OAAO,KAGT,MAAMwO,EAAe,aAAWnQ,GAEhC,OACE,gCACE,uBAAK/D,UAAU,8BACb,0BAAK,oBAAU,4BACf,sBAAIA,UAAU,qBACXkU,EAAa3O,IAAI2H,GAChB,gBAACiH,GAAA,EAAQ,CAACnS,IAAKkL,EAAKjN,GAAIiN,KAAMA,SCjD7B,SAASkH,IAAgB,YAAEnE,IACxC,OACE,gCACE,0BAAK,oBAAU,8BAEf,sBAAIjQ,UAAU,qBACZ,0BACGiQ,EAAYoE,WACX,wBAAMrU,UAAU,qB,IAAsB,oBAAU,WAAmB,KAErE,gBAAC,OAAI,CAACE,GAAI,YAAkB+P,EAAYjO,MAAOiO,EAAYrI,S,cCG9D,MAAM,WAA4B,gBAAzC,c,oBACE,KAAAzH,SAAU,EACV,KAAAC,MAAe,CAAEkU,gBAAiB,IAElC,oBACE/T,KAAKJ,SAAU,EACfI,KAAKgU,sBAGP,uBACEhU,KAAKJ,SAAU,EAGjB,sBACE,MAAMqU,EAAmBjU,KAAKK,MAAM6T,SAASnP,OAAO2M,IAAMA,EAAEyC,SACtDC,EAAWH,EAAiBjP,IAAIqP,GACpCrU,KAAKsU,8BAA8BD,EAAQ5S,MAE7C8S,QAAQC,IAAIJ,GAAUlU,KACpBuU,IACE,GAAIzU,KAAKJ,QAAS,CAChB,MAAMmU,EAAkC,GACxCU,EAAUC,QAAQ,CAACC,EAAO5V,KACxB,MAAM6V,EAAaX,EAAiBlV,GAAG0C,IACvCsS,EAAgBa,GAAcD,IAEhC3U,KAAKC,SAAS,CAAE8T,sBAGpB,QAIJ,8BAA8Ba,GAC5B,MAAMC,EAAO,CACXC,WAAY,OACZC,kBAAc1S,EACd2S,GAAI,EACJC,SAAUL,EACVM,SAAU,cAEZ,OAAO,aAAYL,GAAM3U,KAAKiV,GAAKA,EAAEC,OAGvC,wBAAwBf,GAEtB,OADcrU,KAAKH,MAAMkU,gBAAgBM,EAAQ5S,MACjC,EAGlB,cAAc4S,GACZ,MAAMgB,EAAoBrV,KAAKK,MAAMiV,UAAUjB,EAAQkB,UACjDC,EAAeH,EAAoBA,EAAkBhO,KAAOgN,EAAQkB,SAEpEE,EACJ,uBAAKhW,UAAU,iBACb,wBAAMA,UAAU,qB,IAAsB+V,EAAqB,KAC1DnB,EAAQF,QACPE,EAAQhN,KAER,gBAAC,OAAI,CAAC1H,GAAI,YAAqB0U,EAAQhN,KAAMgN,EAAQkB,WAAYlB,EAAQhN,OAK/E,GAAIgN,EAAQF,QAAS,CACnB,MAAMuB,EAAU,kCAAwB,2BAA4BrB,EAAQhN,MAC5E,OACE,gBAAC,KAAO,CAAC5F,IAAK4S,EAAQ5S,IAAK6B,QAASoS,GAClC,sBAAIjW,UAAU,gCAAgCgW,IAKpD,MAAMd,EAAQ3U,KAAK2V,wBAAwBtB,GAE3C,GAAIM,EAAQ,EAAG,CACb,MAAMe,EAAU,kCAAwB,8BAA+Bf,GACvE,OACE,gBAAC,KAAO,CAAClT,IAAK4S,EAAQ5S,IAAK6B,QAASoS,GAClC,sBAAIjW,UAAU,iCAAiCgW,IAKrD,OAAO,sBAAIhU,IAAK4S,EAAQ5S,KAAMgU,GAGhC,SACE,MAAM,gBAAEG,EAAF,SAAmB1B,GAAalU,KAAKK,MAE3C,OACE,gCACE,sBAAIZ,UAAWmW,GAAkB,oBAAU,8BAE3C,sBAAInW,UAAU,qBACXyU,EAASlP,IAAIqP,GAAWrU,KAAK6V,cAAcxB,OAWvC,yBAJUxU,IAAD,CACtByV,UAAW,uBAAazV,KAGX,CAAyB,I,yCCnHzB,SAASiW,IAAS,UAAE3U,EAAF,SAAa4U,IAC5C,MAAMC,EAAQ7U,EAAUwB,YAAc,IAAmBC,YACnDqT,EAAQF,EAAS7E,KAAKzB,GAAWA,EAAQJ,SAAW,KAAU4G,OAC9DC,EAAWF,EACbD,EAAS7E,KAAKzB,GAAWA,EAAQJ,SAAW,KAAU6G,eACtD7T,EAEJ,OACE,gCACE,0BAAK,0BAAe,KAAU4T,QAC9B,uBAAKxW,UAAU,uBACZwW,EACC,gCACE,gBAACE,GAAA,EAAa,CAAC1W,UAAU,OAAO0B,UAAWA,EAAUM,IAAK4N,OAAQ,KAAU4G,OACzE,yBAAcA,EAAMhO,MAAO,cAG9B,wBAAMxI,UAAU,eACd,gBAAC,KAAU,CAACwI,MAAOmO,OAAOH,EAAMhO,WAIpC,iCAGD+N,GACC,wBAAMvW,UAAU,+CACbyW,EACC,gBAACC,GAAA,EAAa,CAAChV,UAAWA,EAAUM,IAAK4N,OAAQ,KAAU6G,UACzD,wBAAMzW,UAAU,OAAO,yBAAcyW,EAASjO,MAAO,eAGvD,wBAAMxI,UAAU,OAAK,KAEvB,wBAAMA,UAAU,iCACb,oBAAU,4B,4EC/BV,MAAM,WAAyB,gBAA9C,c,oBACE,KAAAG,SAAU,EACV,KAAAC,MAAe,CAAEwW,aAAc,IAU/B,KAAAC,SAAYvP,GACH,YAAkB,CACvBC,EAAGD,EACHiO,GAAIuB,KAAKC,IAAIxW,KAAKK,MAAMoW,aAAatR,OAAS,EAjBlC,GAiBiD,OAC5DjF,KACD,EAAGwW,WACG1W,KAAKJ,SACPI,KAAKC,SAAS,CAAEoW,aAAcK,KAGlC,QAIJ,KAAA5S,SAAY6S,IACV3W,KAAKK,MAAMuW,eAAe,IAAI5W,KAAKK,MAAMoW,aAAcE,KAGzD,KAAAE,WAAcF,IACZ3W,KAAKK,MAAMuW,eAAe,KAAQ5W,KAAKK,MAAMoW,aAAcE,KA3B7D,oBACE3W,KAAKJ,SAAU,EAGjB,uBACEI,KAAKJ,SAAU,EAyBjB,SACE,MAAMkX,EAAgB,KAAW9W,KAAKH,MAAMwW,aAAcrW,KAAKK,MAAMoW,cACrE,OACE,gBAACM,GAAA,EAAY,CACXC,SAxCU,GAyCVV,SAAUtW,KAAKsW,SACfxS,SAAU9D,KAAK8D,SACf+S,WAAY7W,KAAK6W,WACjBJ,aAAczW,KAAKK,MAAMoW,aACzBC,KAAMI,KC7CC,MAAM,WAAiB,gBAAtC,c,oBAKE,KAAAG,cAAgB,KACd,MAAM,cAAE5V,GAAkBrB,KAAKK,MAAMc,UACrC,OAAOE,GAAiBA,EAAcyB,cAGxC,KAAAoU,YAAc,CAACC,EAAoBC,KAArB,CACZvI,IAAKsI,EAAOE,OACZC,MAAOF,EAAavH,MAAQsH,EAAOtH,QAGrC,KAAA0H,QAAW5V,IACT,MAAM,UAAER,GAAcnB,KAAKK,MAE3B,OAAIc,EAAUwB,YAAc,IAAmBC,YACtC,YAAmB,CACxB4U,YAAarW,EAAUM,IACvBiV,KAAM/U,EAAO8V,KAAK,OAGb,YAAe,CACpBnI,QAASnO,EAAUM,IACnBiV,KAAM/U,EAAO8V,KAAK,QAKxB,KAAAC,qBAAwB/V,IACtB3B,KAAKuX,QAAQ5V,GAAQzB,KACnB,IAAMF,KAAKK,MAAMsX,kBAAkB,CAAEjB,KAAM/U,IAC3C,SAIJ,SACE,MAAM,IAAEF,GAAQzB,KAAKK,MAAMc,UACrBuV,EAAO1W,KAAKK,MAAMc,UAAUuV,MAAQ,GAE1C,OAAI1W,KAAKiX,gBAEL,uBAAKxX,UAAU,mCAAmCyE,IAAK0T,GAAS5X,KAAK4X,KAAOA,GAC1E,gBAAC,IAAQ,CACPC,cAAc,EACdC,qBAAqB,EACrBxU,QACE,gBAAC,GAAgB,CACfgM,QAAS7N,EACTgV,aAAcC,EACdE,eAAgB5W,KAAK0X,uBAGzBK,iBAAkB,kBAAeC,YACjC,gBAAC,cAAU,CAACC,SAAUC,GAAalY,KAAKkY,SAAWA,EAAWC,iBAAiB,GAC7E,gBAACC,GAAA,EAAQ,CAACC,aAAa,EAAM3B,KAAMA,EAAKvR,OAASuR,EAAO,CAAC,oBAAU,iBAOzE,uBAAKjX,UAAU,oCACb,gBAAC2Y,GAAA,EAAQ,CACPC,aAAa,EACb5Y,UAAU,OACViX,KAAMA,EAAKvR,OAASuR,EAAO,CAAC,oBAAU,gBCenC,eA5ER,SAAoCrW,GACzC,MAAM,0BAAEiY,EAAF,aAA6BC,EAA7B,UAA2CpX,EAA3C,SAAsD4U,EAAW,IAAO1V,EAExE2V,EAAQ7U,EAAUwB,YAAc,IAAmBC,YAEzD,OACE,gCACE,2BACE,sBAAInD,UAAU,8BACX,oBAAUuW,EAAQ,cAAgB,UAAW,gBAIlD,uBAAKvW,UAAU,mBACb,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,uBACb,sBAAIA,UAAU,gBAAgB,oBAAU,6BACvC0B,EAAUqX,YACT,gBAACC,GAAA,EAAqB,CACpB9V,UAAWxB,EAAUwB,UACrB6V,WAAYrX,EAAUqX,cAK3BrX,EAAUuX,aAAe,yBAAIvX,EAAUuX,aAExC,gBAAC,GAAQ,CAACvX,UAAWA,EAAWwW,kBAAmBtX,EAAMsX,qBAG3D,uBAAKlY,UAAU,oDACb,gBAACqW,GAAQ,CAAC3U,UAAWA,EAAW4U,SAAUA,MAG1CC,IACC7U,EAAUuO,aACRvO,EAAUwX,iBAAmBxX,EAAUwX,gBAAgBxT,OAAS,IACjE,gCACE,uBAAK1F,UAAU,8BACZ0B,EAAUuO,aAAe,gBAACmE,GAAe,CAACnE,YAAavO,EAAUuO,cAEjEvO,EAAUwX,iBAAmBxX,EAAUwX,gBAAgBxT,OAAS,GAC/D,gBAAC,GAAmB,CAClByQ,gBAAiBzU,EAAUuO,YAAc,sBAAmBrN,EAC5D6R,SAAU/S,EAAUwX,qBAO9B3C,GAAS,gBAAC,GAAS,CAAC7U,UAAWA,IAEjC,uBAAK1B,UAAU,8BACb,gBAAC6T,GAAO,CAACrJ,aAAc9I,EAAUM,IAAKkB,UAAWxB,EAAUwB,aAG5D4V,GACC,gBAAC,GAAU,CACT7U,MAAO,oBAAU,4BAA6BvC,EAAUwB,WACxD2P,aAAcjS,EAAMiS,aACpB3S,GAAI4S,GAAwBqG,SAG/BN,GACC,gBAAC,GAAU,CACT5U,MAAO,oBAAU,iCACjB4O,aAAcjS,EAAMiS,aACpB3S,GAAI4S,GAAwBG,qBC5DjC,MAAM,WAA2B,gBAAxC,c,oBACE,KAAA9S,SAAU,EACV,KAAAC,MAAe,CACbgZ,KAAMtG,GAAwBuG,MAahC,KAAAC,QAAU,CAACF,EAAgCtG,GAAwBuG,QACjE9Y,KAAKC,SAAS,CAAE4Y,UAGlB,KAAAG,aAAe,KACb,MACE7X,WAAW,IAAEM,IACXzB,KAAKK,MAET,OAAO,aAAY,CACjBc,UAAWM,EACXwX,WAAY,CAAC,KAAUhD,MAAO,KAAUC,UAAUuB,SACjDvX,KAAK6V,IACF/V,KAAKJ,SACPI,KAAKC,SAAS,CAAE8V,gBAxBtB,oBACE/V,KAAKJ,SAAU,EACfI,KAAKK,MAAM6Y,eACXlZ,KAAKgZ,eAGP,uBACEhZ,KAAKJ,SAAU,EAsBjB,SACE,MAAM,WAAEoD,EAAF,UAAc7B,EAAd,YAAyBiI,EAAzB,QAAsCgH,GAAYpQ,KAAKK,OACvD,SAAE0V,EAAF,KAAY8C,GAAS7Y,KAAKH,MAE1ByY,EACJ,YAAWlP,IAAgBjI,EAAUwB,YAAc,IAAmBhC,QAClE4X,OACQlW,IAAZ+N,GACyB,YAAzBjP,EAAUqX,aACTrX,EAAUwB,YAAc,IAAmBC,aAC1CzB,EAAUwB,YAAc,IAAmBhC,SAE/C,OACE,gCACE,gBAAC,GAA0B,CACzB2X,0BAA2BA,EAC3BC,aAAcA,EACdpX,UAAWA,EACX4U,SAAUA,EACV4B,kBAAmB3X,KAAKK,MAAMsX,kBAC9BrF,aAActS,KAAK+Y,UAEpBR,GACC,gBAAClG,GAAc,CACbzD,UAAWiK,IAAStG,GAAwBqG,OAC5CtG,aAActS,KAAK+Y,SACnB,gBAAC,GAAa,CACZ/V,WAAYA,EACZoN,QAASA,EACTd,QAASnO,EAAUM,IACnBkB,UAAWxB,EAAUwB,aAI1B2V,GACC,gBAACjG,GAAc,CACbzD,UAAWiK,IAAStG,GAAwBG,cAC5CJ,aAActS,KAAK+Y,SACnB,gBAAC,GAAoB,CAAC5X,UAAWA,OAQ7C,MAAMgY,GAAqB,CAAED,aAAA,KAOd,yBALUrZ,IAAD,CACtBuJ,YAAa,yBAAevJ,GAC5BuQ,QAAS,qBAAWvQ,KAGkBsZ,GAAzB,CAA6C,IC1F7C,SAASC,GAAa/Y,GACnC,MAAM,YACJoF,EADI,UAEJtE,EAFI,kBAGJoB,EAHI,YAIJnC,EAJI,wBAKJwB,EALI,aAMJC,EANI,UAOJC,EAPI,SAQJiI,GACE1J,GACE,oBAAEgZ,EAAF,mBAAuBC,GAAuB,YAE7CC,EAAoBC,GAAyB,YAAe,GAiBnE,IAAIC,EAfJ,YAAgB,KACd,MAAM,YAAE3Q,EAAF,IAAerH,EAAf,KAAoB4F,EAApB,aAA0B0N,GAAiB5T,GAC3C,UAAEwB,GAAcmG,EAAYA,EAAY3D,OAAS,GAErD,CACE,IAAmBxE,QACnB,IAAmB2J,UACnB,IAAmB1H,YACnB,IAAmBwI,YACnB9D,SAAS3E,IAEX+W,EAAA,EAAcC,IAAIlY,EAAK4F,EAAM1E,EAAUsE,cAAe8N,IAEvD,CAAC5T,EAAWA,EAAUM,OAGrBI,GAAgBC,GAAc1B,GAAeA,EAAYa,SAAW,IAAagB,UACnFwX,EACE,gBAAC,EAAuB,CACtBtY,UAAWA,EACXf,YAAaA,EACbwB,wBAAyBA,EACzBC,aAAcA,EACdC,UAAWA,KAKjB,MAAM8X,EAAmBH,EAAiBJ,EAAsB,GAAKA,EAErE,OACE,gBAAC,IAAa,CAAChC,OAAQuC,EAAkBla,GAAG,qBAAqBma,MAAOJ,GACtE,uBACEha,UAAW,EAAW,mEAAoE,CACxF,gBAAqC,IAApBsK,EAAS5E,UAE5B,gBAAC,GAAM,CACLM,YAAaA,EACbtE,UAAWA,EACXoB,kBAAmBA,IAErB,gBAAC,GAAU,CACTS,WAAYT,EACZpB,UAAWA,EACX+I,iBAAkB7J,EAAM6J,iBACxBH,SAAUA,KAGd,gBAAC,GAAI,CACH/G,WAAYT,EACZkD,YAAaA,EACbtE,UAAWA,EACXU,aAAcA,EACdC,UAAWA,EACX+L,oBAAqB,IAAM2L,GAAuBD,KAEpD,gBAAC,GAAU,CACT3K,UAAW2K,EACXhS,QAAS,IAAMiS,GAAsB,GACrC3K,IAAKyK,EAAqBD,GAC1B,gBAAC,GAAkB,CACjBrW,WAAYT,EACZpB,UAAWA,EACXwW,kBAAmBtX,EAAMsX,sB,6rBCxD5B,MAAM,WAA2B,gBAAxC,c,oBAEE,KAAA/X,SAAU,EACV,KAAAC,MAAe,CAAE4F,YAAa,GAAI3D,WAAW,EAAOhC,SAAS,EAAMiK,SAAU,IAsB7E,KAAA+P,aAAgB3Y,GAAD,MACVA,EADU,CAEbwB,UAAWxB,EAAU2H,YAAY3H,EAAU2H,YAAY3D,OAAS,GAAGxC,YAwDrE,KAAAoX,cACE5Y,IAMA,MAAM6Y,EAAa7Y,EAAU2H,YAAYoI,KAAK,EAAGvO,eACxC,CAAC,MAAO,OAAO2E,SAAS3E,IAGjC,GAAIqX,EAAY,CACd,MAAM,IAAEvY,GAAQuY,EAChB,OAAOzF,QAAQC,IAAI,CACjB,YAAY/S,GACa,QAAzBuY,EAAWrX,UAAsB4R,QAAQ0F,QAAQ,IAAM,YAAgBxY,KACtEvB,KAAK,EAAEga,EAAUhV,MAClB,MAAMO,EAAc,IAAIyU,KAAahV,GAC/BlC,EAAahD,KAAKma,qBAAqB1U,GAI7C,OAFAzF,KAAKoa,uBAAuB3U,EAAatE,GAElC,CAAE6B,aAAYyC,cAAatE,eAGpC,OAAOoT,QAAQ0F,QAAQ,CAAExU,YAAa,GAAItE,eAI9C,KAAAkZ,YAAelZ,IACb,YAAqBA,EAAUM,KAAKvB,KAClC,EAAGoa,UAASC,YACV,GAAIva,KAAKJ,QAAS,CAChB,IAAI4a,GAAuB,EAC3Bxa,KAAKC,SACH,EAAG+C,aAAY7B,YAAWf,cAAaqa,sBACrC,MAAMC,EAAiB1a,KAAK2a,eAAeL,EAAStX,GAC9C4X,EAAe5a,KAAK6a,gBAAgBN,EAAOvX,GAC3C8X,EAAqBF,EAAa7V,OACtCgW,GAAQA,EAAK9Z,SAAW,IAAa+Z,YAGjCC,GACF7a,GAAesa,GAChBta,GAAesa,GAAkBta,EAAYV,KAAOgb,EAAehb,GAChEwb,EACJT,IACCK,EAAmB3V,SAAWsV,EAAgBtV,QAC7C,IAAa2V,EAAoBL,EAAiB,MAAMtV,OAAS,GAiBrE,OAfAqV,EAAuBhS,QAAQyS,GAAsBC,IAElDV,GACDrZ,IACC2Z,EAAmB3V,OAAS,IAAMhE,EAAUwJ,gBAG7C2B,OAAO6O,aAAanb,KAAKob,kBACzBpb,KAAKob,iBAAmB9O,OAAO+O,WAC7B,IAAMrb,KAAKqa,YAAYlZ,GAhJV,MAsJV,CACLf,YAAasa,EACb5Y,UAHgB8Y,EAAanT,KAAKsT,GAAQA,EAAK9Z,SAAW,IAAaqa,SAIvEb,gBAAiBK,IAGrB,KACMN,GACFxa,KAAKub,qBAMf,SAIJ,KAAAC,cAAgB,CAACra,EAAwB6B,KACX,QAAxB7B,EAAUwB,WACZ,YAAkB,IAChBxB,UAAWA,EAAUM,KAClB,YAAmBuB,KACrB9C,KACD,EAAGiB,gBACDnB,KAAKC,SAAS,CAAE8J,SAAU5I,EAAU4I,YAEtC,SAKN,KAAAoQ,qBAAwB1U,IACtB,MAAM,MAAEsB,GAAU/G,KAAKK,MAAMkM,SAC7B,OAAOxF,EAAM7E,YACTuD,EAAYyL,KAAK7K,GAAK,YAAcA,IAAMA,EAAE5E,MAAQsF,EAAM7E,aAC1DuD,EAAYyL,KAAK7K,GAAK,YAASA,KAAOU,EAAM7F,OAASmF,EAAEgB,OAASN,EAAM7F,OAASmF,EAAEgE,UAGvF,KAAAsQ,eAAiB,CAACL,EAAetX,KAC/B,GAAKsX,EAIL,OAAOA,EAAQrZ,SAAW,IAAagB,QAAUjC,KAAKyb,aAAanB,EAAStX,GACxEsX,OACAjY,GAGN,KAAAwY,gBAAkB,CAACD,EAAsB5X,IAChC4X,EAAa7V,OAAOgW,GAAQ/a,KAAKyb,aAAaV,EAAM/X,IAG7D,KAAAyY,aAAe,CAACV,EAA4C/X,KAC1D,GAAIA,EAAY,CACd,GAAI,YAAaA,GACf,OAAS+X,EAAK7Y,cAAgB6Y,EAAK7Z,QAAW8B,EAAWqE,OAAS0T,EAAK7Z,OAEzE,GAAI,YAAc8B,GAChB,OAAOA,EAAWvB,MAAQsZ,EAAK7Y,YAEjC,GAAI,YAASc,GACX,OAAOA,EAAWqE,OAAS0T,EAAK7Z,OAGpC,OAAQ6Z,EAAK7Z,SAAW6Z,EAAK7Y,aAG/B,KAAAkY,uBAAyB,CAAC3U,EAA2BtE,KACnDsE,EAAYiP,QAAQ1R,IACdA,EAAW/B,QACbjB,KAAKK,MAAMqb,qBACT1Y,EACA7B,EAAUM,IACVuB,EAAW/B,OAAO0a,sBAM1B,KAAAC,sBAAyBC,IACnB7b,KAAKJ,SACPI,KAAKC,SAASJ,IACZ,GAAIA,EAAMsB,UAAW,CAEnB,MAAO,CAAEA,UADS,MAAqBtB,EAAMsB,UAA3B,GAAyC0a,IAG7D,OAAO,QAKb,KAAAC,qBAAuB,KACjB9b,KAAKJ,SAAWI,KAAKH,MAAMsB,WAC7BnB,KAAK+Z,cAAc/Z,KAAKH,MAAMsB,WAAWjB,KACvC,EAAG8C,aAAYyC,kBACTzF,KAAKJ,SACPI,KAAKC,SAAS,CAAE+C,aAAYyC,iBAGhC,SAKN,KAAAsW,qBAAuB,KACrB,MAAM,UAAE5a,GAAcnB,KAAKH,WACTwC,IAAdlB,GACFnB,KAAKwb,cAAcra,IA3PvB,oBACEnB,KAAKJ,SAAU,EACfI,KAAKub,iBAGP,mBAAmB7H,GAEfA,EAAUnH,SAASxF,MAAMrH,KAAOM,KAAKK,MAAMkM,SAASxF,MAAMrH,IAC1DgU,EAAUnH,SAASxF,MAAM7F,SAAWlB,KAAKK,MAAMkM,SAASxF,MAAM7F,QAC9DwS,EAAUnH,SAASxF,MAAM7E,cAAgBlC,KAAKK,MAAMkM,SAASxF,MAAM7E,aAEnElC,KAAKub,iBAIT,uBACEvb,KAAKJ,SAAU,EACf0M,OAAO6O,aAAanb,KAAKob,kBAQ3B,iBACE,MAAM,OAAEla,EAAQxB,GAAI+B,EAAd,YAAmBS,GAAgBlC,KAAKK,MAAMkM,SAASxF,MAC7D/G,KAAKC,SAAS,CAAEH,SAAS,IAYzByU,QAAQC,IAAI,CACV,YAAuB,CAAErT,UAAWM,EAAKP,SAAQgB,gBACjD,YAAiB,CAAEf,UAAWM,EAAKP,SAAQgB,kBAE1ChC,KAAK,EAAE8b,GAAO7a,iBACb,MAAM8a,EAAyBjc,KAAK8Z,aAAL,MAAuBkC,EAAvB,GAA+B7a,IAc9D,OANEnB,KAAKK,MAAMkM,SAASrE,SAASgU,MAAM,cACnC,YAAgBD,EAAuBtZ,YAEvC3C,KAAKK,MAAMmH,OAAO2U,QAAQ,YAAgBhb,EAAUM,MAG/Cwa,GA7BMG,IACXpc,KAAKJ,UACHwc,GAAgC,MAApBA,EAASnb,OACvBjB,KAAKK,MAAMgc,qBAAqBrc,KAAKK,MAAMmH,QAE3CxH,KAAKC,SAAS,CAAEkB,eAAWkB,EAAWvC,SAAS,OA0BlDI,KAAKF,KAAK+Z,eACV7Z,KACC,EAAG8C,aAAYyC,cAAatE,gBACtBnB,KAAKJ,UACPI,KAAKC,SAAS,CACZ+C,aACAyC,cACAtE,YACArB,SAAS,IAEXE,KAAKqa,YAAYlZ,GACjBnB,KAAKwb,cAAcra,EAAW6B,KAGlC,QAqLN,SACE,MAAM,UAAE7B,EAAF,QAAarB,GAAYE,KAAKH,MAEpC,IAAKC,IAAYqB,EACf,OAAO,gBAAC7B,EAA0B,MAGpC,GAAI6B,aAAS,EAATA,EAAWmb,cACb,OAAO,gBAACC,EAAA,EAA8B,CAACpb,UAAWA,IAGpD,MAAM,WAAE6B,EAAF,YAAcyC,EAAd,YAA2BrF,EAA3B,UAAwC0B,EAAxC,gBAAmD2Y,GAAoBza,KAAKH,MAC5EgC,EAAe4Y,GAAmBA,EAAgBtV,OAAS,EAEjE,OACE,2BACGhE,IAAc,CAAC,MAAO,OAAOmG,SAASnG,EAAUwB,YAC/C,gBAACyW,GAAY,CACX3T,YAAaA,EACbtE,UAAWA,EACXoB,kBAAmBS,EACnB5C,YAAaA,EACbwB,wBAAyBxB,GAAeJ,KAAKyb,aAAarb,EAAa4C,GACvEnB,aAAcA,EACdC,UAAWA,EACX6V,kBAAmB3X,KAAK4b,sBACxB1R,iBAAkBlK,KAAK+b,qBACvBhS,SAAU/J,KAAKH,MAAMkK,WAGxBjK,EACC,uBAAKL,UAAU,qBACb,qBAAGA,UAAU,aAGf,gBAAC+c,EAAA,EAAiBC,SAAQ,CAACxU,MAAO,CAAEjF,aAAY7B,cAC7C,eAAmBnB,KAAKK,MAAMsO,SAAU,CACvC3L,aACAyC,cACAtE,YACAU,eACAC,YACA4a,iBAAkB1c,KAAK8b,qBACvBnE,kBAAmB3X,KAAK4b,2BAStC,MAAM,GAAqB,CAAEe,kBAAA,IAAmBjB,qBAAA,IAAsBW,qBAAA,KAEvD,iBAAAlU,EAAA,GAAW,kBAAQ,KAAM,GAAd,CAAkC,M,iCC/X5D,+EA+Be,SAAS+J,EAAY7R,GAClC,MAAM,UAAE8R,EAAF,OAAayK,EAAb,QAAqBxK,GAAY/R,EACjCwc,EAAa,SAA6B,MAEhD,IAAIC,EAOJ,OALEA,EADEC,MAAMC,QAAQ5K,GACDA,EAAQrN,OAAOkY,GAAQ,oBAAUA,IAAOxF,KAAKtF,EAAY,IAAM,WAE/DC,EAIf,uBAAK3S,UAAW,EAAW,yDAA0D,KACnF,uBAAKA,UAAU,SAASyE,IAAK2Y,GAC1BC,IAEDF,GAAU,gBAAC,kBAAe,CAACpJ,UAAWsJ,O,oBC/C9C,IAAIpe,EAAM,EAAQ,KACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,qJCeF,SAASie,EAAkB7c,GACxC,MAAM,OAAE2D,EAAF,OAAUmZ,EAAV,SAAkBC,EAAlB,QAA4BC,EAA5B,SAAqCtZ,GAAa1D,EAClDid,EAAU,IAAMjd,EAAMid,QAAQD,GAC9B5d,EAAY,EAAW,CAAEuE,SAAQoZ,aACjC1Z,EAAQrD,EAAMkd,YAAYF,GAEhC,OACE,sBAAIG,QAASF,EAASG,YAAaH,GACjC,gBAAC,IAAQ,CACPI,QAASlV,QAAQzE,GACjBtE,UAAWA,EACX2d,SAAUA,EACV1d,GAAI2d,EACJM,QAAStd,EAAMud,gBACdT,EACC,+CACiB,oBAAU,sBAD3B,aACqDzZ,GACnDjE,UAAU,sBACV,uCAAmB,EAAMA,UAAU,uBAAqB,KAGvDiE,GAGH,wBAAMjE,UAAU,sBAAsBiE,KCAjC,MAAM,UAAoB,gBAavC,YAAYrD,GACVkF,MAAMlF,GAXR,KAAAT,SAAU,EA2DV,KAAAie,mBAAqB,CAAC9Z,EAAmB+Z,KACnC/Z,EACF/D,KAAK+d,aAAaD,GAElB9d,KAAKge,eAAeF,IAIxB,KAAAhX,mBAAsBmB,IACpBjI,KAAKie,cAAeje,KAAKK,MAA2B6d,oBAAoBjW,KAG1E,KAAAkW,mBAAsBd,IACpBrd,KAAKC,SAAS,CAACme,EAAW/d,KACjB,CAAEge,UAAWre,KAAKse,eAAeje,EAAO+d,GAAW5R,QAAQ6Q,OAItE,KAAAkB,eAAkBC,IAChB,OAAQA,EAAI/X,SACV,KAAK,GACH+X,EAAIrG,kBACJqG,EAAI7X,iBACJ3G,KAAKC,SAASD,KAAKye,mBACnB,MACF,KAAK,GACHD,EAAIrG,kBACJqG,EAAI7X,iBACJ3G,KAAKC,SAASD,KAAK0e,uBACnB,MACF,KAAK,GACL,KAAK,GACHF,EAAIrG,kBACJ,MACF,KAAK,GACCnY,KAAKH,MAAMwe,WAAa,GAC1Bre,KAAK2e,aAAa3e,KAAKse,eAAete,KAAKK,MAAOL,KAAKH,OAAOG,KAAKH,MAAMwe,cAMjF,KAAAJ,cAAiBlX,IACf/G,KAAKC,SAAS,CAAEoe,UAAW,EAAGve,SAAS,EAAMiH,UAC7C/G,KAAKK,MAAMiW,SAASvP,GAAO7G,KAAKF,KAAK4e,YAAa5e,KAAK4e,cAGzD,KAAAb,aAAgBD,IACV9d,KAAK6e,aAAaf,EAAM9d,KAAKK,QAC/BL,KAAKie,cAAc,IAErBje,KAAKK,MAAMyD,SAASga,IAGtB,KAAAE,eAAkBF,GAAiB9d,KAAKK,MAAMwW,WAAWiH,GAEzD,KAAAe,aAAe,CAACC,GAAgBC,mBAAkBC,cAChDF,EAAK3Z,OAAS,IAAyC,IAApC4Z,EAAiBvS,QAAQsS,KAA4C,IAA5BE,EAASxS,QAAQsS,GAE/E,KAAAG,uBAA0B5e,IACxBL,KAAKC,SAAUJ,GACTA,EAAMkH,MACD,CACLgY,iBAAkB1e,EAAM6e,eAAerf,EAAMkH,MAAO1G,EAAM0e,mBAGrD,CAAEA,iBAAkB,IAAI1e,EAAM0e,qBAK3C,KAAAI,yBAA4B9e,IAC1BL,KAAKC,SAAUJ,GACU,IAAnBQ,EAAM2W,SACD,CAAEoI,mBAAoB,IAAW/e,EAAM2e,SAAU3e,EAAM0e,mBACrD1e,EAAM2W,SAAWnX,EAAMkf,iBAAiB5Z,OAC1C,CAAEia,mBAAoB,IAEtB,CACLA,mBAAoB,IAAW/e,EAAM2e,SAAU3e,EAAM0e,kBAAkBM,MACrE,EACAhf,EAAM2W,SAAWnX,EAAMkf,iBAAiB5Z,WAOlD,KAAAmZ,eAAiB,CAACje,EAAcR,IAC1BG,KAAK6e,aAAahf,EAAMkH,MAAO1G,GAC1B,IAAIR,EAAMkf,oBAAqBlf,EAAMuf,mBAAoBvf,EAAMkH,OAE/D,IAAIlH,EAAMkf,oBAAqBlf,EAAMuf,oBAIhD,KAAAE,iBAAoBC,GAAgBvf,KAAKC,SAAS,CAAEoe,UAAWkB,IAE/D,KAAAd,kBAAoB,CAAC5e,EAAcQ,KACjC,MAAM,UAAEge,GAAcxe,EAChB2f,EAAcxf,KAAKse,eAAeje,EAAOR,GAC/C,OAAIwe,EAAY,GAAKA,GAAamB,EAAYra,OAAS,EAC9C,CAAEkZ,UAAW,GAEb,CAAEA,UAAWA,EAAY,IAIpC,KAAAK,sBAAwB,CAAC7e,EAAcQ,KACrC,MAAM,UAAEge,GAAcxe,EAChB2f,EAAcxf,KAAKse,eAAeje,EAAOR,GAC/C,GAAIwe,GAAa,EAAG,CAElB,MAAO,CAAEA,UADOmB,EAAYra,OAAS,GAGrC,MAAO,CAAEkZ,UAAWA,EAAY,IAIpC,KAAAO,YAAc,KACR5e,KAAKJ,SACPI,KAAKC,SAAS,CAAEH,SAAS,KAI7B,KAAA6e,aAAgBb,KACqC,IAA/C9d,KAAKK,MAAM0e,iBAAiBvS,QAAQsR,GACtC9d,KAAK+d,aAAaD,GAElB9d,KAAKge,eAAeF,IAhLtB9d,KAAKH,MAAQ,CACXwe,UAAW,EACXve,SAAS,EACTiH,MAAO,GACPgY,iBAAkB,GAClBK,mBAAoB,IAIxB,oBACEpf,KAAKJ,SAAU,EACfI,KAAKie,cAAc,IACnBje,KAAKif,uBAAuBjf,KAAKK,OACjCL,KAAKmf,yBAAyBnf,KAAKK,OAC/BL,KAAKyf,WACPzf,KAAKyf,UAAUC,iBAAiB,UAAW1f,KAAKue,gBAAgB,GAIpE,0BAA0BoB,GACxB,GACE3f,KAAKK,MAAM2e,WAAaW,EAAUX,UAClChf,KAAKK,MAAM0e,mBAAqBY,EAAUZ,iBAC1C,CACA/e,KAAKif,uBAAuBU,GAC5B3f,KAAKmf,yBAAyBQ,GAE9B,MAAMC,EAAgB5f,KAAKse,eAAeqB,EAAW3f,KAAKH,OAAOsF,OAC7DnF,KAAKH,MAAMwe,WAAauB,GAC1B5f,KAAKC,SAAS,CAAEoe,UAAWuB,EAAgB,KAKjD,qBACM5f,KAAK6f,aACP7f,KAAK6f,YAAYC,QAIrB,uBACE9f,KAAKJ,SAAU,EACXI,KAAKyf,WACPzf,KAAKyf,UAAUM,oBAAoB,UAAW/f,KAAKue,gBAyIvD,SACE,MAAM,eAAEyB,GAAiB,EAAnB,iBAAyBC,GAAmB,EAA5C,WAAkDC,EAAa,IAAOlgB,KAAKK,OAC3E,YAAEkd,GAAgBvd,KAAKK,OACvB,MAAE0G,EAAF,UAASsX,EAAT,iBAAoBU,EAApB,mBAAsCK,GAAuBpf,KAAKH,MAClEsgB,EAAgBngB,KAAKse,eAAete,KAAKK,MAAOL,KAAKH,OAAOwe,GAC5D+B,EAAiBH,GAAoBjgB,KAAK6e,aAAa9X,EAAO/G,KAAKK,OACnEggB,EAAuC,IAAxBrgB,KAAKK,MAAM2W,SAC1BsJ,EAAc,EAAW,OAAQ,CACrC,0BAA2BD,EAC3B,aAAcA,EACd,qBAAsBA,EACtB,wBAAyB7X,QAAQ0X,KAGnC,OACE,uBAAKzgB,UAAU,eAAeyE,IAAKqc,GAAQvgB,KAAKyf,UAAYc,GAC1D,uBAAK9gB,UAAU,eACb,gBAAC,IAAS,CACRoI,WAAW,EACXpI,UAAU,oBACVK,QAASE,KAAKH,MAAMC,QACpBgI,SAAU9H,KAAK8G,mBACfkB,YAAahI,KAAKK,MAAM2H,YACxBC,MAAOlB,KAGX,sBAAItH,UAAW6gB,GACZvB,EAAiB5Z,OAAS,GACzB4Z,EAAiB/Z,IAAIqY,GACnB,gBAACH,EAAiB,CAChBlZ,OAAQmc,IAAkB9C,EAC1BA,QAASA,EACT5b,IAAK4b,EACLC,QAAStd,KAAKme,mBACdP,eAAgB5d,KAAK6d,mBACrBN,YAAaA,EACbxZ,UAAU,KAGfqb,EAAmBja,OAAS,GAC3Bia,EAAmBpa,IAAIqY,GACrB,gBAACH,EAAiB,CAChBlZ,OAAQmc,IAAkB9C,EAC1BD,UAAW4C,EACX3C,QAASA,EACT5b,IAAK4b,EACLC,QAAStd,KAAKme,mBACdP,eAAgB5d,KAAK6d,mBACrBN,YAAaA,KAGlB6C,GACC,gBAAClD,EAAiB,CAChBlZ,OAAQmc,IAAkBpZ,EAC1BoW,QAAQ,EACRE,QAAStW,EACTtF,IAAKsF,EACLuW,QAAStd,KAAKme,mBACdP,eAAgB5d,KAAK6d,mBACrBN,YAAaA,KAGf6C,GAAkBrB,EAAiB5Z,OAAS,GAAKia,EAAmBja,OAAS,GAC7E,sBAAI1F,UAAU,eAAe,kCAAwB,mBAAoBsH,KAG5EmZ,IAhQA,EAAAM,aAA6B,CAClCtB,eAAgB,CAACnY,EAAegY,IAC9BA,EAAiBha,OAAO+Z,GAAQA,EAAKxX,SAASP,IAChDiQ,SAAU,EACVuG,YAAcF,GAAoBA,EAClCa,oBAAsBjW,GAAkBA,I,iCCrE5C,yGAgCe,SAASmQ,GAAS,YAAEC,GAAc,EAAhB,UAAuB5Y,EAAvB,KAAkCiX,IACjE,OACE,qCACc,kCAAwB,cAAeA,EAAKe,KAAK,OAC7DhY,UAAW,EAAW,YAAaA,IACnC,gBAAC,IAAQ,CAACA,UAAU,gBACpB,uCAAmB,EAAMA,UAAU,4BAA4BwD,MAAOyT,EAAKe,KAAK,OAC7Ef,EAAKe,KAAK,OAEZY,GAAe,gBAAC,IAAY,CAAC5Y,UAAU,mB,qBCvC9CN,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,mNAAoN,KAE7OD,EAAOK,QAAUA,G,iCCNjB,0HAyBO,SAASshB,EACd5L,GAEA,OAAO,kBAAQ,4BAA6BA,GAAM6L,MAAM,KAGnD,SAASC,IACd,OAAO,kBAAQ,+BAA+BD,MAAM,KAG/C,SAASE,IACd,OAAO,kBAAQ,4BAA4BF,MAAM,O,iCCpCnD,qEAiCe,SAAS3J,EAAa1W,GACnC,OACE,gBAAC,IAAW,CACV2e,SAAU3e,EAAMqW,KAChBM,SAAU3W,EAAM2W,SAChBV,SAAUjW,EAAMiW,SAChBxS,SAAUzD,EAAMyD,SAChB+S,WAAYxW,EAAMwW,WAClB7O,YAAa,oBAAU,0BACvB+W,iBAAkB1e,EAAMoW,aACxByH,oBAAqB2C,IAKpB,SAASA,EAAY5Y,GAE1B,OAAOA,EAAMhB,cAAckV,QAAQ,kBAAmB,M,iCC7BxD,0KAAO,MAAM2E,EAAW,CACtB9e,IAAK,UACL+e,mBAAoB,0BAGTC,EAAY,YAEZC,EAAW,CACtBjf,IAAK,UACLkf,cAAe,YASJC,EAAyB,CACpClgB,OAAQ6f,EAASC,mBACjBK,SAAUJ,EACVK,SAAUJ,EAASjf,IACnBsf,oBAAgBjf,EAChBkf,mBAAelf,EACf0E,MAAO,IAKIya,EAAiB,K,+eCpBf,SAASze,EAAV,GAAsE,IAA7C,WAAEC,GAA2C,EAA5B3C,EAA4B,oBAClF,OAAI,YAAc2C,GACT,gBAAC,IAAe,iBAAK3C,IAErB,gBAAC,IAAU,iBAAKA,M,uLCZ3B,MAAMohB,EAAiB,CAAC,WAAY,KAAM,QAAS,MAAO,WAGnD,SAASC,EAAW/U,GACzB,OAAO8U,EAAena,SAASqF,EAAKpL,MAG/B,SAASogB,EAAkCne,GAChD,MAAOoe,EAAUC,GAAW,IAAare,EAAOke,GAChD,MAAO,IACF,IAAOE,EAAUjV,GAAQ8U,EAAejV,QAAQG,EAAKpL,UACrD,IAAOsgB,EAASlV,GAAQA,EAAKtF,MAAQsF,EAAKtF,KAAKJ,gBAI/C,SAAS6a,EAAYnV,GAC1B,OAAO+U,EAAW/U,GAAQ,oBAAU,gBAAiBA,EAAKpL,MAAQoL,EAAKtF,O,iCCtCzE,6GA2CO,MAAM0a,EAA+B,CAAExgB,KAAM,YAE7C,MAAMsJ,UAAuB,gBAApC,c,oBACE,KAAAlB,YAAc,KACZ3J,KAAKK,MAAM2hB,YAAYhiB,KAAKK,MAAM+J,cAGpC,KAAA6X,YAAc,KACZjiB,KAAKK,MAAM2hB,YAAYD,IAGzB,SACE,MAAM,YAAE3X,EAAF,YAAehB,GAAgBpJ,KAAKK,MAE1C,IAAK,YAAW+I,GACd,OAAO,KAGT,MAAM,SAAE8Y,GAAa9Y,EACf+Y,OAAyB9f,IAAb6f,GAA0BE,EAAeF,EAAU9X,GAC/D0J,EAAYqO,GAAaC,EAAehY,EAAa2X,GACrDrM,EAAUyM,EACZ,oBAAUrO,EAAY,8BAAgC,oBACtD,oBAAU,kBAEd,OACE,gBAAC,IAAO,CAACxQ,QAASoS,GACf5B,EACC,qCACc4B,EACZjW,UAAW,EAAW,uBAAwBO,KAAKK,MAAMZ,YACzD,gBAAC,IAAQ,CAAC4iB,OAAQF,KAGpB,gBAAC,aAAU,cACGzM,EACZjW,UAAW,EAAW,oBAAqB,oBAAqBO,KAAKK,MAAMZ,WAC3EwE,QAASke,EAAYniB,KAAKiiB,YAAcjiB,KAAK2J,aAC7C,gBAAC,IAAQ,CAAC0Y,OAAQF,OAQ9B,MAIMhJ,EAAoC,CAAE6I,YAAA,KAI5C,SAASI,EAAeE,EAAejc,GACrC,OACEic,EAAE/gB,OAAS8E,EAAE9E,MACZ+gB,EAAUphB,SAAYmF,EAAUnF,QAChCohB,EAAUnhB,YAAekF,EAAUlF,WACnCmhB,EAAUvN,eAAkB1O,EAAU0O,aAP5B,sBANUlV,IAAD,CACtBuJ,YAAa,yBAAevJ,KAKUsZ,EAAzB,CAA6CtO,I,gyBCtE5D,MAAM0X,EAAiB,CACrB,aACA,iBACA,qBACA,sBACA,mBACA,mBACA,kBACA,yBACA,0BACA,uBACA,uBACA,sBACA,cACA,kBACA,mBACA,wBACA,cACA,kBACA,OACA,WACA,kBACA,uBAGIC,EAA+C,CACnDC,mBAAoB,CAAE5W,SAAU,QAAS6W,WAAY,WACrDC,uBAAwB,CAAE9W,SAAU,QAAS6W,WAAY,WACzDE,oBAAqB,CAAE/W,SAAU,QAAS6W,WAAY,YACtDG,wBAAyB,CAAEhX,SAAU,QAAS6W,WAAY,YAC1DI,iBAAkB,CAAEjX,SAAU,QAAS6W,WAAY,SACnDK,qBAAsB,CAAElX,SAAU,QAAS6W,WAAY,SACvDM,iBAAkB,CAAEnX,SAAU,QAAS6W,WAAY,SACnDO,qBAAsB,CAAEpX,SAAU,QAAS6W,WAAY,SACvDQ,gBAAiB,CAAErX,SAAU,QAAS6W,WAAY,QAClDS,oBAAqB,CAAEtX,SAAU,QAAS6W,WAAY,QACtDU,YAAa,CAAEvX,SAAU,QAASqJ,SAAU,QAC5CmO,gBAAiB,CAAExX,SAAU,QAASqJ,SAAU,YAChDoO,iBAAkB,CAAEzX,SAAU,QAASqJ,SAAU,aACjDqO,sBAAuB,CAAEC,YAAa,kBACtCC,YAAa,CAAE5X,SAAU,QAASwH,MAAO,cACzCqQ,gBAAiB,CAAE7X,SAAU,QAASwH,MAAO,cAC7CsQ,KAAM,CAAE9X,SAAU,QAASwH,MAAO,OAClCuQ,SAAU,CAAE/X,SAAU,QAASwH,MAAO,OACtCwQ,gBAAiB,CAAEhY,SAAU,QAASwH,MAAO,iBAC7CyQ,oBAAqB,CAAEjY,SAAU,QAASwH,MAAO,kBAYpC,MAAM8C,UAAsB,gBAA3C,c,oBACE,KAAA4N,eAAiB,KACuC,IAA/CxB,EAAe/V,QAAQxM,KAAKK,MAAMgP,QAG3C,KAAA2U,mBAAqB,KACnB,MAAMvS,EAAM,KACN+Q,EAAqBxiB,KAAKK,MAAMgP,SAAW,CAAExD,SAAU,UAO7D,OAJI7L,KAAKK,MAAM4jB,kBACbxS,EAAOwS,iBAAkB,GAGpBxS,GAGT,KAAA7F,iBAAmB,KACjB,MAAMpK,EAAM,YAAsBxB,KAAKK,MAAMc,UAAZ,KAC5BnB,KAAKgkB,qBADuB,GAE5B,YAAmBhkB,KAAKK,MAAM2C,cAGnC,OACE,gBAAC,OAAI,CAACvD,UAAWO,KAAKK,MAAMZ,UAAWE,GAAI6B,GACxCxB,KAAKK,MAAMsO,WAKlB,SACE,GAAI3O,KAAK+jB,iBACP,OAAO/jB,KAAK4L,mBAGd,MAAMpK,EAAM,YAAyB,CACnCyI,aAAcjK,KAAKK,MAAMc,UACzBkO,OAAQrP,KAAKK,MAAMgP,OACnBrM,WAAYhD,KAAKK,MAAM2C,WACvBkhB,UAAU,IAEZ,OACE,gBAAC,OAAI,CAACzkB,UAAWO,KAAKK,MAAMZ,UAAWE,GAAI6B,GACxCxB,KAAKK,MAAMsO,a,iCC7HpB,0FAgCe,SAASpL,EAAqBlD,GAC3C,MAAM,UAAEZ,EAAF,QAAad,EAAb,MAAsB6E,EAAtB,MAA6BP,GAAU5C,EAE7C,OACE,gBAAC,IAAW,CACVZ,UAAWA,EACX6D,QACE,uBAAK7D,UAAU,oCACZwD,GACC,uBAAKxD,UAAU,iBACb,8BAASwD,IAIZtE,GAAW,yBAAIA,GAEf6E,GACC,gCACE,sBAAI/D,UAAU,qCAEb+D,EAAMwB,IAAI,EAAGvB,OAAMC,WAClB,uBAAKjE,UAAU,uBAAuBgC,IAAKiC,GACzC,qBACEjE,UAAU,4CACVgE,KAAMA,EACNqH,IAAI,sBACJlC,OAAO,UACN,mBAASnF,IAAS,gBAAC,IAAU,CAACJ,KAAM,GAAI5D,UAAU,iBACnD,4BAAOiE,SAQpBrD,EAAMsO,Y,iCCpEb,gOAuBO,SAASwV,EAAY7U,GAC1B,OAAO,kBAAQ,6BAA8B,CAAEA,YAAWpP,KAAKiV,GAAKA,EAAE+E,SAAU,KAG3E,SAASkK,EAAgB9U,GAC9B,OAAO,kBAAQ,kCAAmC,CAAEA,YAAWpP,KAC7DiV,GAAKA,EAAEjQ,aACP,KAIG,SAASmf,EAAaxP,GAC3B,OAAO,eAAK,+BAAgCA,GAAM6L,MAAM,KAGnD,SAAS4D,EAAkBzP,GAChC,OAAO,eAAK,oCAAqCA,GAAM6L,MAAM,KAGxD,SAAS6D,EAAajV,EAAiBjI,GAC5C,OAAO,eAAK,+BAAgC,CAAEiI,UAASjI,SAAQqZ,MAAM,KAGhE,SAAS8D,EAAuBC,EAAoBC,EAAoBC,GAC7E,OAAO,eAAK,0DAA2D,CACrErV,QAASmV,EACTvjB,OAAQwjB,EACRzc,MAAO0c,IACNjE,MAAM,O,iCCnDX,6CA2BO,MAAMlE,EAAmB,gBAA0C,CACxExZ,gBAAYX,EACZlB,eAAWkB,K,oBC7Bb,IAAI3D,EAAM,EAAQ,KACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,qBClBjBE,EADkC,EAAQ,IAChCC,EAA4B,IAE9BC,KAAK,CAACP,EAAOC,EAAI,wYAAyY,KAElaD,EAAOK,QAAUA,G,iCCNjB,gFA8Be,SAASsZ,GAAsB,UAC5ChZ,EAD4C,UAE5CkD,EAF4C,WAG5C6V,IAEA,MAAmB,YAAfA,EACK,KAIP,gBAAC,IAAO,CAAClV,QAAS,oBAAU,aAAckV,EAAY,cAAe7V,IACnE,uBAAKlD,UAAW,EAAW,QAASA,IAAa,oBAAU,aAAc+Y,O,iCCzC/E,aAqBe,aAAShX,GACtB,MAAO,aAAaojB,KAAKpjB,MAAU,mBAASA,K,uGCGvC,SAASqjB,EAAY1jB,GAC1B,OAAO,eAAK,qBAAsB,CAAEA,cAG/B,SAAS2jB,EAAe3jB,GAC7B,OAAO,eAAK,wBAAyB,CAAEA,cCK1B,MAAM,UAAiB,gBAGpC,YAAYd,GACVkF,MAAMlF,GAHR,KAAAT,SAAU,EAwBV,KAAAmlB,eAAiB,KACf,MAAMC,GAAehlB,KAAKH,MAAMyJ,SAGhC,OAFkB0b,EAAcH,EAAcC,GAE7B9kB,KAAKK,MAAMc,WAAWjB,KAAK,KACtCF,KAAKJ,SACPI,KAAKC,SAAS,CAAEqJ,SAAU0b,GAAe,KACnChlB,KAAKK,MAAM4kB,gBACbjlB,KAAKK,MAAM4kB,eAAejlB,KAAKK,MAAMc,UAAW6jB,QA3BxDhlB,KAAKH,MAAQ,CACXyJ,SAAUjJ,EAAMiJ,UAIpB,oBACEtJ,KAAKJ,SAAU,EAGjB,mBAAmBslB,EAAmB9G,GAChCA,EAAU9U,WAAatJ,KAAKK,MAAMiJ,UACpCtJ,KAAKC,SAAS,CAAEqJ,SAAUtJ,KAAKK,MAAMiJ,WAIzC,uBACEtJ,KAAKJ,SAAU,EAkBjB,SACE,MAAM,UAAEH,EAAF,UAAakD,GAAc3C,KAAKK,OAChC,SAAEiJ,GAAatJ,KAAKH,MAE1B,OACE,gBAAC,IAAc,CACbJ,UAAWA,EACX6J,SAAUA,EACV3G,UAAWA,EACXoiB,eAAgB/kB,KAAK+kB,oB,iCCpF7B,+CA4Ce,sBALS,CAACllB,GAAgBmD,aAAY7B,gBACnD,MAAM,OAAEF,GAAW,sCAA4BpB,EAAOsB,EAAW6B,GACjE,MAAO,CAAE/B,WAGI,EAbR,UAAsB,OAAEA,IAC7B,OAAKA,EAIE,gBAAC,IAAK,CAACkkB,MAAOlkB,EAAQmkB,OAAO,IAH3B,S,iCCjCX,wFA+BO,SAASC,EAAYC,GAAe,GACzC,OAAO,kBAAQ,wBAAyB,CAAEC,kBAAmBD,IAC1DplB,KAAKiV,GAAKA,EAAEqQ,aACZ9E,MAAM,KAGJ,SAAS+E,EAAqBxU,EAAgByU,GACnD,OAAO,kBAAQ,oCAAqC,CAAEC,WAAY1U,EAAQyU,WAAUhF,MAClF,O,iCCvCJ,uEAiCe,MAAM3N,UAA0B,gBAC7C,UAAUxR,EAAcuR,GACtB,QAAS9S,KAAKK,MAAMqS,cAAcxB,KAChC0U,GAAgBA,EAAarkB,OAASA,GAAQqkB,EAAa9S,UAAYA,GAI3E,YAAYvR,EAAcuR,EAAiB4K,GACrCA,EACF1d,KAAKK,MAAM4S,MAAM,CAAE1R,OAAMuR,YAEzB9S,KAAKK,MAAM8S,SAAS,CAAE5R,OAAMuR,YAIhC,mBAAmB+S,GACjB,MAAMC,EAAmB,CAAC,0BAA2BD,GAC/CE,EAAoB,IAAID,EAAkB,WAEhD,OADgC9lB,KAAKK,MAAMiP,SAAW,wBAAcyW,GAEhE,uBAAaA,GACb,uBAAaD,GAGnB,SACE,MAAM,SAAErT,EAAF,WAAYO,EAAZ,MAAwBK,GAAUrT,KAAKK,MAE7C,OACE,6BACGgT,EAAMrO,IAAIzD,GACT,sBAAIE,IAAKF,GACP,0BAAKvB,KAAKgmB,mBAAmBzkB,IAC5BkR,EAASzN,IAAI8N,GACZ,sBAAIrT,UAAU,cAAcgC,IAAKqR,GAC/B,gBAAC,IAAQ,CACP4K,QAAS1d,KAAKimB,UAAU1kB,EAAMuR,GAC9BpT,GAAIsT,EAAWzR,EAAMuR,GACrB6K,QAASD,GAAW1d,KAAKkmB,YAAY3kB,EAAMuR,EAAS4K,a,iCCtEtE,0HAsBO,SAASyI,EAAgB1B,GAC9B,OAAO,kBAAQ,4BAA6B,CAAEA,eAAcvkB,KAAKiV,GAAKA,EAAE3R,MAAO,KAG1E,SAAS4iB,EAAWC,GACzB,OAAO,eAAK,4BAA6B,CAAE3mB,GAAI2mB,IAAU3F,MAAM,KAG1D,SAAS4F,EAAWzR,GAKzB,OAAO,mBAAS,4BAA6BA,GAAM3U,KAAKiV,GAAKA,EAAExI,KAAM,O,iCCnCvE,0FAkCe,MAAMiH,UAAiB,gBAAtC,c,oBACE,KAAA/T,MAAQ,CAAE0mB,UAAU,GAEpB,KAAA5c,YAAenD,IACbA,EAAMG,iBACN3G,KAAKC,SAAS,EAAGsmB,eAAH,CAAqBA,UAAWA,MAGhD,KAAAC,eAAiB,KACfxmB,KAAKC,SAAS,CAAEsmB,UAAU,KAG5B,KAAAE,aAAgBjgB,IACdA,EAAMoD,cAAc8c,UAGtB,SACE,MAAM,SAAEC,EAAF,KAAYha,GAAS3M,KAAKK,MAC1BumB,EAAY,YAAYja,GAC9B,OACE,0BACE,qBACElN,UAAU,iBACVgE,KAAMkJ,EAAKnL,IACXyC,QAAU,YAAW0I,EAAKnL,UAA0Ba,EAAnBrC,KAAK2J,YACtCmB,IAAI,+BACJlC,OAAO,SACP3F,MAAO2jB,GACP,gBAAC,IAAe,CAACnnB,UAAU,sBAAsB8B,KAAMoL,EAAKpL,QAC1DolB,GAAYC,GAEf5mB,KAAKH,MAAM0mB,UACV,uBAAK9mB,UAAU,yCACb,yBACEA,UAAU,wBACVwE,QAASjE,KAAKymB,aACdlT,UAAU,EACVhS,KAAK,OACL0G,MAAO0E,EAAKnL,MAEd,gBAAC,cAAW,CAAC/B,UAAU,qBAAqBwE,QAASjE,KAAKwmB,sB,6HChC/D,SAAShU,EACdqU,GAEA,MAAMC,UAAgB,YAAtB,c,oBACE,KAAAlnB,SAAU,EAGV,KAAAC,MAAe,CACb4S,SAAU,GACVsU,YAAa,GACbjnB,SAAS,EACT4S,cAAe,GACfC,gBAAiB,IAYnB,KAAAqU,mBAAqB,KCtChB,kBAAQ,2BAA2BtG,MAAMuG,EAAA,GDuCzB/mB,KACjBkc,IACMpc,KAAKJ,SACPI,KAAKC,SAAS,CACZwS,SAAU2J,EAAS3J,SACnBsU,YAAa3K,EAAS2K,YACtBjnB,SAAS,EACT4S,cAAe0J,EAAS1J,cACxBC,gBAAiByJ,EAASzJ,mBAIhC,KACM3S,KAAKJ,SACPI,KAAKC,SAAS,CAAEH,SAAS,OAMjC,KAAAonB,uBAA0BC,IACxBnnB,KAAKC,SAASJ,IAEL,CAAE6S,cADa,IAAS,IAAI7S,EAAM6S,cAAeyU,GAAQnnB,KAAKonB,2BAKzE,KAAAC,4BAA+BC,IAC7BtnB,KAAKC,SAASJ,IAIL,CAAE6S,cAHa7S,EAAM6S,cAAc3N,OACxC6gB,IAAiB5lB,KAAKonB,sBAAsBxB,EAAc0B,QAMhE,KAAApU,gBAAmBiU,IAEjBnnB,KAAKknB,uBAAuBC,GC1E3B,SAAyBtS,GAC9B,OAAO,eAAK,yBAA0BA,GAAM6L,MAAMuG,EAAA,GD6E9C/T,CADa,CAAEJ,QAASqU,EAAMrU,QAASxD,QAAS6X,EAAM7X,QAAS/N,KAAM4lB,EAAM5lB,OACrDmf,MAAM,KAC1B1gB,KAAKqnB,4BAA4BF,MAIrC,KAAA/T,mBAAsBkU,IAEpBtnB,KAAKqnB,4BAA4BC,GCjFhC,SAA4BzS,GACjC,OAAO,eAAK,4BAA6BA,GAAM6L,MAAMuG,EAAA,GDoFjD7T,CADa,CAAEN,QAASwU,EAAQxU,QAASxD,QAASgY,EAAQhY,QAAS/N,KAAM+lB,EAAQ/lB,OACxDmf,MAAM,KAC7B1gB,KAAKknB,uBAAuBI,MAIhC,KAAAF,sBAAwB,CAAC9E,EAAmBjc,IACnCic,EAAExP,UAAYzM,EAAEyM,SAAWwP,EAAE/gB,OAAS8E,EAAE9E,MAAQ+gB,EAAEhT,UAAYjJ,EAAEiJ,QArEzE,oBACEtP,KAAKJ,SAAU,EACfI,KAAKgnB,qBAGP,uBACEhnB,KAAKJ,SAAU,EAkEjB,SACE,MAAM,SAAE6S,EAAF,YAAYsU,EAAZ,QAAyBjnB,EAAzB,cAAkC4S,EAAlC,gBAAiDC,GAAoB3S,KAAKH,MAChF,OACE,gBAACgnB,EAAgB,iBACX7mB,KAAKK,MAAK,CACd6S,gBAAiBlT,KAAKkT,gBACtBT,SAAUA,EACVsU,YAAaA,EACbjnB,QAASA,EACT4S,cAAeA,EACfC,gBAAiBA,EACjBS,mBAAoBpT,KAAKoT,uBAMjC,OAnGS,EAAA3Q,YAAc,YAAsBokB,EAAkB,qBAmGxDC","file":"js/276.m.56f1d8ed.chunk.js","sourcesContent":["var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".branch-like-navigation-toggler-container .popup{min-width:430px;max-width:650px}.branch-like-navigation-menu .search-box-container{padding:8px}.branch-like-navigation-menu .search-box-container .search-box,.branch-like-navigation-menu .search-box-container .search-box-input{max-width:none!important}.branch-like-navigation-menu .item-list{padding-bottom:8px;max-height:300px;overflow-y:auto}.branch-like-navigation-menu .item{padding:4px 8px}.branch-like-navigation-menu .item.header{color:#777}.branch-like-navigation-menu .item:not(.header).active,.branch-like-navigation-menu .item:not(.header):hover{background-color:#f3f3f3;cursor:pointer}.branch-like-navigation-menu .hint-container{padding:8px;background-color:#f3f3f3;border-top:1px solid #e6e6e6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".header-meta-warnings .alert{margin-bottom:0}.header-meta-warnings .alert-content{padding:6px 8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-tabs>li>a.menu-button{color:#236a97}.navbar-tabs>li>a.menu-button:hover{color:#4b9fd5;border-bottom-color:transparent}.navbar-tabs>li>a.disabled-link,.navbar-tabs>li>a.disabled-link:hover{color:#b4b4b4;cursor:default;border-bottom-color:transparent}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-inner-with-notif .info-drawer{border-top:1px solid #e6e6e6}.info-drawer-pane{background-color:#fff;right:-380px;width:380px;transition:right .3s ease-in-out;border-left:1px solid #e6e6e6;box-sizing:border-box}.info-drawer-pane.open{right:0}.info-drawer{position:fixed;bottom:0;z-index:51}.info-drawer .close-button{position:absolute;top:0;right:0;background:#fff;padding:16px;z-index:2}.info-drawer .back-button{cursor:pointer}.info-drawer .back-button:hover{color:#4b9fd5}.info-drawer-page{position:absolute;top:0;bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".badges-list{display:flex;justify-content:space-around;justify-content:space-evenly;flex-wrap:nowrap}.button.badge-button{display:flex;justify-content:center;padding:8px;min-width:146px;height:116px;background-color:#f3f3f3;border:1px solid #e6e6e6;border-radius:3px;transition:all .3s ease}.button.badge-button:active,.button.badge-button:focus,.button.badge-button:hover{background-color:#f3f3f3;border-color:#4b9fd5;box-shadow:none}.button.badge-button.selected{background-color:#cae3f2;border-color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".project-info-list>li{padding-left:1px;padding-bottom:4px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-info-tags{position:relative}.project-info-deleted-profile,.project-info-deprecated-rules{margin:4px -6px;padding:3px 6px!important;border:1px solid #f4b1b0;border-radius:3px;background-color:#f2dede}.project-info-deleted-profile a,.project-info-deprecated-rules a{color:#0e516f;border-color:darken(#cae3f2)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task } from '../../../../types/tasks';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translateWithParameters(\n            'component_navigation.status.last_blocked_due_to_bad_license_X',\n            translate('qualifier', currentTask.componentQualifier || ComponentQualifier.Project)\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport { Task, TaskStatuses } from '../../../../types/tasks';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\n\ninterface Props {\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component, currentTask } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n\n    let type;\n    if (currentTask && hasMessage('background_task.type', currentTask.type)) {\n      messageKey += '_X';\n      type = translate('background_task.type', currentTask.type);\n    }\n\n    let url;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n      url = (\n        <Link to={getComponentBackgroundTaskUrl(component.key, status)}>\n          {translate('background_tasks.page')}\n        </Link>\n      );\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url, type }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === TaskStatuses.Failed) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocumentationTooltip from '../../../../../components/common/DocumentationTooltip';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName } from '../../../../../helpers/branch-like';\nimport { getPortfolioAdminUrl } from '../../../../../helpers/urls';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { colors } from '../../../../theme';\n\nexport interface CurrentBranchLikeProps {\n  branchesEnabled: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  hasManyBranches: boolean;\n}\n\nexport function CurrentBranchLike(props: CurrentBranchLikeProps) {\n  const {\n    branchesEnabled,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    hasManyBranches\n  } = props;\n\n  const displayName = getBranchLikeDisplayName(currentBranchLike);\n  const isApplication = component.qualifier === ComponentQualifier.Application;\n  const canAdminComponent = configuration && configuration.showSettings;\n\n  const additionalIcon = () => {\n    const plusIcon = <PlusCircleIcon fill={colors.blue} size={12} />;\n\n    if (branchesEnabled && hasManyBranches) {\n      return <DropdownIcon />;\n    }\n\n    if (isApplication) {\n      if (!hasManyBranches && canAdminComponent) {\n        return (\n          <HelpTooltip\n            overlay={\n              <>\n                <p>{translate('application.branches.help')}</p>\n                <hr className=\"spacer-top spacer-bottom\" />\n                <Link to={getPortfolioAdminUrl(component.key, component.qualifier)}>\n                  {translate('application.branches.link')}\n                </Link>\n              </>\n            }>\n            {plusIcon}\n          </HelpTooltip>\n        );\n      }\n    } else {\n      if (!branchesEnabled) {\n        return (\n          <DocumentationTooltip\n            content={translate('branch_like_navigation.no_branch_support.content')}\n            data-test=\"branches-support-disabled\"\n            links={[\n              {\n                href: 'https://redirect.sonarsource.com/editions/developer.html',\n                label: translate('learn_more')\n              }\n            ]}\n            title={translate('branch_like_navigation.no_branch_support.title')}>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n\n      if (!hasManyBranches) {\n        return (\n          <DocumentationTooltip\n            content={translate('branch_like_navigation.only_one_branch.content')}\n            data-test=\"only-one-branch-like\"\n            links={[\n              {\n                href: '/documentation/branches/overview/',\n                label: translate('branch_like_navigation.only_one_branch.documentation')\n              },\n              {\n                href: '/documentation/analysis/pull-request/',\n                label: translate('branch_like_navigation.only_one_branch.pr_analysis')\n              }\n            ]}\n            title={translate('branch_like_navigation.only_one_branch.title')}>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <span className=\"display-flex-center flex-shrink text-ellipsis\">\n      <BranchLikeIcon branchLike={currentBranchLike} />\n      <span\n        className=\"spacer-left spacer-right flex-shrink text-ellipsis js-branch-like-name\"\n        title={displayName}>\n        {displayName}\n      </span>\n      {additionalIcon()}\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLike);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../../components/common/BranchStatus';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName, isMainBranch } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface MenuItemProps {\n  branchLike: BranchLike;\n  component: T.Component;\n  indent?: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n  setSelectedNode?: (node: HTMLLIElement) => void;\n}\n\nexport function MenuItem(props: MenuItemProps) {\n  const { branchLike, component, indent, setSelectedNode, onSelect, selected } = props;\n  const displayName = getBranchLikeDisplayName(branchLike);\n\n  return (\n    <li\n      className={classNames('item', {\n        active: selected\n      })}\n      onClick={() => onSelect(branchLike)}\n      ref={selected ? setSelectedNode : undefined}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between', {\n          'big-spacer-left': indent\n        })}>\n        <div className=\"item-name text-ellipsis\" title={displayName}>\n          <BranchLikeIcon branchLike={branchLike} />\n          <span className=\"spacer-left\">{displayName}</span>\n          {isMainBranch(branchLike) && (\n            <span className=\"badge spacer-left\">{translate('branches.main_branch')}</span>\n          )}\n        </div>\n        <div className=\"spacer-left\">\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default React.memo(MenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getBranchLikeKey, isSameBranchLike } from '../../../../../helpers/branch-like';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport MenuItem from './MenuItem';\n\nexport interface MenuItemListProps {\n  branchLikeTree: BranchLikeTree;\n  component: T.Component;\n  hasResults: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport function MenuItemList(props: MenuItemListProps) {\n  let listNode: HTMLUListElement | null = null;\n  let selectedNode: HTMLLIElement | null = null;\n\n  React.useEffect(() => {\n    if (listNode && selectedNode) {\n      scrollToElement(selectedNode, { parent: listNode, smooth: false });\n    }\n  });\n\n  const { branchLikeTree, component, hasResults, onSelect, selectedBranchLike } = props;\n\n  const renderItem = (branchLike: BranchLike, indent?: boolean) => (\n    <MenuItem\n      branchLike={branchLike}\n      component={component}\n      indent={indent}\n      key={getBranchLikeKey(branchLike)}\n      onSelect={onSelect}\n      selected={isSameBranchLike(branchLike, selectedBranchLike)}\n      setSelectedNode={node => (selectedNode = node)}\n    />\n  );\n\n  return (\n    <ul className=\"item-list\" ref={node => (listNode = node)}>\n      {!hasResults && (\n        <li className=\"item\">\n          <span className=\"note\">{translate('no_results')}</span>\n        </li>\n      )}\n\n      {/* BRANCHES & PR */}\n      {[branchLikeTree.mainBranchTree, ...branchLikeTree.branchTree].filter(isDefined).map(tree => (\n        <React.Fragment key={getBranchLikeKey(tree.branch)}>\n          {renderItem(tree.branch)}\n          {tree.pullRequests.length > 0 && (\n            <>\n              <li className=\"item header\">\n                <span className=\"big-spacer-left\">\n                  {translate('branch_like_navigation.pull_requests')}\n                </span>\n              </li>\n              {tree.pullRequests.map(pr => renderItem(pr, true))}\n            </>\n          )}\n          <hr />\n        </React.Fragment>\n      ))}\n\n      {/* PARENTLESS PR (for display during search) */}\n      {branchLikeTree.parentlessPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">{translate('branch_like_navigation.pull_requests')}</li>\n          {branchLikeTree.parentlessPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n\n      {/* ORPHAN PR */}\n      {branchLikeTree.orphanPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">\n            {translate('branch_like_navigation.orphan_pull_requests')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('branch_like_navigation.orphan_pull_requests.tooltip')}\n            />\n          </li>\n          {branchLikeTree.orphanPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n    </ul>\n  );\n}\n\nexport default React.memo(MenuItemList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { KeyCodes } from 'sonar-ui-common/helpers/keycodes';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../../../components/hoc/withRouter';\nimport {\n  getBrancheLikesAsTree,\n  isBranch,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../../../helpers/branch-like';\nimport { getBranchLikeUrl } from '../../../../../helpers/urls';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport MenuItemList from './MenuItemList';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdminComponent?: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  branchLikesToDisplay: BranchLike[];\n  branchLikesToDisplayTree: BranchLikeTree;\n  query: string;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport class Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let selectedBranchLike = undefined;\n\n    if (props.branchLikes.some(b => isSameBranchLike(b, props.currentBranchLike))) {\n      selectedBranchLike = props.currentBranchLike;\n    } else if (props.branchLikes.length > 0) {\n      selectedBranchLike = props.branchLikes[0];\n    }\n\n    this.state = {\n      query: '',\n      selectedBranchLike,\n      ...this.processBranchLikes(props.branchLikes)\n    };\n  }\n\n  processBranchLikes = (branchLikes: BranchLike[]) => {\n    const tree = getBrancheLikesAsTree(branchLikes);\n    return {\n      branchLikesToDisplay: [\n        ...(tree.mainBranchTree\n          ? [tree.mainBranchTree.branch, ...tree.mainBranchTree.pullRequests]\n          : []),\n        ...tree.branchTree.reduce((prev, t) => [...prev, t.branch, ...t.pullRequests], []),\n        ...tree.parentlessPullRequests,\n        ...tree.orphanPullRequests\n      ],\n      branchLikesToDisplayTree: tree\n    };\n  };\n\n  openHighlightedBranchLike = () => {\n    if (this.state.selectedBranchLike) {\n      this.handleOnSelect(this.state.selectedBranchLike);\n    }\n  };\n\n  highlightSiblingBranchlike = (indexDelta: number) => {\n    const selectBranchLikeIndex = this.state.branchLikesToDisplay.findIndex(b =>\n      isSameBranchLike(b, this.state.selectedBranchLike)\n    );\n    const newIndex = selectBranchLikeIndex + indexDelta;\n\n    if (\n      selectBranchLikeIndex !== -1 &&\n      newIndex >= 0 &&\n      newIndex < this.state.branchLikesToDisplay.length\n    ) {\n      this.setState(({ branchLikesToDisplay }) => ({\n        selectedBranchLike: branchLikesToDisplay[newIndex]\n      }));\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.preventDefault();\n        this.openHighlightedBranchLike();\n        break;\n      case KeyCodes.UpArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(-1);\n        break;\n      case KeyCodes.DownArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(+1);\n        break;\n    }\n  };\n\n  handleSearchChange = (query: string) => {\n    const q = query.toLowerCase();\n\n    const filterBranch = (branch: BranchLike) =>\n      isBranch(branch) && branch.name.toLowerCase().includes(q);\n    const filterPullRequest = (pr: BranchLike) =>\n      isPullRequest(pr) && (pr.title.toLowerCase().includes(q) || pr.key.toLowerCase().includes(q));\n\n    const filteredBranchLikes = this.props.branchLikes.filter(\n      bl => filterBranch(bl) || filterPullRequest(bl)\n    );\n\n    this.setState({\n      query: q,\n      selectedBranchLike: filteredBranchLikes.length > 0 ? filteredBranchLikes[0] : undefined,\n      ...this.processBranchLikes(filteredBranchLikes)\n    });\n  };\n\n  handleOnSelect = (branchLike: BranchLike) => {\n    this.setState({ selectedBranchLike: branchLike }, () => {\n      this.props.onClose();\n      this.props.router.push(getBranchLikeUrl(this.props.component.key, branchLike));\n    });\n  };\n\n  render() {\n    const { canAdminComponent, component, onClose } = this.props;\n    const {\n      branchLikesToDisplay,\n      branchLikesToDisplayTree,\n      query,\n      selectedBranchLike\n    } = this.state;\n\n    const showManageLink = component.qualifier === ComponentQualifier.Project && canAdminComponent;\n    const hasResults = branchLikesToDisplay.length > 0;\n\n    return (\n      <DropdownOverlay className=\"branch-like-navigation-menu\" noPadding={true}>\n        <div className=\"search-box-container\">\n          <SearchBox\n            autoFocus={true}\n            onChange={this.handleSearchChange}\n            onKeyDown={this.handleKeyDown}\n            placeholder={translate('branch_like_navigation.search_for_branch_like')}\n            value={query}\n          />\n        </div>\n\n        <div className=\"item-list-container\">\n          <MenuItemList\n            branchLikeTree={branchLikesToDisplayTree}\n            component={component}\n            hasResults={hasResults}\n            onSelect={this.handleOnSelect}\n            selectedBranchLike={selectedBranchLike}\n          />\n        </div>\n\n        {showManageLink && (\n          <div className=\"hint-container text-right\">\n            <Link\n              onClick={() => onClose()}\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branch_like_navigation.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Toggler from 'sonar-ui-common/components/controls/Toggler';\nimport { withAppState } from '../../../../../components/hoc/withAppState';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport './BranchLikeNavigation.css';\nimport CurrentBranchLike from './CurrentBranchLike';\nimport Menu from './Menu';\n\nexport interface BranchLikeNavigationProps {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike;\n}\n\nexport function BranchLikeNavigation(props: BranchLikeNavigationProps) {\n  const {\n    appState: { branchesEnabled },\n    branchLikes,\n    component,\n    component: { configuration },\n    currentBranchLike\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const canAdminComponent = configuration && configuration.showSettings;\n  const hasManyBranches = branchLikes.length >= 2;\n  const isMenuEnabled = branchesEnabled && hasManyBranches;\n\n  const currentBranchLikeElement = (\n    <CurrentBranchLike\n      branchesEnabled={Boolean(branchesEnabled)}\n      component={component}\n      currentBranchLike={currentBranchLike}\n      hasManyBranches={hasManyBranches}\n    />\n  );\n\n  return (\n    <span\n      className={classNames('big-spacer-left flex-0 branch-like-navigation-toggler-container', {\n        dropdown: isMenuEnabled\n      })}>\n      {isMenuEnabled ? (\n        <Toggler\n          onRequestClose={() => setIsMenuOpen(false)}\n          open={isMenuOpen}\n          overlay={\n            <Menu\n              branchLikes={branchLikes}\n              canAdminComponent={canAdminComponent}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              onClose={() => setIsMenuOpen(false)}\n            />\n          }>\n          <a\n            className=\"link-base-color link-no-underline\"\n            href=\"#\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {currentBranchLikeElement}\n          </a>\n        </Toggler>\n      ) : (\n        currentBranchLikeElement\n      )}\n    </span>\n  );\n}\n\nexport default withAppState(React.memo(BranchLikeNavigation));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPullRequest } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface CurrentBranchLikeMergeInformationProps {\n  currentBranchLike: BranchLike;\n}\n\nexport function CurrentBranchLikeMergeInformation(props: CurrentBranchLikeMergeInformationProps) {\n  const { currentBranchLike } = props;\n\n  if (!isPullRequest(currentBranchLike)) {\n    return null;\n  }\n\n  return (\n    <span className=\"big-spacer-left flex-shrink note text-ellipsis\">\n      <FormattedMessage\n        defaultMessage={translate('branch_like_navigation.for_merge_into_x_from_y')}\n        id=\"branch_like_navigation.for_merge_into_x_from_y\"\n        values={{\n          target: <strong>{currentBranchLike.target}</strong>,\n          branch: <strong>{currentBranchLike.branch}</strong>\n        }}\n      />\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLikeMergeInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { last } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { isMainBranch } from '../../../../helpers/branch-like';\nimport { getComponentOverviewUrl } from '../../../../helpers/urls';\nimport { BranchLike } from '../../../../types/branch-like';\n\ninterface Props {\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n}\n\nexport function Breadcrumb(props: Props) {\n  const {\n    component: { breadcrumbs },\n    currentBranchLike\n  } = props;\n  const lastBreadcrumbElement = last(breadcrumbs);\n  const isNoMainBranch = currentBranchLike && !isMainBranch(currentBranchLike);\n\n  return (\n    <div className=\"big flex-shrink display-flex-center\">\n      {breadcrumbs.map((breadcrumbElement, i) => {\n        const isFirst = i === 0;\n        const isNotLast = i < breadcrumbs.length - 1;\n\n        return (\n          <span className=\"flex-shrink display-flex-center\" key={breadcrumbElement.key}>\n            {isFirst && lastBreadcrumbElement && (\n              <QualifierIcon className=\"spacer-right\" qualifier={lastBreadcrumbElement.qualifier} />\n            )}\n            {isNoMainBranch || isNotLast ? (\n              <Link\n                className=\"link-no-underline text-ellipsis\"\n                title={breadcrumbElement.name}\n                to={getComponentOverviewUrl(breadcrumbElement.key, breadcrumbElement.qualifier)}>\n                {breadcrumbElement.name}\n              </Link>\n            ) : (\n              <span className=\"text-ellipsis\" title={breadcrumbElement.name}>\n                {breadcrumbElement.name}\n              </span>\n            )}\n            {isNotLast && <span className=\"slash-separator\" />}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(Breadcrumb);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport Favorite from '../../../../components/controls/Favorite';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport BranchLikeNavigation from './branch-like/BranchLikeNavigation';\nimport CurrentBranchLikeMergeInformation from './branch-like/CurrentBranchLikeMergeInformation';\nimport { Breadcrumb } from './Breadcrumb';\n\nexport interface HeaderProps {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n  currentUser: T.CurrentUser;\n}\n\nexport function Header(props: HeaderProps) {\n  const { branchLikes, component, currentBranchLike, currentUser } = props;\n\n  return (\n    <>\n      <Helmet title={component.name} />\n      <header className=\"display-flex-center flex-shrink\">\n        <Breadcrumb component={component} currentBranchLike={currentBranchLike} />\n        {isLoggedIn(currentUser) && (\n          <Favorite\n            className=\"spacer-left\"\n            component={component.key}\n            favorite={Boolean(component.isFavorite)}\n            qualifier={component.qualifier}\n          />\n        )}\n        {currentBranchLike && (\n          <>\n            <BranchLikeNavigation\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={currentBranchLike}\n            />\n            <CurrentBranchLikeMergeInformation currentBranchLike={currentBranchLike} />\n          </>\n        )}\n      </header>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(React.memo(Header));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { TaskWarning } from '../../../../types/tasks';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  componentKey: string;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Alert className=\"js-component-analysis-warnings flex-1\" display=\"inline\" variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analysis_had_warnings')}\n            id=\"component_navigation.last_analysis_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  <FormattedMessage\n                    defaultMessage={translate('component_navigation.x_warnings')}\n                    id=\"component_navigation.x_warnings\"\n                    values={{\n                      warningsCount: this.props.warnings.length\n                    }}\n                  />\n                </a>\n              )\n            }}\n          />\n        </Alert>\n        {this.state.modal && (\n          <AnalysisWarningsModal\n            componentKey={this.props.componentKey}\n            onClose={this.handleCloseModal}\n            onWarningDismiss={this.props.onWarningDismiss}\n            warnings={this.props.warnings}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport { isBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { TaskWarning } from '../../../../types/tasks';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport './HeaderMeta.css';\n\nexport interface HeaderMetaProps {\n  branchLike?: BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\nexport function HeaderMeta(props: HeaderMetaProps) {\n  const { branchLike, component, currentUser, warnings } = props;\n\n  const isABranch = isBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && isABranch;\n\n  return (\n    <>\n      <div className=\"display-flex-center flex-0 small\">\n        {warnings.length > 0 && (\n          <span className=\"header-meta-warnings\">\n            <ComponentNavWarnings\n              componentKey={component.key}\n              onWarningDismiss={props.onWarningDismiss}\n              warnings={warnings}\n            />\n          </span>\n        )}\n        {component.analysisDate && (\n          <span className=\"spacer-left nowrap note\">\n            <DateTimeFormatter date={component.analysisDate} />\n          </span>\n        )}\n        {displayVersion && (\n          <span className=\"spacer-left nowrap note\">{`${translate('version')} ${\n            component.version\n          }`}</span>\n        )}\n        {isLoggedIn(currentUser) && currentPage !== undefined && !isPullRequest(branchLike) && (\n          <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n        )}\n      </div>\n      {isPullRequest(branchLike) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n\n  const branch = isBranch(branchLike) && !branchLike.isMain ? branchLike.name : undefined;\n\n  switch (component.qualifier) {\n    case ComponentQualifier.Portfolio:\n    case ComponentQualifier.SubPortfolio:\n      currentPage = { type: 'PORTFOLIO', component: component.key };\n      break;\n    case ComponentQualifier.Application:\n      currentPage = {\n        type: 'APPLICATION',\n        component: component.key,\n        branch\n      };\n      break;\n    case ComponentQualifier.Project:\n      // when home page is set to the default branch of a project, its name is returned as `undefined`\n      currentPage = {\n        type: 'PROJECT',\n        component: component.key,\n        branch\n      };\n      break;\n  }\n\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(HeaderMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link, LinkProps } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport NavBarTabs from 'sonar-ui-common/components/ui/NavBarTabs';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getBranchLikeQuery, isPullRequest } from '../../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioUrl, getProjectQueryUrl } from '../../../../helpers/urls';\nimport { BranchLike, BranchParameters } from '../../../../types/branch-like';\nimport { ComponentQualifier, isPortfolioLike } from '../../../../types/component';\nimport './Menu.css';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/baseline',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: BranchLike | undefined;\n  branchLikes: BranchLike[] | undefined;\n  component: T.Component;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onToggleProjectInfo: () => void;\n}\n\ntype Query = BranchParameters & { id: string };\n\nfunction MenuLink({\n  hasAnalysis,\n  label,\n  ...props\n}: LinkProps & { hasAnalysis: boolean; label: React.ReactNode }) {\n  return hasAnalysis ? (\n    <Link {...props}>{label}</Link>\n  ) : (\n    <Tooltip overlay={translate('layout.must_be_configured')}>\n      <a aria-disabled=\"true\" className=\"disabled-link\">\n        {label}\n      </a>\n    </Tooltip>\n  );\n}\n\nexport class Menu extends React.PureComponent<Props> {\n  hasAnalysis = () => {\n    const { branchLikes = [], component, isInProgress, isPending } = this.props;\n    const hasBranches = branchLikes.length > 1;\n    return hasBranches || isInProgress || isPending || component.analysisDate !== undefined;\n  };\n\n  isProject = () => {\n    return this.props.component.qualifier === ComponentQualifier.Project;\n  };\n\n  isDeveloper = () => {\n    return this.props.component.qualifier === ComponentQualifier.Developper;\n  };\n\n  isPortfolio = () => {\n    const { qualifier } = this.props.component;\n    return isPortfolioLike(qualifier);\n  };\n\n  isApplication = () => {\n    return this.props.component.qualifier === ComponentQualifier.Application;\n  };\n\n  getConfiguration = () => {\n    return this.props.component.configuration || {};\n  };\n\n  getQuery = (): Query => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink = ({ id, ...branchLike }: Query, isPortfolio: boolean) => {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={isPortfolio ? getPortfolioUrl(id) : getProjectQueryUrl(id, branchLike)}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCodeLink = (\n    hasAnalysis: boolean,\n    query: Query,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={\n            isPortfolio || isApplication ? translate('view_projects.page') : translate('code.page')\n          }\n          to={{ pathname: '/code', query }}\n        />\n      </li>\n    );\n  };\n\n  renderActivityLink = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike } = this.props;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('project_activity.page')}\n          to={{ pathname: '/project/activity', query }}\n        />\n      </li>\n    );\n  };\n\n  renderIssuesLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('issues.page')}\n          to={{ pathname: '/project/issues', query: { ...query, resolved: 'false' } }}\n        />\n      </li>\n    );\n  };\n\n  renderComponentMeasuresLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.measures')}\n          to={{ pathname: '/component_measures', query }}\n        />\n      </li>\n    );\n  };\n\n  renderSecurityHotspotsLink = (hasAnalysis: boolean, query: Query, isPortfolio: boolean) => {\n    return (\n      !isPortfolio && (\n        <li>\n          <MenuLink\n            activeClassName=\"active\"\n            hasAnalysis={hasAnalysis}\n            label={translate('layout.security_hotspots')}\n            to={{ pathname: '/security_hotspots', query }}\n          />\n        </li>\n      )\n    );\n  };\n\n  renderSecurityReports = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.security_reports')}\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query\n          }}\n        />\n      </li>\n    );\n  };\n\n  renderAdministration = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    const { branchLike, component } = this.props;\n\n    if (!this.getConfiguration().showSettings || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks(query, isProject, isApplication, isPortfolio);\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {hasMessage('layout.settings', component.qualifier)\n              ? translate('layout.settings', component.qualifier)\n              : translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  renderAdministrationLinks = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    return [\n      this.renderSettingsLink(query, isApplication, isPortfolio),\n      this.renderBranchesLink(query, isProject),\n      this.renderBaselineLink(query, isApplication, isPortfolio),\n      this.renderProfilesLink(query),\n      this.renderQualityGateLink(query),\n      this.renderCustomMeasuresLink(query),\n      this.renderLinksLink(query),\n      this.renderPermissionsLink(query),\n      this.renderBackgroundTasksLink(query),\n      this.renderUpdateKeyLink(query),\n      this.renderWebhooksLink(query, isProject),\n      ...this.renderAdminExtensions(query),\n      this.renderDeletionLink(query)\n    ];\n  };\n\n  renderProjectInformationButton = (isProject: boolean, isApplication: boolean) => {\n    if (isPullRequest(this.props.branchLike)) {\n      return null;\n    }\n\n    return (\n      (isProject || isApplication) && (\n        <li>\n          <a\n            className=\"menu-button\"\n            onClick={(e: React.SyntheticEvent<HTMLAnchorElement>) => {\n              e.preventDefault();\n              e.currentTarget.blur();\n              this.props.onToggleProjectInfo();\n            }}\n            role=\"button\"\n            tabIndex={0}>\n            <BulletListIcon className=\"little-spacer-right\" />\n            {translate(isProject ? 'project' : 'application', 'info.title')}\n          </a>\n        </li>\n      )\n    );\n  };\n\n  renderSettingsLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/settings', query }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBranchesLink = (query: Query, isProject: boolean) => {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !isProject ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/branches', query }}>\n          {translate('project_branch_pull_request.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBaselineLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"baseline\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/baseline', query }}>\n          {translate('project_baseline.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderProfilesLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_profiles', query }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderQualityGateLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_gate', query }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCustomMeasuresLink = (query: Query) => {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link activeClassName=\"active\" to={{ pathname: '/custom_measures', query }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderLinksLink = (query: Query) => {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/links', query }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderPermissionsLink = (query: Query) => {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project_roles', query }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBackgroundTasksLink = (query: Query) => {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/background_tasks', query }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderUpdateKeyLink = (query: Query) => {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/key', query }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderWebhooksLink = (query: Query, isProject: boolean) => {\n    if (!this.getConfiguration().showSettings || !isProject) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/webhooks', query }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderDeletionLink = (query: Query) => {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (\n      ![\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/deletion', query }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean, baseQuery: Query) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { ...baseQuery, qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions = (query: Query) => {\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true, query));\n  };\n\n  renderExtensions = (query: Query) => {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n\n    if (withoutSecurityExtension.length === 0) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false, query))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  render() {\n    const isProject = this.isProject();\n    const isApplication = this.isApplication();\n    const isPortfolio = this.isPortfolio();\n    const hasAnalysis = this.hasAnalysis();\n    const query = this.getQuery();\n    return (\n      <div className=\"display-flex-center display-flex-space-between\">\n        <NavBarTabs>\n          {this.renderDashboardLink(query, isPortfolio)}\n          {this.renderIssuesLink(hasAnalysis, query)}\n          {this.renderSecurityHotspotsLink(hasAnalysis, query, isPortfolio)}\n          {this.renderSecurityReports(hasAnalysis, query)}\n          {this.renderComponentMeasuresLink(hasAnalysis, query)}\n          {this.renderCodeLink(hasAnalysis, query, isApplication, isPortfolio)}\n          {this.renderActivityLink(hasAnalysis, query)}\n          {this.renderExtensions(query)}\n        </NavBarTabs>\n        <NavBarTabs>\n          {this.renderAdministration(query, isProject, isApplication, isPortfolio)}\n          {this.renderProjectInformationButton(isProject, isApplication)}\n        </NavBarTabs>\n      </div>\n    );\n  }\n}\n\nexport default withAppState(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport EscKeydownHandler from 'sonar-ui-common/components/controls/EscKeydownHandler';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport './InfoDrawer.css';\n\nexport interface InfoDrawerProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onClose: () => void;\n  top: number;\n}\n\nexport default function InfoDrawer(props: InfoDrawerProps) {\n  const { children, displayed, onClose, top } = props;\n\n  return (\n    <div\n      className={classNames('info-drawer info-drawer-pane', { open: displayed })}\n      style={{ top }}>\n      <div className=\"close-button\">\n        <ClearButton onClick={onClose} />\n      </div>\n      {displayed && (\n        <EscKeydownHandler onKeydown={onClose}>\n          <OutsideClickHandler onClickOutside={onClose}>\n            <div className=\"display-flex-column max-height-100\">{children}</div>\n          </OutsideClickHandler>\n        </EscKeydownHandler>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { getLocalizedMetricName } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { getHostUrl, getPathUrlAsString } from 'sonar-ui-common/helpers/urls';\nimport { getProjectUrl } from '../../../../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\nexport type BadgeFormats = 'md' | 'url';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  format?: BadgeFormats;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeSnippet(type: BadgeType, options: BadgeOptions) {\n  const url = getBadgeUrl(type, options);\n  const { branch, format = 'md', metric = 'alert_status', project } = options;\n\n  if (format === 'url') {\n    return url;\n  } else {\n    let label;\n    let projectUrl;\n\n    switch (type) {\n      case BadgeType.marketing:\n        label = 'SonarCloud';\n        break;\n      case BadgeType.measure:\n        label = getLocalizedMetricName({ key: metric });\n        break;\n      case BadgeType.qualityGate:\n      default:\n        label = 'Quality gate';\n        break;\n    }\n\n    if (project) {\n      projectUrl = getPathUrlAsString(getProjectUrl(project, branch), false);\n    }\n\n    const mdImage = `![${label}](${url})`;\n    return projectUrl ? `[${mdImage}](${projectUrl})` : mdImage;\n  }\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BadgeType } from './utils';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchWebApi } from '../../../../../../api/web-api';\nimport { BadgeColors, BadgeFormats, BadgeOptions, BadgeType } from './utils';\n\ninterface Props {\n  className?: string;\n  metrics: T.Dict<T.Metric>;\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(d => d.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(w => w.key === 'measure');\n          const param = ws && ws.params && ws.params.find(p => p.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () => {\n    return ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n  };\n\n  getFormatOptions = () => {\n    return ['md', 'url'].map(format => ({\n      label: translate('overview.badges.options.formats', format),\n      value: format\n    }));\n  };\n\n  getMetricOptions = () => {\n    return this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n  };\n\n  handleColorChange = ({ value }: { value: BadgeColors }) => {\n    this.props.updateOptions({ color: value });\n  };\n\n  handleFormatChange = ({ value }: { value: BadgeFormats }) => {\n    this.props.updateOptions({ format: value });\n  };\n\n  handleMetricChange = ({ value }: { value: string }) => {\n    this.props.updateOptions({ metric: value });\n  };\n\n  renderBadgeType = (type: BadgeType, options: BadgeOptions) => {\n    if (type === BadgeType.marketing) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-color\">\n            {translate('color')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            name=\"badge-color\"\n            onChange={this.handleColorChange}\n            options={this.getColorOptions()}\n            searchable={false}\n            value={options.color}\n          />\n        </>\n      );\n    } else if (type === BadgeType.measure) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-metric\">\n            {translate('overview.badges.metric')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            menuStyle={{ maxHeight: 100 }}\n            name=\"badge-metric\"\n            onChange={this.handleMetricChange}\n            options={this.getMetricOptions()}\n            searchable={false}\n            value={options.metric}\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { className, options, type } = this.props;\n    return (\n      <div className={className}>\n        {this.renderBadgeType(type, options)}\n\n        <label\n          className={classNames('spacer-right', {\n            'spacer-top': type !== BadgeType.qualityGate\n          })}\n          htmlFor=\"badge-format\">\n          {translate('format')}:\n        </label>\n        <Select\n          className=\"input-medium\"\n          clearable={false}\n          name=\"badge-format\"\n          onChange={this.handleFormatChange}\n          options={this.getFormatOptions()}\n          searchable={false}\n          value={this.props.options.format || 'md'}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CodeSnippet from '../../../../../../components/common/CodeSnippet';\nimport { getBranchLikeQuery } from '../../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../../types/branch-like';\nimport { MetricKey } from '../../../../../../types/metrics';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport './styles.css';\nimport { BadgeOptions, BadgeType, getBadgeSnippet, getBadgeUrl } from './utils';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: T.Dict<T.Metric>;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class ProjectBadges extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: MetricKey.alert_status }\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n\n    return (\n      <div className=\"display-flex-column\">\n        <h3>{translate('overview.badges.get_badge', qualifier)}</h3>\n        <p className=\"big-spacer-bottom\">{translate('overview.badges.description', qualifier)}</p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.measure === selectedType}\n          type={BadgeType.measure}\n          url={getBadgeUrl(BadgeType.measure, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.measure, 'description', qualifier)}\n        </p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.qualityGate === selectedType}\n          type={BadgeType.qualityGate}\n          url={getBadgeUrl(BadgeType.qualityGate, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.qualityGate, 'description', qualifier)}\n        </p>\n        <BadgeParams\n          className=\"big-spacer-bottom display-flex-column\"\n          metrics={this.props.metrics}\n          options={badgeOptions}\n          type={selectedType}\n          updateOptions={this.handleUpdateOptions}\n        />\n        <CodeSnippet isOneLine={true} snippet={getBadgeSnippet(selectedType, fullBadgeOptions)} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport BackIcon from 'sonar-ui-common/components/icons/BackIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface InfoDrawerPageProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onPageChange: () => void;\n}\n\nexport default function InfoDrawerPage(props: InfoDrawerPageProps) {\n  const { children, displayed, onPageChange } = props;\n  return (\n    <div\n      className={classNames(\n        'info-drawer-page info-drawer-pane display-flex-column overflow-hidden',\n        {\n          open: displayed\n        }\n      )}>\n      <h2 className=\"back-button big-padded bordered-bottom\" onClick={() => onPageChange()}>\n        <BackIcon className=\"little-spacer-right\" />\n        {translate('back')}\n      </h2>\n\n      {displayed && <div className=\"overflow-y-auto big-padded\">{children}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from '../../../../../../apps/account/notifications/NotificationsList';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../../../../components/hoc/withNotifications';\n\ninterface Props {\n  className?: string;\n  component: T.Component;\n}\n\nexport function ProjectNotifications(props: WithNotificationsProps & Props) {\n  const { channels, component, loading, notifications, perProjectTypes } = props;\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ project: component.key, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      project: component.key,\n      channel,\n      type\n    });\n  };\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${component.key}-${type}-${channel}`;\n  };\n\n  const projectNotifications = notifications.filter(n => n.project && n.project === component.key);\n\n  return (\n    <>\n      <h3>{translate('project.info.notifications')}</h3>\n\n      <Alert className=\"spacer-top\" variant=\"info\">\n        {translate('notification.dispatcher.information')}\n      </Alert>\n\n      <DeferredSpinner loading={loading}>\n        <table className=\"data zebra notifications-table\">\n          <thead>\n            <tr>\n              <th aria-label={translate('project')} />\n              {channels.map(channel => (\n                <th className=\"text-center\" key={channel}>\n                  <h4>{translate('notification.channel', channel)}</h4>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <NotificationsList\n            channels={channels}\n            checkboxId={getCheckboxId}\n            notifications={projectNotifications}\n            onAdd={handleAddNotification}\n            onRemove={handleRemoveNotification}\n            project={true}\n            types={perProjectTypes}\n          />\n        </table>\n      </DeferredSpinner>\n    </>\n  );\n}\n\nexport default withNotifications(ProjectNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ProjectInformationPages {\n  main,\n  badges,\n  notifications\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\n\nexport interface DrawerLinkProps<P> {\n  label: string;\n  onPageChange: (page: P) => void;\n  to: P;\n}\n\nexport function DrawerLink<P>(props: DrawerLinkProps<P>) {\n  const { label, to } = props;\n\n  return (\n    <a\n      className=\"display-flex-space-between bordered-bottom big-padded\"\n      onClick={() => props.onPageChange(to)}\n      role=\"link\"\n      tabIndex={0}>\n      {label}\n      <ChevronRightIcon />\n    </a>\n  );\n}\n\nexport default React.memo(DrawerLink);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h3>{translate('overview.project_key', qualifier)}</h3>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" readOnly={true} type=\"text\" value={componentKey} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectLinks } from '../../../../../../api/projectLinks';\nimport { orderLinks } from '../../../../../../helpers/projectLinks';\nimport MetaLink from './MetaLink';\n\ninterface Props {\n  component: T.LightComponent;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <>\n        <div className=\"big-padded bordered-bottom\">\n          <h3>{translate('overview.external_links')}</h3>\n          <ul className=\"project-info-list\">\n            {orderedLinks.map(link => (\n              <MetaLink key={link.id} link={link} />\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityGateUrl } from '../../../../../../helpers/urls';\n\ninterface Props {\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate }: Props) {\n  return (\n    <>\n      <h3>{translate('project.info.quality_gate')}</h3>\n\n      <ul className=\"project-info-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">({translate('default')})</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../../../../api/rules';\nimport { getQualityProfileUrl } from '../../../../../../helpers/urls';\nimport { getLanguages, Store } from '../../../../../../store/rootReducer';\n\ninterface StateProps {\n  languages: T.Languages;\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  profiles: T.ComponentQualityProfile[];\n}\n\ninterface State {\n  deprecatedByKey: T.Dict<number>;\n}\n\nexport class MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const existingProfiles = this.props.profiles.filter(p => !p.deleted);\n    const requests = existingProfiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: T.Dict<number> = {};\n          responses.forEach((count, i) => {\n            const profileKey = existingProfiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      organization: undefined,\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: T.ComponentQualityProfile) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">({languageName})</span>\n        {profile.deleted ? (\n          profile.name\n        ) : (\n          <Link to={getQualityProfileUrl(profile.name, profile.language)}>{profile.name}</Link>\n        )}\n      </div>\n    );\n\n    if (profile.deleted) {\n      const tooltip = translateWithParameters('overview.deleted_profile', profile.name);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deleted-profile\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h3 className={headerClassName}>{translate('overview.quality_profiles')}</h3>\n\n        <ul className=\"project-info-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure, localizeMetric } from 'sonar-ui-common/helpers/measures';\nimport DrilldownLink from '../../../../../../components/shared/DrilldownLink';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport { MetricKey } from '../../../../../../types/metrics';\n\nexport interface MetaSizeProps {\n  component: T.Component;\n  measures: T.Measure[];\n}\n\nexport default function MetaSize({ component, measures }: MetaSizeProps) {\n  const isApp = component.qualifier === ComponentQualifier.Application;\n  const ncloc = measures.find(measure => measure.metric === MetricKey.ncloc);\n  const projects = isApp\n    ? measures.find(measure => measure.metric === MetricKey.projects)\n    : undefined;\n\n  return (\n    <>\n      <h3>{localizeMetric(MetricKey.ncloc)}</h3>\n      <div className=\"display-flex-center\">\n        {ncloc ? (\n          <>\n            <DrilldownLink className=\"huge\" component={component.key} metric={MetricKey.ncloc}>\n              {formatMeasure(ncloc.value, 'SHORT_INT')}\n            </DrilldownLink>\n\n            <span className=\"spacer-left\">\n              <SizeRating value={Number(ncloc.value)} />\n            </span>\n          </>\n        ) : (\n          <span>0</span>\n        )}\n\n        {isApp && (\n          <span className=\"huge-spacer-left display-inline-flex-center\">\n            {projects ? (\n              <DrilldownLink component={component.key} metric={MetricKey.projects}>\n                <span className=\"big\">{formatMeasure(projects.value, 'SHORT_INT')}</span>\n              </DrilldownLink>\n            ) : (\n              <span className=\"big\">0</span>\n            )}\n            <span className=\"little-spacer-left text-muted\">\n              {translate('metric.projects.name')}\n            </span>\n          </span>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, without } from 'lodash';\nimport * as React from 'react';\nimport { searchProjectTags } from '../../../../../../api/components';\nimport TagsSelector from '../../../../../../components/tags/TagsSelector';\n\ninterface Props {\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setApplicationTags, setProjectTags } from '../../../../../../api/components';\nimport TagsList from '../../../../../../components/tags/TagsList';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport MetaTagsSelector from './MetaTagsSelector';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class MetaTags extends React.PureComponent<Props> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  setTags = (values: string[]) => {\n    const { component } = this.props;\n\n    if (component.qualifier === ComponentQualifier.Application) {\n      return setApplicationTags({\n        application: component.key,\n        tags: values.join(',')\n      });\n    } else {\n      return setProjectTags({\n        project: component.key,\n        tags: values.join(',')\n      });\n    }\n  };\n\n  handleSetProjectTags = (values: string[]) => {\n    this.setTags(values).then(\n      () => this.props.onComponentChange({ tags: values }),\n      () => {}\n    );\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"big-spacer-top project-info-tags\" ref={card => (this.card = card)}>\n          <Dropdown\n            closeOnClick={false}\n            closeOnClickOutside={true}\n            overlay={\n              <MetaTagsSelector\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            }\n            overlayPlacement={PopupPlacement.BottomLeft}>\n            <ButtonLink innerRef={tagsList => (this.tagsList = tagsList)} stopPropagation={true}>\n              <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n            </ButtonLink>\n          </Dropdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top project-info-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../../../components/common/PrivacyBadgeContainer';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport DrawerLink from './DrawerLink';\nimport MetaKey from './meta/MetaKey';\nimport MetaLinks from './meta/MetaLinks';\nimport MetaQualityGate from './meta/MetaQualityGate';\nimport MetaQualityProfiles from './meta/MetaQualityProfiles';\nimport MetaSize from './meta/MetaSize';\nimport MetaTags from './meta/MetaTags';\nimport { ProjectInformationPages } from './ProjectInformationPages';\n\nexport interface ProjectInformationRendererProps {\n  canConfigureNotifications: boolean;\n  canUseBadges: boolean;\n  component: T.Component;\n  measures?: T.Measure[];\n  onComponentChange: (changes: {}) => void;\n  onPageChange: (page: ProjectInformationPages) => void;\n}\n\nexport function ProjectInformationRenderer(props: ProjectInformationRendererProps) {\n  const { canConfigureNotifications, canUseBadges, component, measures = [] } = props;\n\n  const isApp = component.qualifier === ComponentQualifier.Application;\n\n  return (\n    <>\n      <div>\n        <h2 className=\"big-padded bordered-bottom\">\n          {translate(isApp ? 'application' : 'project', 'info.title')}\n        </h2>\n      </div>\n\n      <div className=\"overflow-y-auto\">\n        <div className=\"big-padded bordered-bottom\">\n          <div className=\"display-flex-center\">\n            <h3 className=\"spacer-right\">{translate('project.info.description')}</h3>\n            {component.visibility && (\n              <PrivacyBadgeContainer\n                qualifier={component.qualifier}\n                visibility={component.visibility}\n              />\n            )}\n          </div>\n\n          {component.description && <p>{component.description}</p>}\n\n          <MetaTags component={component} onComponentChange={props.onComponentChange} />\n        </div>\n\n        <div className=\"big-padded bordered-bottom it__project-loc-value\">\n          <MetaSize component={component} measures={measures} />\n        </div>\n\n        {!isApp &&\n          (component.qualityGate ||\n            (component.qualityProfiles && component.qualityProfiles.length > 0)) && (\n            <>\n              <div className=\"big-padded bordered-bottom\">\n                {component.qualityGate && <MetaQualityGate qualityGate={component.qualityGate} />}\n\n                {component.qualityProfiles && component.qualityProfiles.length > 0 && (\n                  <MetaQualityProfiles\n                    headerClassName={component.qualityGate ? 'big-spacer-top' : undefined}\n                    profiles={component.qualityProfiles}\n                  />\n                )}\n              </div>\n            </>\n          )}\n\n        {!isApp && <MetaLinks component={component} />}\n\n        <div className=\"big-padded bordered-bottom\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n        </div>\n\n        {canUseBadges && (\n          <DrawerLink\n            label={translate('overview.badges.get_badge', component.qualifier)}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.badges}\n          />\n        )}\n        {canConfigureNotifications && (\n          <DrawerLink\n            label={translate('project.info.to_notifications')}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.notifications}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ProjectInformationRenderer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getMeasures } from '../../../../../api/measures';\nimport { isLoggedIn } from '../../../../../helpers/users';\nimport { fetchMetrics } from '../../../../../store/rootActions';\nimport { getCurrentUser, getMetrics, Store } from '../../../../../store/rootReducer';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { MetricKey } from '../../../../../types/metrics';\nimport ProjectBadges from './badges/ProjectBadges';\nimport InfoDrawerPage from './InfoDrawerPage';\nimport ProjectNotifications from './notifications/ProjectNotifications';\nimport './ProjectInformation.css';\nimport { ProjectInformationPages } from './ProjectInformationPages';\nimport ProjectInformationRenderer from './ProjectInformationRenderer';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  currentUser: T.CurrentUser;\n  fetchMetrics: () => void;\n  onComponentChange: (changes: {}) => void;\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface State {\n  measures?: T.Measure[];\n  page: ProjectInformationPages;\n}\n\nexport class ProjectInformation extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    page: ProjectInformationPages.main\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  setPage = (page: ProjectInformationPages = ProjectInformationPages.main) => {\n    this.setState({ page });\n  };\n\n  loadMeasures = () => {\n    const {\n      component: { key }\n    } = this.props;\n\n    return getMeasures({\n      component: key,\n      metricKeys: [MetricKey.ncloc, MetricKey.projects].join()\n    }).then(measures => {\n      if (this.mounted) {\n        this.setState({ measures });\n      }\n    });\n  };\n\n  render() {\n    const { branchLike, component, currentUser, metrics } = this.props;\n    const { measures, page } = this.state;\n\n    const canConfigureNotifications =\n      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;\n    const canUseBadges =\n      metrics !== undefined &&\n      component.visibility !== 'private' &&\n      (component.qualifier === ComponentQualifier.Application ||\n        component.qualifier === ComponentQualifier.Project);\n\n    return (\n      <>\n        <ProjectInformationRenderer\n          canConfigureNotifications={canConfigureNotifications}\n          canUseBadges={canUseBadges}\n          component={component}\n          measures={measures}\n          onComponentChange={this.props.onComponentChange}\n          onPageChange={this.setPage}\n        />\n        {canUseBadges && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.badges}\n            onPageChange={this.setPage}>\n            <ProjectBadges\n              branchLike={branchLike}\n              metrics={metrics}\n              project={component.key}\n              qualifier={component.qualifier}\n            />\n          </InfoDrawerPage>\n        )}\n        {canConfigureNotifications && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.notifications}\n            onPageChange={this.setPage}>\n            <ProjectNotifications component={component} />\n          </InfoDrawerPage>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ContextNavBar from 'sonar-ui-common/components/ui/ContextNavBar';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../../../types/tasks';\nimport { rawSizes } from '../../../theme';\nimport RecentHistory from '../../RecentHistory';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport Header from './Header';\nimport HeaderMeta from './HeaderMeta';\nimport Menu from './Menu';\nimport InfoDrawer from './projectInformation/InfoDrawer';\nimport ProjectInformation from './projectInformation/ProjectInformation';\n\nexport interface ComponentNavProps {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\nexport default function ComponentNav(props: ComponentNavProps) {\n  const {\n    branchLikes,\n    component,\n    currentBranchLike,\n    currentTask,\n    currentTaskOnSameBranch,\n    isInProgress,\n    isPending,\n    warnings\n  } = props;\n  const { contextNavHeightRaw, globalNavHeightRaw } = rawSizes;\n\n  const [displayProjectInfo, setDisplayProjectInfo] = React.useState(false);\n\n  React.useEffect(() => {\n    const { breadcrumbs, key, name, organization } = component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (\n      [\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application,\n        ComponentQualifier.Developper\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      RecentHistory.add(key, name, qualifier.toLowerCase(), organization);\n    }\n  }, [component, component.key]);\n\n  let notifComponent;\n  if (isInProgress || isPending || (currentTask && currentTask.status === TaskStatuses.Failed)) {\n    notifComponent = (\n      <ComponentNavBgTaskNotif\n        component={component}\n        currentTask={currentTask}\n        currentTaskOnSameBranch={currentTaskOnSameBranch}\n        isInProgress={isInProgress}\n        isPending={isPending}\n      />\n    );\n  }\n\n  const contextNavHeight = notifComponent ? contextNavHeightRaw + 30 : contextNavHeightRaw;\n\n  return (\n    <ContextNavBar height={contextNavHeight} id=\"context-navigation\" notif={notifComponent}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between little-padded-top', {\n          'padded-bottom': warnings.length === 0\n        })}>\n        <Header\n          branchLikes={branchLikes}\n          component={component}\n          currentBranchLike={currentBranchLike}\n        />\n        <HeaderMeta\n          branchLike={currentBranchLike}\n          component={component}\n          onWarningDismiss={props.onWarningDismiss}\n          warnings={warnings}\n        />\n      </div>\n      <Menu\n        branchLike={currentBranchLike}\n        branchLikes={branchLikes}\n        component={component}\n        isInProgress={isInProgress}\n        isPending={isPending}\n        onToggleProjectInfo={() => setDisplayProjectInfo(!displayProjectInfo)}\n      />\n      <InfoDrawer\n        displayed={displayProjectInfo}\n        onClose={() => setDisplayProjectInfo(false)}\n        top={globalNavHeightRaw + contextNavHeightRaw}>\n        <ProjectInformation\n          branchLike={currentBranchLike}\n          component={component}\n          onComponentChange={props.onComponentChange}\n        />\n      </InfoDrawer>\n    </ContextNavBar>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getAnalysisStatus, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../helpers/branch-like';\nimport { getPortfolioUrl } from '../../helpers/urls';\nimport {\n  fetchOrganization,\n  registerBranchStatus,\n  requireAuthorization\n} from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport { isPortfolioLike } from '../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../types/tasks';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport { ComponentContext } from './ComponentContext';\nimport PageUnavailableDueToIndexation from './indexation/PageUnavailableDueToIndexation';\nimport ComponentNav from './nav/component/ComponentNav';\n\ninterface Props {\n  children: React.ReactElement;\n  fetchOrganization: (organization: string) => void;\n  location: Pick<Location, 'query' | 'pathname'>;\n  registerBranchStatus: (branchLike: BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component?: T.Component;\n  currentTask?: Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: Task[];\n  warnings: TaskWarning[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (response?: Response) => {\n      if (this.mounted) {\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        /*\n         * There used to be a redirect from /dashboard to /portfolio which caused issues.\n         * Links should be fixed to not rely on this redirect, but:\n         * This is a fail-safe in case there are still some faulty links remaining.\n         */\n        if (\n          this.props.location.pathname.match('dashboard') &&\n          isPortfolioLike(componentWithQualifier.qualifier)\n        ) {\n          this.props.router.replace(getPortfolioUrl(component.key));\n        }\n\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: BranchLike;\n    branchLikes: BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === TaskStatuses.InProgress\n              );\n\n              const currentTaskChanged =\n                (!currentTask && newCurrentTask) ||\n                (currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id);\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === TaskStatuses.Pending);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: Task, branchLike?: BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === TaskStatuses.Failed || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: Task[], branchLike?: BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (task: Pick<Task, 'branch' | 'pullRequest'>, branchLike?: BranchLike) => {\n    if (branchLike) {\n      if (isMainBranch(branchLike)) {\n        return (!task.pullRequest && !task.branch) || branchLike.name === task.branch;\n      }\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isBranch(branchLike)) {\n        return branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  handleWarningDismiss = () => {\n    const { component } = this.state;\n    if (component !== undefined) {\n      this.fetchWarnings(component);\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    if (component?.needIssueSync) {\n      return <PageUnavailableDueToIndexation component={component} />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            onComponentChange={this.handleComponentChange}\n            onWarningDismiss={this.handleWarningDismiss}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization, registerBranchStatus, requireAuthorization };\n\nexport default withRouter(connect(null, mapDispatchToProps)(ComponentContainer));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport './CodeSnippet.css';\n\nexport interface CodeSnippetProps {\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  snippet: string | (string | undefined)[];\n}\n\nexport default function CodeSnippet(props: CodeSnippetProps) {\n  const { isOneLine, noCopy, snippet } = props;\n  const snippetRef = React.useRef<HTMLPreElement>(null);\n\n  let finalSnippet: string;\n  if (Array.isArray(snippet)) {\n    finalSnippet = snippet.filter(line => isDefined(line)).join(isOneLine ? ' ' : ' \\\\\\n  ');\n  } else {\n    finalSnippet = snippet;\n  }\n\n  return (\n    <div className={classNames('code-snippet spacer-top spacer-bottom display-flex-row', {})}>\n      <pre className=\"flex-1\" ref={snippetRef}>\n        {finalSnippet}\n      </pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <MultiSelect\n      elements={props.tags}\n      listSize={props.listSize}\n      onSearch={props.onSearch}\n      onSelect={props.onSelect}\n      onUnselect={props.onUnselect}\n      placeholder={translate('search.search_for_tags')}\n      selectedElements={props.selectedTags}\n      validateSearchInput={validateTag}\n    />\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nexport const DEFAULT_HOMEPAGE: T.HomePage = { type: 'PROJECTS' };\n\nexport class HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  handleReset = () => {\n    this.props.setHomePage(DEFAULT_HOMEPAGE);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const isChecked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const isDefault = isChecked && isSameHomePage(currentPage, DEFAULT_HOMEPAGE);\n    const tooltip = isChecked\n      ? translate(isDefault ? 'homepage.current.is_default' : 'homepage.current')\n      : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {isDefault ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={isChecked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={isChecked ? this.handleReset : this.handleClick}>\n            <HomeIcon filled={isChecked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component &&\n    (a as any).organization === (b as any).organization\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getBranchLikeQuery } from '../../helpers/branch-like';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\nconst issueParamsPerMetric: T.Dict<T.Dict<string>> = {\n  blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  new_blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  new_critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  major_violations: { resolved: 'false', severities: 'MAJOR' },\n  new_major_violations: { resolved: 'false', severities: 'MAJOR' },\n  minor_violations: { resolved: 'false', severities: 'MINOR' },\n  new_minor_violations: { resolved: 'false', severities: 'MINOR' },\n  info_violations: { resolved: 'false', severities: 'INFO' },\n  new_info_violations: { resolved: 'false', severities: 'INFO' },\n  open_issues: { resolved: 'false', statuses: 'OPEN' },\n  reopened_issues: { resolved: 'false', statuses: 'REOPENED' },\n  confirmed_issues: { resolved: 'false', statuses: 'CONFIRMED' },\n  false_positive_issues: { resolutions: 'FALSE-POSITIVE' },\n  code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  new_code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  bugs: { resolved: 'false', types: 'BUG' },\n  new_bugs: { resolved: 'false', types: 'BUG' },\n  vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' },\n  new_vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' }\n};\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: T.Dict<string | boolean> = {\n      ...(issueParamsPerMetric[this.props.metric] || { resolved: 'false' })\n    };\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl({\n      componentKey: this.props.component,\n      metric: this.props.metric,\n      branchLike: this.props.branchLike,\n      listView: true\n    });\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { isWebUri } from 'valid-url';\n\nexport interface DocumentationTooltipProps {\n  children?: React.ReactNode;\n  className?: string;\n  content?: React.ReactNode;\n  links?: Array<{ href: string; label: string }>;\n  title?: string;\n}\n\nexport default function DocumentationTooltip(props: DocumentationTooltipProps) {\n  const { className, content, links, title } = props;\n\n  return (\n    <HelpTooltip\n      className={className}\n      overlay={\n        <div className=\"big-padded-top big-padded-bottom\">\n          {title && (\n            <div className=\"spacer-bottom\">\n              <strong>{title}</strong>\n            </div>\n          )}\n\n          {content && <p>{content}</p>}\n\n          {links && (\n            <>\n              <hr className=\"big-spacer-top big-spacer-bottom\" />\n\n              {links.map(({ href, label }) => (\n                <div className=\"little-spacer-bottom\" key={label}>\n                  <a\n                    className=\"display-inline-flex-center link-with-icon\"\n                    href={href}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    {isWebUri(href) && <DetachIcon size={14} className=\"spacer-right\" />}\n                    <span>{label}</span>\n                  </a>\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n      }>\n      {props.children}\n    </HelpTooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Branch, PullRequest } from '../types/branch-like';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n\nexport function excludeBranchFromPurge(projectKey: string, branchName: string, excluded: boolean) {\n  return post('/api/project_branches/set_automatic_deletion_protection', {\n    project: projectKey,\n    branch: branchName,\n    value: excluded\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".code-snippet{background:#e6e6e6;border-radius:3px}.code-snippet pre{padding:8px 16px;border-right:1px solid hsla(0,0%,78.4%,.5);overflow-y:hidden;overflow-x:auto}.code-snippet>button{height:auto;border:0;border-radius:0;background:transparent;padding:8px}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:hsla(0,0%,78.4%,.5);color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface PrivacyBadgeContainerProps {\n  className?: string;\n  qualifier: string;\n  visibility: T.Visibility;\n}\n\nexport default function PrivacyBadgeContainer({\n  className,\n  qualifier,\n  visibility\n}: PrivacyBadgeContainerProps) {\n  if (visibility !== 'private') {\n    return null;\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      <div className={classNames('badge', className)}>{translate('visibility', visibility)}</div>\n    </Tooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { getBranchStatusByBranchLike, Store } from '../../store/rootReducer';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface Props {\n  branchLike: BranchLike;\n  component: string;\n  status?: string;\n}\n\nexport function BranchStatus({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, { branchLike, component }: Props) => {\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\ninterface RawDomain {\n  actions: T.WebApi.Action[];\n  deprecatedSince?: string;\n  description: string;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<RawDomain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r => r.webServices)\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<T.WebApi.Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { getLinkName } from '../../../../../../helpers/projectLinks';\nimport isValidUri from '../../../../../utils/isValidUri';\n\ninterface Props {\n  iconOnly?: boolean;\n  link: T.ProjectLink;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class MetaLink extends React.PureComponent<Props, State> {\n  state = { expanded: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  handleCollapse = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleSelect = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n  };\n\n  render() {\n    const { iconOnly, link } = this.props;\n    const linkTitle = getLinkName(link);\n    return (\n      <li>\n        <a\n          className=\"link-with-icon\"\n          href={link.url}\n          onClick={!isValidUri(link.url) ? this.handleClick : undefined}\n          rel=\"nofollow noreferrer noopener\"\n          target=\"_blank\"\n          title={linkTitle}>\n          <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n          {!iconOnly && linkTitle}\n        </a>\n        {this.state.expanded && (\n          <div className=\"little-spacer-top display-flex-center\">\n            <input\n              className=\"overview-key width-80\"\n              onClick={this.handleSelect}\n              readOnly={true}\n              type=\"text\"\n              value={link.url}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.handleCollapse} />\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}