{"version":3,"sources":["webpack:///./src/main/js/components/common/VisibilitySelector.tsx","webpack:///./src/main/js/apps/permissions/project/components/ApplyTemplate.tsx","webpack:///./src/main/js/apps/permissions/project/components/AllHoldersList.tsx","webpack:///./src/main/js/apps/permissions/project/components/PageHeader.tsx","webpack:///./src/main/js/apps/permissions/project/components/PublicProjectDisclaimer.tsx","webpack:///./src/main/js/apps/permissions/project/components/App.tsx","webpack:///./src/main/js/apps/permissions/project/components/AppContainer.ts"],"names":["render","className","this","props","map","visibility","key","value","checked","onCheck","onChange","disabled","canTurnToPrivate","showDetails","mounted","state","done","loading","fetchPermissionTemplates","organization","then","permissionTemplates","setState","handleSubmit","permissionTemplate","projectKey","project","templateId","onApply","Promise","reject","undefined","handlePermissionTemplateChange","componentDidMount","componentWillUnmount","header","name","onClose","onSubmit","size","onCloseClick","onFormSubmit","submitting","id","variant","htmlFor","clearable","options","label","onClick","handleToggleUser","user","permission","permissions","includes","revokePermissionFromUser","login","grantPermissionToUser","handleToggleGroup","group","revokePermissionFromGroup","grantPermissionToGroup","handleSelectPermission","onPermissionSelect","filter","groups","groupsPaging","users","usersPaging","order","component","qualifier","count","total","length","HoldersList","onSelectPermission","onToggleGroup","onToggleUser","query","selectedPermission","SearchForm","onFilter","onFilterChange","onSearch","onQueryChange","loadMore","onLoadMore","applyTemplateModal","handleApplyTemplate","handleApplyTemplateClose","configuration","canApplyPermissionTemplate","description","visibilityDescription","ApplyTemplate","loadHolders","PublicProjectDisclaimer","onConfirm","confirmButtonText","Alert","stopLoading","loadUsersAndGroups","userPage","groupsPage","getUsers","q","p","resolve","paging","getGroups","all","usersResponse","groupsResponse","pageIndex","handleFilterChange","handleQueryChange","handlePermissionSelect","addPermissionToGroup","candidate","addPermissionToUser","removePermissionFromGroup","removePermissionFromUser","groupName","handleVisibilityChange","openDisclaimer","turnProjectToPrivate","turnProjectToPublic","onComponentChange","disclaimer","closeDisclaimer","canUpdateProjectVisibilityToPrivate","defer","title","VisibilitySelector","currentUser"],"mappings":"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","file":"js/350.1601658702741.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  canTurnToPrivate?: boolean;\n  className?: string;\n  onChange: (visibility: T.Visibility) => void;\n  showDetails?: boolean;\n  visibility?: T.Visibility;\n}\n\nexport default class VisibilitySelector extends React.PureComponent<Props> {\n  render() {\n    return (\n      <div className={classNames(this.props.className)}>\n        {['public', 'private'].map(visibility => (\n          <Radio\n            className={`huge-spacer-right visibility-${visibility}`}\n            key={visibility}\n            value={visibility}\n            checked={this.props.visibility === visibility}\n            onCheck={this.props.onChange}\n            disabled={visibility === 'private' && !this.props.canTurnToPrivate}>\n            <div>\n              {translate('visibility', visibility)}\n              {this.props.showDetails && (\n                <p className=\"note\">{translate('visibility', visibility, 'description.long')}</p>\n              )}\n            </div>\n          </Radio>\n        ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { applyTemplateToProject, getPermissionTemplates } from '../../../../api/permissions';\n\ninterface Props {\n  onApply?: () => void;\n  onClose: () => void;\n  organization: string | undefined;\n  project: { key: string; name: string };\n}\n\ninterface State {\n  done: boolean;\n  loading: boolean;\n  permissionTemplate?: string;\n  permissionTemplates?: T.PermissionTemplate[];\n}\n\nexport default class ApplyTemplate extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { done: false, loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPermissionTemplates();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchPermissionTemplates = () => {\n    getPermissionTemplates(this.props.organization).then(\n      ({ permissionTemplates }) => {\n        if (this.mounted) {\n          this.setState({ loading: false, permissionTemplates });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleSubmit = () => {\n    if (this.state.permissionTemplate) {\n      return applyTemplateToProject({\n        organization: this.props.organization,\n        projectKey: this.props.project.key,\n        templateId: this.state.permissionTemplate\n      }).then(() => {\n        if (this.mounted) {\n          if (this.props.onApply) {\n            this.props.onApply();\n          }\n          this.setState({ done: true });\n        }\n      });\n    } else {\n      return Promise.reject(undefined);\n    }\n  };\n\n  handlePermissionTemplateChange = ({ value }: { value: string }) => {\n    this.setState({ permissionTemplate: value });\n  };\n\n  render() {\n    const header = translateWithParameters(\n      'projects_role.apply_template_to_xxx',\n      this.props.project.name\n    );\n\n    return (\n      <SimpleModal\n        header={header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form id=\"project-permissions-apply-template-form\" onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              {this.state.done ? (\n                <Alert variant=\"success\">{translate('projects_role.apply_template.success')}</Alert>\n              ) : (\n                <>\n                  {this.state.loading ? (\n                    <i className=\"spinner\" />\n                  ) : (\n                    <div className=\"modal-field\">\n                      <label htmlFor=\"project-permissions-template\">\n                        {translate('template')}\n                        <em className=\"mandatory\">*</em>\n                      </label>\n                      {this.state.permissionTemplates && (\n                        <Select\n                          clearable={false}\n                          id=\"project-permissions-template\"\n                          onChange={this.handlePermissionTemplateChange}\n                          options={this.state.permissionTemplates.map(permissionTemplate => ({\n                            label: permissionTemplate.name,\n                            value: permissionTemplate.id\n                          }))}\n                          value={this.state.permissionTemplate}\n                        />\n                      )}\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              {!this.state.done && (\n                <SubmitButton disabled={submitting || !this.state.permissionTemplate}>\n                  {translate('apply')}\n                </SubmitButton>\n              )}\n              <ResetButtonLink onClick={onCloseClick}>\n                {translate(this.state.done ? 'close' : 'cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { without } from 'lodash';\nimport * as React from 'react';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport HoldersList from '../../shared/components/HoldersList';\nimport SearchForm from '../../shared/components/SearchForm';\nimport { convertToPermissionDefinitions, PERMISSIONS_ORDER_BY_QUALIFIER } from '../../utils';\n\ninterface Props {\n  component: T.Component;\n  filter: string;\n  grantPermissionToGroup: (group: string, permission: string) => Promise<void>;\n  grantPermissionToUser: (user: string, permission: string) => Promise<void>;\n  groups: T.PermissionGroup[];\n  groupsPaging?: T.Paging;\n  onLoadMore: () => void;\n  onFilterChange: (filter: string) => void;\n  onPermissionSelect: (permissions?: string) => void;\n  onQueryChange: (query: string) => void;\n  query: string;\n  revokePermissionFromGroup: (group: string, permission: string) => Promise<void>;\n  revokePermissionFromUser: (user: string, permission: string) => Promise<void>;\n  selectedPermission?: string;\n  users: T.PermissionUser[];\n  usersPaging?: T.Paging;\n  visibility?: T.Visibility;\n}\n\nexport default class AllHoldersList extends React.PureComponent<Props> {\n  handleToggleUser = (user: T.PermissionUser, permission: string) => {\n    const hasPermission = user.permissions.includes(permission);\n\n    if (hasPermission) {\n      return this.props.revokePermissionFromUser(user.login, permission);\n    } else {\n      return this.props.grantPermissionToUser(user.login, permission);\n    }\n  };\n\n  handleToggleGroup = (group: T.PermissionGroup, permission: string) => {\n    const hasPermission = group.permissions.includes(permission);\n\n    if (hasPermission) {\n      return this.props.revokePermissionFromGroup(group.name, permission);\n    } else {\n      return this.props.grantPermissionToGroup(group.name, permission);\n    }\n  };\n\n  handleSelectPermission = (permission?: string) => {\n    this.props.onPermissionSelect(permission);\n  };\n\n  render() {\n    const { filter, groups, groupsPaging, users, usersPaging } = this.props;\n    let order = PERMISSIONS_ORDER_BY_QUALIFIER[this.props.component.qualifier];\n    if (this.props.visibility === 'public') {\n      order = without(order, 'user', 'codeviewer');\n    }\n    const permissions = convertToPermissionDefinitions(order, 'projects_role');\n\n    let count = 0;\n    let total = 0;\n    if (filter !== 'users') {\n      count += groups.length;\n      total += groupsPaging ? groupsPaging.total : groups.length;\n    }\n    if (filter !== 'groups') {\n      count += users.length;\n      total += usersPaging ? usersPaging.total : users.length;\n    }\n\n    return (\n      <>\n        <HoldersList\n          filter={this.props.filter}\n          groups={this.props.groups}\n          onSelectPermission={this.handleSelectPermission}\n          onToggleGroup={this.handleToggleGroup}\n          onToggleUser={this.handleToggleUser}\n          permissions={permissions}\n          query={this.props.query}\n          selectedPermission={this.props.selectedPermission}\n          users={this.props.users}>\n          <SearchForm\n            filter={this.props.filter}\n            onFilter={this.props.onFilterChange}\n            onSearch={this.props.onQueryChange}\n            query={this.props.query}\n          />\n        </HoldersList>\n        <ListFooter count={count} loadMore={this.props.onLoadMore} total={total} />\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ApplyTemplate from './ApplyTemplate';\n\ninterface Props {\n  component: T.Component;\n  loadHolders: () => void;\n  loading: boolean;\n}\n\ninterface State {\n  applyTemplateModal: boolean;\n}\n\nexport default class PageHeader extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { applyTemplateModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleApplyTemplate = () => {\n    this.setState({ applyTemplateModal: true });\n  };\n\n  handleApplyTemplateClose = () => {\n    if (this.mounted) {\n      this.setState({ applyTemplateModal: false });\n    }\n  };\n\n  render() {\n    const { component } = this.props;\n    const { configuration } = component;\n    const canApplyPermissionTemplate =\n      configuration != null && configuration.canApplyPermissionTemplate;\n\n    const description = ['VW', 'SVW', 'APP'].includes(component.qualifier)\n      ? translate('roles.page.description_portfolio')\n      : translate('roles.page.description2');\n\n    const visibilityDescription =\n      component.qualifier === 'TRK' && component.visibility\n        ? translate('visibility', component.visibility, 'description', component.qualifier)\n        : undefined;\n\n    return (\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('permissions.page')}</h1>\n\n        {this.props.loading && <i className=\"spinner\" />}\n\n        {canApplyPermissionTemplate && (\n          <div className=\"page-actions\">\n            <Button className=\"js-apply-template\" onClick={this.handleApplyTemplate}>\n              {translate('projects_role.apply_template')}\n            </Button>\n\n            {this.state.applyTemplateModal && (\n              <ApplyTemplate\n                onApply={this.props.loadHolders}\n                onClose={this.handleApplyTemplateClose}\n                organization={component.organization}\n                project={component}\n              />\n            )}\n          </div>\n        )}\n\n        <div className=\"page-description\">\n          <p>{description}</p>\n          {visibilityDescription && <p>{visibilityDescription}</p>}\n        </div>\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  component: {\n    name: string;\n    qualifier: string;\n  };\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nexport default function PublicProjectDisclaimer({ component, onClose, onConfirm }: Props) {\n  const { qualifier } = component;\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('projects_role.turn_project_to_public', qualifier)}\n      header={translateWithParameters('projects_role.turn_x_to_public', component.name)}\n      onClose={onClose}\n      onConfirm={onConfirm}>\n      <Alert variant=\"warning\">\n        {translate('projects_role.are_you_sure_to_turn_project_to_public.warning', qualifier)}\n      </Alert>\n      <p>{translate('projects_role.are_you_sure_to_turn_project_to_public', qualifier)}</p>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { without } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport * as api from '../../../../api/permissions';\nimport VisibilitySelector from '../../../../components/common/VisibilitySelector';\nimport '../../styles.css';\nimport AllHoldersList from './AllHoldersList';\nimport PageHeader from './PageHeader';\nimport PublicProjectDisclaimer from './PublicProjectDisclaimer';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n}\n\ninterface State {\n  disclaimer: boolean;\n  filter: string;\n  groups: T.PermissionGroup[];\n  groupsPaging?: T.Paging;\n  loading: boolean;\n  query: string;\n  selectedPermission?: string;\n  users: T.PermissionUser[];\n  usersPaging?: T.Paging;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      disclaimer: false,\n      filter: 'all',\n      groups: [],\n      loading: true,\n      query: '',\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadHolders();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadUsersAndGroups = (userPage?: number, groupsPage?: number) => {\n    const { component } = this.props;\n    const { filter, query, selectedPermission } = this.state;\n\n    const getUsers: Promise<{ paging?: T.Paging; users: T.PermissionUser[] }> =\n      filter !== 'groups'\n        ? api.getPermissionsUsersForComponent({\n            projectKey: component.key,\n            q: query || undefined,\n            permission: selectedPermission,\n            p: userPage\n          })\n        : Promise.resolve({ paging: undefined, users: [] });\n\n    const getGroups: Promise<{ paging?: T.Paging; groups: T.PermissionGroup[] }> =\n      filter !== 'users'\n        ? api.getPermissionsGroupsForComponent({\n            projectKey: component.key,\n            q: query || undefined,\n            permission: selectedPermission,\n            p: groupsPage\n          })\n        : Promise.resolve({ paging: undefined, groups: [] });\n\n    return Promise.all([getUsers, getGroups]);\n  };\n\n  loadHolders = () => {\n    this.setState({ loading: true });\n    return this.loadUsersAndGroups().then(([usersResponse, groupsResponse]) => {\n      if (this.mounted) {\n        this.setState({\n          groups: groupsResponse.groups,\n          groupsPaging: groupsResponse.paging,\n          loading: false,\n          users: usersResponse.users,\n          usersPaging: usersResponse.paging\n        });\n      }\n    }, this.stopLoading);\n  };\n\n  onLoadMore = () => {\n    const { usersPaging, groupsPaging } = this.state;\n    this.setState({ loading: true });\n    return this.loadUsersAndGroups(\n      usersPaging ? usersPaging.pageIndex + 1 : 1,\n      groupsPaging ? groupsPaging.pageIndex + 1 : 1\n    ).then(([usersResponse, groupsResponse]) => {\n      if (this.mounted) {\n        this.setState(({ groups, users }) => ({\n          groups: [...groups, ...groupsResponse.groups],\n          groupsPaging: groupsResponse.paging,\n          loading: false,\n          users: [...users, ...usersResponse.users],\n          usersPaging: usersResponse.paging\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleFilterChange = (filter: string) => {\n    if (this.mounted) {\n      this.setState({ filter }, this.loadHolders);\n    }\n  };\n\n  handleQueryChange = (query: string) => {\n    if (this.mounted) {\n      this.setState({ query }, this.loadHolders);\n    }\n  };\n\n  handlePermissionSelect = (selectedPermission?: string) => {\n    if (this.mounted) {\n      this.setState(\n        (state: State) => ({\n          selectedPermission:\n            state.selectedPermission === selectedPermission ? undefined : selectedPermission\n        }),\n        this.loadHolders\n      );\n    }\n  };\n\n  addPermissionToGroup = (group: string, permission: string) => {\n    return this.state.groups.map(candidate =>\n      candidate.name === group\n        ? { ...candidate, permissions: [...candidate.permissions, permission] }\n        : candidate\n    );\n  };\n\n  addPermissionToUser = (user: string, permission: string) => {\n    return this.state.users.map(candidate =>\n      candidate.login === user\n        ? { ...candidate, permissions: [...candidate.permissions, permission] }\n        : candidate\n    );\n  };\n\n  removePermissionFromGroup = (group: string, permission: string) => {\n    return this.state.groups.map(candidate =>\n      candidate.name === group\n        ? { ...candidate, permissions: without(candidate.permissions, permission) }\n        : candidate\n    );\n  };\n\n  removePermissionFromUser = (user: string, permission: string) => {\n    return this.state.users.map(candidate =>\n      candidate.login === user\n        ? { ...candidate, permissions: without(candidate.permissions, permission) }\n        : candidate\n    );\n  };\n\n  grantPermissionToGroup = (group: string, permission: string) => {\n    if (this.mounted) {\n      this.setState({\n        loading: true,\n        groups: this.addPermissionToGroup(group, permission)\n      });\n      return api\n        .grantPermissionToGroup({\n          projectKey: this.props.component.key,\n          groupName: group,\n          permission\n        })\n        .then(this.stopLoading, () => {\n          if (this.mounted) {\n            this.setState({\n              loading: false,\n              groups: this.removePermissionFromGroup(group, permission)\n            });\n          }\n        });\n    }\n    return Promise.resolve();\n  };\n\n  grantPermissionToUser = (user: string, permission: string) => {\n    if (this.mounted) {\n      this.setState({\n        loading: true,\n        users: this.addPermissionToUser(user, permission)\n      });\n      return api\n        .grantPermissionToUser({\n          projectKey: this.props.component.key,\n          login: user,\n          permission\n        })\n        .then(this.stopLoading, () => {\n          if (this.mounted) {\n            this.setState({\n              loading: false,\n              users: this.removePermissionFromUser(user, permission)\n            });\n          }\n        });\n    }\n    return Promise.resolve();\n  };\n\n  revokePermissionFromGroup = (group: string, permission: string) => {\n    if (this.mounted) {\n      this.setState({\n        loading: true,\n        groups: this.removePermissionFromGroup(group, permission)\n      });\n      return api\n        .revokePermissionFromGroup({\n          projectKey: this.props.component.key,\n          groupName: group,\n          permission\n        })\n        .then(this.stopLoading, () => {\n          if (this.mounted) {\n            this.setState({\n              loading: false,\n              groups: this.addPermissionToGroup(group, permission)\n            });\n          }\n        });\n    }\n    return Promise.resolve();\n  };\n\n  revokePermissionFromUser = (user: string, permission: string) => {\n    if (this.mounted) {\n      this.setState({\n        loading: true,\n        users: this.removePermissionFromUser(user, permission)\n      });\n      return api\n        .revokePermissionFromUser({\n          projectKey: this.props.component.key,\n          login: user,\n          permission\n        })\n        .then(this.stopLoading, () => {\n          if (this.mounted) {\n            this.setState({\n              loading: false,\n              users: this.addPermissionToUser(user, permission)\n            });\n          }\n        });\n    }\n    return Promise.resolve();\n  };\n\n  handleVisibilityChange = (visibility: string) => {\n    if (visibility === 'public') {\n      this.openDisclaimer();\n    } else {\n      this.turnProjectToPrivate();\n    }\n  };\n\n  turnProjectToPublic = () => {\n    this.props.onComponentChange({ visibility: 'public' });\n    api.changeProjectVisibility(this.props.component.key, 'public').then(\n      () => {\n        this.loadHolders();\n      },\n      () => {\n        this.props.onComponentChange({\n          visibility: 'private'\n        });\n      }\n    );\n  };\n\n  turnProjectToPrivate = () => {\n    this.props.onComponentChange({ visibility: 'private' });\n    api.changeProjectVisibility(this.props.component.key, 'private').then(\n      () => {\n        this.loadHolders();\n      },\n      () => {\n        this.props.onComponentChange({\n          visibility: 'public'\n        });\n      }\n    );\n  };\n\n  openDisclaimer = () => {\n    if (this.mounted) {\n      this.setState({ disclaimer: true });\n    }\n  };\n\n  closeDisclaimer = () => {\n    if (this.mounted) {\n      this.setState({ disclaimer: false });\n    }\n  };\n\n  render() {\n    const { component } = this.props;\n    const canTurnToPrivate =\n      component.configuration && component.configuration.canUpdateProjectVisibilityToPrivate;\n\n    return (\n      <div className=\"page page-limited\" id=\"project-permissions-page\">\n        <Helmet defer={false} title={translate('permissions.page')} />\n\n        <PageHeader\n          component={component}\n          loadHolders={this.loadHolders}\n          loading={this.state.loading}\n        />\n        <div>\n          <VisibilitySelector\n            canTurnToPrivate={canTurnToPrivate}\n            className=\"big-spacer-top big-spacer-bottom\"\n            onChange={this.handleVisibilityChange}\n            visibility={component.visibility}\n          />\n          {this.state.disclaimer && (\n            <PublicProjectDisclaimer\n              component={component}\n              onClose={this.closeDisclaimer}\n              onConfirm={this.turnProjectToPublic}\n            />\n          )}\n        </div>\n        <AllHoldersList\n          component={component}\n          filter={this.state.filter}\n          grantPermissionToGroup={this.grantPermissionToGroup}\n          grantPermissionToUser={this.grantPermissionToUser}\n          groups={this.state.groups}\n          groupsPaging={this.state.groupsPaging}\n          onFilterChange={this.handleFilterChange}\n          onLoadMore={this.onLoadMore}\n          onPermissionSelect={this.handlePermissionSelect}\n          onQueryChange={this.handleQueryChange}\n          query={this.state.query}\n          revokePermissionFromGroup={this.revokePermissionFromGroup}\n          revokePermissionFromUser={this.revokePermissionFromUser}\n          selectedPermission={this.state.selectedPermission}\n          users={this.state.users}\n          usersPaging={this.state.usersPaging}\n          visibility={component.visibility}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport App from './App';\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(App);\n"],"sourceRoot":""}