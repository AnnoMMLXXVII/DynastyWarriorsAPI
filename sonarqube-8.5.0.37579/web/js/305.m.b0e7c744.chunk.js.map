{"version":3,"sources":["webpack:///./src/main/js/apps/settings/side-tabs.css?de75","webpack:///./src/main/js/apps/settings/side-tabs.css","webpack:///./src/main/js/apps/settings/styles.css?cb9e","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionsTable.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationFeatureBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/types/alm-settings.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/api/settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","handleError","key","dispatch","response","then","message","Promise","reject","AlmBindingDefinitionFormModalRenderer","props","action","children","help","header","onClose","onCancel","onSubmit","size","onCloseClick","onFormSubmit","submitting","className","Alert","variant","loading","disabled","canSubmit","onClick","AlmBindingDefinitionFormRenderer","success","e","preventDefault","undefined","onEdit","onDelete","super","handleCancel","this","setState","formData","bindingDefinition","touched","handleDelete","handleEdit","handleFieldChange","fieldId","value","handleFormSubmit","state","hideKeyField","optionalFields","values","length","Object","some","v","prevProps","showInModal","readOnly","showEdit","showCancel","showDelete","onFieldChange","AlmBindingDefinitionsTable","additionalColumnsHeaders","additionalTableInfo","alm","definitions","onCreate","map","h","colSpan","additionalColumns","title","AlmIntegrationFeatureBox","active","description","inactiveReason","name","fill","green","gray60","AlmTabRenderer","additionalColumnsKeys","defaultBinding","editedDefinition","features","form","loadingAlmDefinitions","loadingProjectCount","multipleAlmEnabled","defaultMessage","id","link","target","to","definition","mappedDefinitions","properties","k","feature","mounted","handleCreate","definitionKey","find","d","handleSubmit","config","originalKey","call","updateConfiguration","newKey","createConfiguration","onUpdateDefinitions","catch","AlmBindingDefinitionFormField","autoFocus","isTextArea","maxLength","optional","propKey","htmlFor","overlay","placement","onChange","currentTarget","required","rows","type","AzureForm","personalAccessToken","AzureTab","Azure","childProps","BitbucketForm","example","url","BitbucketTab","Bitbucket","DeleteModal","projectCount","confirmButtonText","confirmData","isDestructive","onConfirm","showProjectCountWarning","reseting","handleClose","handleReset","onReset","contentLabel","onRequestClose","setting","isDefault","changedValue","hasValueChanged","hasValueToResetTo","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","renderModal","InputForBoolean","displayedValue","handleInputChange","event","handleKeyDown","keyCode","onKeyDown","InputForNumber","changing","handleChangeClick","nextProps","autoComplete","renderInput","option","label","clearable","InputForString","typeMapping","STRING","TEXT","PASSWORD","BOOLEAN","INTEGER","LONG","FLOAT","other","InputComponent","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","multiValues","fieldKey","emptyValue","newFields","fieldValues","fields","field","width","minWidth","marginTop","renderFields","Input","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","passValidation","checkValue","handleSave","saveValue","changes","validationMessage","propertyName","effectiveValue","dangerouslySetInnerHTML","__html","mapDispatchToProps","getState","defaultValue","keys","ownProps","DefinitionsList","settings","error","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","withCurrentUser","renderEmailForm","subCategoryKey","category","fetchValues","prevKeys","join","bySubCategory","subCategory","subCategories","sortedSubCategories","toLowerCase","filteredSubCategories","filter","c","GithubForm","appId","clientId","clientSecret","privateKey","GithubTab","branchesEnabled","GitHub","CategoryDefinitionsList","GitlabForm","GitlabTab","importFeatureEnabled","Boolean","GitLab","tabs","alt","height","src","requiresBranchesEnabled","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlm","onSelect","onSelectAlm","selected","tab","azure","bitbucket","github","gitlab","onConfirmDelete","deleteConfiguration","fetchPullRequestDecorationSetting","appState","resolve","handleSelectAlm","withAppState","AnalysisScope","selectedCategory","abap","apex","cobol","css","flex","go","html","java","javascript","kotlin","php","python","rpg","ruby","scala","swift","typescript","xml","withRouter","categories","location","router","availableLanguages","selectedLanguage","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","originalValue","getLanguages","newOption","query","placeholder","days","saving","onSelectDays","onSelectSetting","currentSetting","currentSettingValue","String","fetchNewCodePeriodSetting","isChanged","isValid","BaselineSettingPreviousVersion","BaselineSettingDays","onChangeDays","optionRenderer","instance","renderLabel","helpParams","renderBooleanField","renderField","PRDecorationBindingRenderer","repository","slug","summaryCommentEnabled","instances","isConfigured","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","REQUIRED_FIELDS_BY_ALM","fetchDefinitions","project","all","getProjectBinding","originalData","newFormData","validateForm","orignalData","catchError","additionalFields","submitProjectAlmBinding","isDataSame","reduce","result","status","throwGlobalError","almSpecificFields","almSetting","oKey","oRepository","oSlug","osummaryCommentEnabled","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","defaultCategory","pathname","categoriesWithName","concat","sortedCategories","renderLink","PageHeader","InstanceMessage","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","defer","AllCategoriesList","filtered","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","AlmKeys","getAlmDefinitions","getAlmDefinitionsNoCatch","getAlmSettings","almSettings","createGithubConfiguration","data","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createGitlabConfiguration","updateGitlabConfiguration","countBindedProjects","projects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectGithubBinding","setProjectGitlabBinding","getDefinitions","r","getValues","setSettingValue","JSON","stringify","resetSettingValue","sendTestEmail","checkSecretKey","generateSecretKey","encryptValue","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","parsed","parseInt","isNaN","getSettingValue","analysis","referenceBranch","validateSetting","overrideGeneralSetting","isInvalid"],"mappings":"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","file":"js/305.m.b0e7c744.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./side-tabs.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".side-tabs-layout{display:flex;justify-content:space-between;align-items:stretch}.modal .side-tabs-layout{padding-left:10px;background-color:#f3f3f3}.side-tabs-main{position:relative;z-index:2;flex-grow:1;padding:15px 20px;border:1px solid #e6e6e6;box-sizing:border-box;background-color:#fff;overflow:auto;height:100vh}.modal .side-tabs-main{border-top:none;border-bottom:none;border-right:none}.side-tabs-side{position:relative;z-index:3;width:160px;flex-shrink:0;padding:10px 0;box-sizing:border-box;transform:translateX(1px)}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#444;cursor:default}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".settings-layout{margin-bottom:60px}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#777}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormModalProps {\n  action: 'edit' | 'create';\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel: () => void;\n  onSubmit: () => void;\n}\n\nexport default function AlmBindingDefinitionFormModalRenderer(\n  props: AlmBindingDefinitionFormModalProps\n) {\n  const { action, children, help } = props;\n  const header = translate('settings.almintegration.form.header', action);\n\n  return (\n    <SimpleModal header={header} onClose={props.onCancel} onSubmit={props.onSubmit} size=\"medium\">\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form className=\"views-form\" onSubmit={onFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n\n          <div className=\"modal-body modal-container\">\n            <div className=\"display-flex-start\">\n              <div className=\"flex-1\">{children}</div>\n\n              {help && (\n                <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n                  {help}\n                </Alert>\n              )}\n            </div>\n          </div>\n\n          <div className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton disabled={submitting || !props.canSubmit()}>\n              {translate('settings.almintegration.form.save')}\n            </SubmitButton>\n            <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n          </div>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormRendererProps {\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  onCancel?: () => void;\n  onDelete?: () => void;\n  onEdit?: () => void;\n  onSubmit: () => void;\n  loading: boolean;\n  success: boolean;\n}\n\nexport default function AlmBindingDefinitionFormRenderer(\n  props: AlmBindingDefinitionFormRendererProps\n) {\n  const { children, help, loading, success } = props;\n\n  return (\n    <form\n      className=\"views-form\"\n      data-test=\"settings__alm-form\"\n      onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        props.onSubmit();\n      }}>\n      <div className=\"display-flex-start\">\n        <div className=\"flex-1\">\n          {children}\n\n          <div className=\"display-flex-center\">\n            {props.onEdit === undefined ? (\n              <SubmitButton disabled={loading || !props.canSubmit()}>\n                {translate('settings.almintegration.form.save')}\n              </SubmitButton>\n            ) : (\n              <Button disabled={loading} onClick={props.onEdit}>\n                {translate('edit')}\n              </Button>\n            )}\n            {props.onDelete && (\n              <Button\n                className=\"button-red spacer-left\"\n                disabled={loading}\n                onClick={props.onDelete}>\n                {translate('delete')}\n              </Button>\n            )}\n            {props.onCancel && (\n              <ResetButtonLink className=\"spacer-left\" onClick={props.onCancel}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            )}\n            {loading && <DeferredSpinner className=\"spacer-left\" />}\n            {!loading && success && (\n              <span className=\"text-success spacer-left\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {help && (\n          <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n            {help}\n          </Alert>\n        )}\n      </div>\n    </form>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual, omit } from 'lodash';\nimport * as React from 'react';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionFormModalRenderer from './AlmBindingDefinitionFormModalRenderer';\nimport AlmBindingDefinitionFormRenderer from './AlmBindingDefinitionFormRenderer';\n\nexport interface AlmBindingDefinitionFormChildrenProps<B> {\n  formData: B;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof B, value: string) => void;\n  readOnly?: boolean;\n}\n\ninterface Props<B> {\n  bindingDefinition: B;\n  children: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  hideKeyField?: boolean;\n  loading?: boolean;\n  onCancel?: () => void;\n  onDelete?: (definitionKey: string) => void;\n  onEdit?: (definitionKey: string) => void;\n  onSubmit: (data: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  readOnly?: boolean;\n  showInModal?: boolean;\n  success?: boolean;\n}\n\ninterface State<B> {\n  formData: B;\n  touched: boolean;\n}\n\nexport default class AlmBindingDefinitionForm<\n  B extends AlmBindingDefinition\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n    this.state = { formData: props.bindingDefinition, touched: false };\n  }\n\n  componentDidUpdate(prevProps: Props<B>) {\n    if (!isEqual(prevProps.bindingDefinition, this.props.bindingDefinition)) {\n      this.setState({ formData: this.props.bindingDefinition, touched: false });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({ formData: this.props.bindingDefinition, touched: false });\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      },\n      touched: true\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    const { hideKeyField, optionalFields } = this.props;\n    const { formData, touched } = this.state;\n\n    let values;\n    if (hideKeyField) {\n      values = omit(formData, 'key');\n    } else {\n      values = { ...formData };\n    }\n\n    if (optionalFields && optionalFields.length > 0) {\n      values = omit(values, optionalFields);\n    }\n\n    return touched && !Object.values(values).some(v => !v);\n  };\n\n  render() {\n    const {\n      bindingDefinition,\n      children,\n      help,\n      hideKeyField,\n      showInModal,\n      loading = false,\n      readOnly = false,\n      success = false\n    } = this.props;\n    const { formData, touched } = this.state;\n\n    const showEdit = this.props.onEdit !== undefined;\n    const showCancel = touched || !showEdit;\n    const showDelete = showEdit && this.props.onDelete !== undefined;\n\n    return showInModal ? (\n      <AlmBindingDefinitionFormModalRenderer\n        action={bindingDefinition.key ? 'edit' : 'create'}\n        canSubmit={this.canSubmit}\n        help={help}\n        onCancel={this.handleCancel}\n        onSubmit={this.handleFormSubmit}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmBindingDefinitionFormModalRenderer>\n    ) : (\n      <AlmBindingDefinitionFormRenderer\n        canSubmit={this.canSubmit}\n        help={help}\n        loading={loading}\n        onCancel={showCancel ? this.handleCancel : undefined}\n        onDelete={showDelete ? this.handleDelete : undefined}\n        onEdit={showEdit ? this.handleEdit : undefined}\n        onSubmit={this.handleFormSubmit}\n        success={success}>\n        {children({\n          formData,\n          hideKeyField,\n          onFieldChange: this.handleFieldChange,\n          readOnly\n        })}\n      </AlmBindingDefinitionFormRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ButtonIcon, DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionsTableProps {\n  additionalColumnsHeaders: Array<string>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  definitions: Array<{\n    key: string;\n    additionalColumns: Array<string>;\n  }>;\n  loading: boolean;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n}\n\nexport default function AlmBindingDefinitionsTable(props: AlmBindingDefinitionsTableProps) {\n  const { additionalColumnsHeaders, additionalTableInfo, alm, definitions, loading } = props;\n\n  return (\n    <>\n      <div className=\"spacer-top big-spacer-bottom display-flex-space-between\">\n        <h2 className=\"settings-sub-category-name\">\n          {translate('settings.almintegration.table.title')}\n        </h2>\n        <Button data-test=\"settings__alm-create\" disabled={loading} onClick={props.onCreate}>\n          {translate('settings.almintegration.table.create')}\n        </Button>\n      </div>\n\n      {additionalTableInfo}\n\n      <table className=\"data zebra fixed spacer-bottom\">\n        <thead>\n          <tr>\n            <th>{translate('settings.almintegration.table.column.name')}</th>\n            {additionalColumnsHeaders.map(h => (\n              <th key={h}>{h}</th>\n            ))}\n            <th className=\"action-small text-center\">\n              {translate('settings.almintegration.table.column.edit')}\n            </th>\n            <th className=\"action text-center\">\n              {translate('settings.almintegration.table.column.delete')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {definitions.length === 0 ? (\n            <tr data-test=\"settings__alm-empty-table\">\n              <td colSpan={3 + additionalColumnsHeaders.length}>\n                {translate('settings.almintegration.table.empty', alm)}\n              </td>\n            </tr>\n          ) : (\n            definitions.map(({ key, additionalColumns }) => (\n              <tr data-test=\"settings__alm-table-row\" key={key}>\n                <td className=\"nowrap hide-overflow\" title={key}>\n                  {key}\n                </td>\n                {additionalColumns.map(value => (\n                  <td className=\"nowrap hide-overflow\" key={value} title={value}>\n                    {value}\n                  </td>\n                ))}\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-edit\">\n                  <ButtonIcon disabled={loading} onClick={() => props.onEdit(key)}>\n                    <EditIcon />\n                  </ButtonIcon>\n                </td>\n                <td className=\"text-center\" data-test=\"settings__alm-table-row-delete\">\n                  <DeleteButton disabled={loading} onClick={() => props.onDelete(key)} />\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\n\nexport interface AlmIntegrationFeatureBoxProps {\n  active: boolean;\n  description: React.ReactNode;\n  inactiveReason?: React.ReactNode;\n  name: React.ReactNode;\n}\n\nexport default function AlmIntegrationFeatureBox(props: AlmIntegrationFeatureBoxProps) {\n  const { active, description, inactiveReason, name } = props;\n\n  return (\n    <div\n      className={classNames(\n        'boxed-group-inner display-flex-start width-30 spacer-right spacer-bottom bordered',\n        {\n          'bg-muted': !active\n        }\n      )}>\n      {active ? (\n        <CheckIcon className=\"little-spacer-top spacer-right\" fill={colors.green} />\n      ) : (\n        <ClearIcon className=\"little-spacer-top spacer-right\" fill={colors.gray60} />\n      )}\n      <div className=\"display-flex-column abs-height-100\">\n        <h4>{name}</h4>\n\n        <div className=\"spacer-top flex-1\">{description}</div>\n\n        <div className=\"spacer-top\">\n          {active ? (\n            <em className=\"text-success\">{translate('settings.almintegration.feature.enabled')}</em>\n          ) : (\n            <em className=\"text-muted\">\n              {inactiveReason || translate('settings.almintegration.feature.disabled')}\n            </em>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionForm, {\n  AlmBindingDefinitionFormChildrenProps\n} from './AlmBindingDefinitionForm';\nimport AlmBindingDefinitionsTable from './AlmBindingDefinitionsTable';\nimport AlmIntegrationFeatureBox, {\n  AlmIntegrationFeatureBoxProps\n} from './AlmIntegrationFeatureBox';\n\nexport interface AlmTabRendererProps<B> {\n  additionalColumnsHeaders: string[];\n  additionalColumnsKeys: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  alm: AlmKeys;\n  editedDefinition?: B;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default function AlmTabRenderer<B extends AlmBindingDefinition>(\n  props: AlmTabRendererProps<B>\n) {\n  const {\n    additionalColumnsHeaders,\n    additionalColumnsKeys,\n    additionalTableInfo,\n    alm,\n    defaultBinding,\n    definitions,\n    editedDefinition,\n    features = [],\n    form,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    optionalFields,\n    submitting,\n    success,\n    help = (\n      <FormattedMessage\n        defaultMessage={translate(`settings.almintegration.${alm}.info`)}\n        id={`settings.almintegration.${alm}.info`}\n        values={{\n          link: (\n            <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n              {translate('learn_more')}\n            </Link>\n          )\n        }}\n      />\n    )\n  } = props;\n\n  let definition: B | undefined;\n  let mappedDefinitions: Array<{ key: string; additionalColumns: string[] }> = [];\n  let showEdit: boolean | undefined;\n\n  if (!multipleAlmEnabled) {\n    definition = editedDefinition;\n    if (definition === undefined && definitions.length > 0) {\n      definition = definitions[0];\n    }\n    showEdit = definition && editedDefinition === undefined;\n  } else {\n    mappedDefinitions = definitions.map(({ key, ...properties }) => {\n      const additionalColumns = additionalColumnsKeys.map(k => (properties as any)[k]);\n      return {\n        key,\n        additionalColumns\n      };\n    });\n  }\n\n  return (\n    <div className=\"big-padded\">\n      {multipleAlmEnabled ? (\n        <DeferredSpinner loading={loadingAlmDefinitions}>\n          <AlmBindingDefinitionsTable\n            additionalColumnsHeaders={additionalColumnsHeaders}\n            additionalTableInfo={additionalTableInfo}\n            alm={alm}\n            definitions={mappedDefinitions}\n            loading={loadingProjectCount}\n            onCreate={props.onCreate}\n            onDelete={props.onDelete}\n            onEdit={props.onEdit}\n          />\n\n          {editedDefinition && (\n            <AlmBindingDefinitionForm\n              bindingDefinition={editedDefinition}\n              help={help}\n              onCancel={props.onCancel}\n              onSubmit={props.onSubmit}\n              optionalFields={optionalFields}\n              showInModal={true}>\n              {form}\n            </AlmBindingDefinitionForm>\n          )}\n        </DeferredSpinner>\n      ) : (\n        <AlmBindingDefinitionForm\n          bindingDefinition={definition || defaultBinding}\n          help={help}\n          hideKeyField={true}\n          loading={loadingAlmDefinitions || loadingProjectCount || submitting}\n          onCancel={props.onCancel}\n          onDelete={definition ? props.onDelete : undefined}\n          onEdit={showEdit ? props.onEdit : undefined}\n          onSubmit={props.onSubmit}\n          optionalFields={optionalFields}\n          readOnly={showEdit}\n          success={success}>\n          {form}\n        </AlmBindingDefinitionForm>\n      )}\n\n      {features.length > 0 && (\n        <div className=\"big-spacer-top big-padded-top bordered-top\">\n          <h3 className=\"big-spacer-bottom\">{translate('settings.almintegration.features')}</h3>\n\n          <div className=\"display-flex-wrap\">\n            {features.map((feature, i) => (\n              <AlmIntegrationFeatureBox key={i} {...feature} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { AlmBindingDefinition, AlmKeys } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormChildrenProps } from './AlmBindingDefinitionForm';\nimport { AlmIntegrationFeatureBoxProps } from './AlmIntegrationFeatureBox';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props<B> {\n  alm: AlmKeys;\n  additionalColumnsHeaders?: string[];\n  additionalColumnsKeys?: Array<keyof B>;\n  additionalTableInfo?: React.ReactNode;\n  createConfiguration: (data: B) => Promise<void>;\n  defaultBinding: B;\n  definitions: B[];\n  features?: AlmIntegrationFeatureBoxProps[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n  optionalFields?: Array<keyof B>;\n  updateConfiguration: (data: B & { newKey?: string }) => Promise<void>;\n}\n\ninterface State<B> {\n  editedDefinition?: B;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default class AlmTab<B extends AlmBindingDefinition> extends React.PureComponent<\n  Props<B>,\n  State<B>\n> {\n  mounted = false;\n  state: State<B> = { submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined,\n      success: false\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: this.props.defaultBinding, success: false });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition, success: false });\n  };\n\n  handleSubmit = (config: B, originalKey: string) => {\n    const call = originalKey\n      ? this.props.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : // If there's no support for multi-ALM binding, the key will be an empty string.\n        // Set a default.\n        this.props.createConfiguration(config.key ? config : { ...config, key: this.props.alm });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ editedDefinition: undefined, submitting: false, success: true });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      additionalColumnsHeaders = [],\n      additionalColumnsKeys = [],\n      additionalTableInfo,\n      alm,\n      defaultBinding,\n      definitions,\n      features,\n      form,\n      help,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled,\n      optionalFields\n    } = this.props;\n    const { editedDefinition, submitting, success } = this.state;\n\n    return (\n      <AlmTabRenderer\n        additionalColumnsHeaders={additionalColumnsHeaders}\n        additionalColumnsKeys={additionalColumnsKeys}\n        additionalTableInfo={additionalTableInfo}\n        alm={alm}\n        defaultBinding={defaultBinding}\n        definitions={definitions}\n        editedDefinition={editedDefinition}\n        features={features}\n        form={form}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n        optionalFields={optionalFields}\n        submitting={submitting}\n        success={success}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionFormFieldProps<B extends AlmBindingDefinition> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  optional?: boolean;\n  propKey: keyof B;\n  readOnly?: boolean;\n  value: string;\n}\n\nexport function AlmBindingDefinitionFormField<B extends AlmBindingDefinition>(\n  props: AlmBindingDefinitionFormFieldProps<B>\n) {\n  const {\n    autoFocus,\n    help,\n    id,\n    isTextArea,\n    maxLength,\n    onFieldChange,\n    optional,\n    propKey,\n    readOnly = false,\n    value\n  } = props;\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.almintegration.form', id)}\n        {!optional && <em className=\"mandatory\">*</em>}\n        {help && <HelpTooltip className=\"spacer-left\" overlay={help} placement=\"right\" />}\n      </label>\n      {isTextArea ? (\n        <textarea\n          className=\"settings-large-input\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          required={!optional}\n          rows={5}\n          value={value}\n        />\n      ) : (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          disabled={readOnly}\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface AzureFormProps {\n  formData: AzureBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function AzureForm(props: AzureFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.azure.help')}\n          id=\"name.azure\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, AzureBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport AzureForm from './AzureForm';\n\nexport interface AzureTabProps {\n  definitions: AzureBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function AzureTab(props: AzureTabProps) {\n  const { multipleAlmEnabled, definitions, loadingAlmDefinitions, loadingProjectCount } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.Azure}\n        createConfiguration={createAzureConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          }\n        ]}\n        form={childProps => <AzureForm {...childProps} />}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateAzureConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface BitbucketFormProps {\n  formData: BitbucketBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof BitbucketBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function BitbucketForm(props: BitbucketFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.bitbucket.help')}\n          id=\"name.bitbucket\"\n          maxLength={100}\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.form.url.bitbucket.help')}\n            id=\"settings.almintegration.form.url.bitbucket.help\"\n            values={{ example: 'https://bitbucket-server.your-company.com' }}\n          />\n        }\n        id=\"url.bitbucket\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  createBitbucketConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/alm-settings';\nimport { AlmKeys, BitbucketBindingDefinition } from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport BitbucketForm from './BitbucketForm';\n\nexport interface BitbucketTabProps {\n  definitions: BitbucketBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function BitbucketTab(props: BitbucketTabProps) {\n  const { multipleAlmEnabled, definitions, loadingAlmDefinitions, loadingProjectCount } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        additionalColumnsHeaders={[translate('settings.almintegration.table.column.bitbucket.url')]}\n        additionalColumnsKeys={['url']}\n        additionalTableInfo={\n          <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n            <FormattedMessage\n              defaultMessage={translate(\n                'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances'\n              )}\n              id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_bbs_instances\"\n              values={{\n                feature: (\n                  <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                )\n              }}\n            />\n          </Alert>\n        }\n        alm={AlmKeys.Bitbucket}\n        createConfiguration={createBitbucketConfiguration}\n        defaultBinding={{ key: '', url: '', personalAccessToken: '' }}\n        definitions={definitions}\n        features={[\n          {\n            name: translate('settings.almintegration.feature.pr_decoration.title'),\n            active: definitions.length > 0,\n            description: translate('settings.almintegration.feature.pr_decoration.description'),\n            inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n          },\n          {\n            name: translate('settings.almintegration.feature.alm_repo_import.title'),\n            active: definitions.length === 1,\n            description: translate('settings.almintegration.feature.alm_repo_import.description'),\n            inactiveReason: translateWithParameters(\n              'settings.almintegration.feature.alm_repo_import.bitbucket.wrong_count_x',\n              definitions.length\n            )\n          }\n        ]}\n        form={childProps => <BitbucketForm {...childProps} />}\n        help={\n          <>\n            <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n            <p className=\"big-spacer-top\">\n              {translate('settings.almintegration.bitbucket.help_1')}\n            </p>\n\n            <ul className=\"big-spacer-top list-styled\">\n              <li>{translate('settings.almintegration.bitbucket.help_2')}</li>\n              <li>{translate('settings.almintegration.bitbucket.help_3')}</li>\n            </ul>\n\n            <p className=\"big-spacer-top big-spacer-bottom\">\n              <Link target=\"_blank\" to=\"/documentation/analysis/pr-decoration/\">\n                {translate('learn_more')}\n              </Link>\n            </p>\n          </>\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateBitbucketConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: T.Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<T.SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in T.SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited,\n  sanitizeTranslation\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: T.Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(() => this.safeSetState({ success: false }), 3000);\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              dangerouslySetInnerHTML={{ __html: sanitizeTranslation(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: T.Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success: boolean;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false,\n      success: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: false, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: true, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {this.state.success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters(\n                  'email_configuration.test.email_was_sent_to_x',\n                  this.state.recipient\n                )}\n              </Alert>\n            </div>\n          )}\n\n          {this.state.error != null && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{this.state.error}</Alert>\n            </div>\n          )}\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={this.state.recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={this.state.subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <em className=\"mandatory\">*</em>\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={this.state.loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={this.state.message}\n            />\n          </div>\n\n          <SubmitButton disabled={this.state.loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {this.state.loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { getSubCategoryDescription, getSubCategoryName, sanitizeTranslation } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<T.Setting & { definition: T.SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                dangerouslySetInnerHTML={{ __html: sanitizeTranslation(subCategory.description) }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GithubFormProps {\n  formData: GithubBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GithubForm(props: GithubFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.github.help')}\n          id=\"name.github\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        readOnly={readOnly}\n        value={formData.appId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"clientId\"\n        readOnly={readOnly}\n        value={formData.clientId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_secret\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"clientSecret\"\n        readOnly={readOnly}\n        value={formData.clientSecret}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"privateKey\"\n        readOnly={readOnly}\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport WarningIcon from 'sonar-ui-common/components/icons/WarningIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GithubForm from './GithubForm';\n\nexport interface GithubTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GithubBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GithubTab(props: GithubTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.github.url'),\n              translate('settings.almintegration.table.column.app_id')\n            ]}\n            additionalColumnsKeys={['url', 'appId']}\n            additionalTableInfo={\n              <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_github_instances'\n                  )}\n                  id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_github_instances\"\n                  values={{\n                    feature: (\n                      <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                    )\n                  }}\n                />\n              </Alert>\n            }\n            alm={AlmKeys.GitHub}\n            createConfiguration={createGithubConfiguration}\n            defaultBinding={{\n              key: '',\n              appId: '',\n              clientId: '',\n              clientSecret: '',\n              url: '',\n              privateKey: ''\n            }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.pr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.pr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              },\n              {\n                name: translate('settings.almintegration.feature.alm_repo_import.title'),\n                active:\n                  definitions.length === 1 &&\n                  !!definitions[0].clientId &&\n                  !!definitions[0].clientSecret,\n                description: translate(\n                  'settings.almintegration.feature.alm_repo_import.description'\n                ),\n                inactiveReason:\n                  definitions.length === 1 ? (\n                    <>\n                      <WarningIcon className=\"little-spacer-right\" />\n                      <FormattedMessage\n                        id=\"settings.almintegration.feature.alm_repo_import.github.requires_fields\"\n                        defaultMessage={translate(\n                          'settings.almintegration.feature.alm_repo_import.github.requires_fields'\n                        )}\n                        values={{\n                          clientId: <strong>clientId</strong>,\n                          clientSecret: <strong>clientSecret</strong>\n                        }}\n                      />\n                    </>\n                  ) : (\n                    translateWithParameters(\n                      'settings.almintegration.feature.alm_repo_import.github.wrong_count_x',\n                      definitions.length\n                    )\n                  )\n              }\n            ]}\n            form={childProps => <GithubForm {...childProps} />}\n            loadingAlmDefinitions={loadingAlmDefinitions}\n            loadingProjectCount={loadingProjectCount}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            updateConfiguration={updateGithubConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitHub}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GitlabFormProps {\n  formData: GitlabBindingDefinition;\n  hideKeyField?: boolean;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n  readOnly?: boolean;\n}\n\nexport default function GitlabForm(props: GitlabFormProps) {\n  const { formData, hideKeyField, onFieldChange, readOnly } = props;\n\n  return (\n    <>\n      {!hideKeyField && (\n        <AlmBindingDefinitionFormField\n          autoFocus={true}\n          help={translate('settings.almintegration.form.name.gitlab.help')}\n          id=\"name.gitlab\"\n          onFieldChange={onFieldChange}\n          propKey=\"key\"\n          readOnly={readOnly}\n          value={formData.key}\n        />\n      )}\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.gitlab.help')}\n            <br />\n            <em>https://gitlab.com/api/v4</em>\n          </>\n        }\n        id=\"url.gitlab\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        readOnly={readOnly}\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        propKey=\"personalAccessToken\"\n        readOnly={readOnly}\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/alm-settings';\nimport { AlmKeys, GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GitlabForm from './GitlabForm';\n\nexport interface GitlabTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GitlabBindingDefinition[];\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GitlabTab(props: GitlabTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  const importFeatureEnabled = Boolean(definitions.length === 1 && definitions[0].url);\n\n  return (\n    <div className=\"bordered\">\n      {branchesEnabled && (\n        <>\n          <AlmTab\n            additionalColumnsHeaders={[\n              translate('settings.almintegration.table.column.gitlab.url')\n            ]}\n            additionalColumnsKeys={['url']}\n            additionalTableInfo={\n              <Alert className=\"big-spacer-bottom width-50\" variant=\"info\">\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'settings.almintegration.feature.alm_repo_import.disabled_if_multiple_gitlab_instances'\n                  )}\n                  id=\"settings.almintegration.feature.alm_repo_import.disabled_if_multiple_gitlab_instances\"\n                  values={{\n                    feature: (\n                      <em>{translate('settings.almintegration.feature.alm_repo_import.title')}</em>\n                    )\n                  }}\n                />\n              </Alert>\n            }\n            alm={AlmKeys.GitLab}\n            createConfiguration={createGitlabConfiguration}\n            defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n            definitions={definitions}\n            features={[\n              {\n                name: translate('settings.almintegration.feature.mr_decoration.title'),\n                active: definitions.length > 0,\n                description: translate('settings.almintegration.feature.mr_decoration.description'),\n                inactiveReason: translate('settings.almintegration.feature.need_at_least_1_binding')\n              },\n              {\n                name: translate('settings.almintegration.feature.alm_repo_import.title'),\n                active: importFeatureEnabled,\n                description: translate(\n                  'settings.almintegration.feature.alm_repo_import.description'\n                ),\n                inactiveReason:\n                  definitions.length === 1\n                    ? translate(\n                        'settings.almintegration.feature.alm_repo_import.gitlab.requires_fields'\n                      )\n                    : translateWithParameters(\n                        'settings.almintegration.feature.alm_repo_import.gitlab.wrong_count_x',\n                        definitions.length\n                      )\n              }\n            ]}\n            form={childProps => <GitlabForm {...childProps} />}\n            loadingAlmDefinitions={loadingAlmDefinitions}\n            loadingProjectCount={loadingProjectCount}\n            multipleAlmEnabled={multipleAlmEnabled}\n            onDelete={props.onDelete}\n            onUpdateDefinitions={props.onUpdateDefinitions}\n            updateConfiguration={updateGitlabConfiguration}\n          />\n\n          <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n        </>\n      )}\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitLab}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: AlmKeys) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    )\n  },\n  {\n    key: AlmKeys.Bitbucket,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps Server\n      </>\n    ),\n    requiresBranchesEnabled: true\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    )\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    component,\n    definitionKeyForDeletion,\n    definitions,\n    currentAlm,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={tabs.filter(tab => !(tab.requiresBranchesEnabled && !branchesEnabled))}\n      />\n\n      {currentAlm === AlmKeys.Azure && (\n        <AzureTab\n          definitions={definitions.azure}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.Bitbucket && (\n        <BitbucketTab\n          definitions={definitions.bitbucket}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitHub && (\n        <GithubTab\n          branchesEnabled={branchesEnabled}\n          component={component}\n          definitions={definitions.github}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitLab && (\n        <GitlabTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.gitlab}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { AlmKeys, AlmSettingsBindingDefinitions } from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n  component?: T.Component;\n}\n\ninterface State {\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    currentAlm: AlmKeys.GitHub,\n    definitions: {\n      [AlmKeys.Azure]: [],\n      [AlmKeys.Bitbucket]: [],\n      [AlmKeys.GitHub]: [],\n      [AlmKeys.GitLab]: []\n    },\n    loadingAlmDefinitions: true,\n    loadingProjectCount: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchPullRequestDecorationSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    const {\n      appState: { branchesEnabled }\n    } = this.props;\n\n    if (!branchesEnabled) {\n      return Promise.resolve();\n    }\n\n    this.setState({ loadingAlmDefinitions: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loadingAlmDefinitions: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingAlmDefinitions: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: AlmKeys) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loadingProjectCount: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loadingProjectCount: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingProjectCount: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled },\n      component\n    } = this.props;\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        component={component}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default withAppState(AlmIntegration);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nconst CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  'javascript / typescript': LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n\nexport default CATEGORY_OVERRIDES;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport InputForBoolean from '../inputs/InputForBoolean';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  saving: boolean;\n  success: boolean;\n}\n\ninterface LabelProps {\n  help?: boolean;\n  helpParams?: T.Dict<string | JSX.Element>;\n  id: string;\n  optional?: boolean;\n}\n\ninterface CommonFieldProps extends LabelProps {\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  propKey: keyof ProjectAlmBindingResponse;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nfunction renderLabel(props: LabelProps) {\n  const { help, helpParams, optional, id } = props;\n  return (\n    <label className=\"display-flex-center\" htmlFor={id}>\n      {translate('settings.pr_decoration.binding.form', id)}\n      {!optional && <em className=\"mandatory\">*</em>}\n      {help && (\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={\n            <FormattedMessage\n              defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n              id={`settings.pr_decoration.binding.form.${id}.help`}\n              values={helpParams}\n            />\n          }\n          placement=\"right\"\n        />\n      )}\n    </label>\n  );\n}\n\nfunction renderBooleanField(\n  props: Omit<CommonFieldProps, 'optional'> & {\n    value: boolean;\n  }\n) {\n  const { id, value, onFieldChange, propKey } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel({ ...props, optional: true })}\n      <InputForBoolean\n        isDefault={true}\n        name={id}\n        onChange={v => onFieldChange(propKey, v)}\n        value={value}\n      />\n    </div>\n  );\n}\n\nfunction renderField(\n  props: CommonFieldProps & {\n    value: string;\n  }\n) {\n  const { id, propKey, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel(props)}\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData: { key, repository, slug, summaryCommentEnabled },\n    instances,\n    isChanged,\n    isConfigured,\n    isValid,\n    loading,\n    saving,\n    success\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = key && instances.find(i => i.key === key);\n  const alm = selected && selected.alm;\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <em className=\"mandatory spacer-right\">*</em>\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm === AlmKeys.Bitbucket && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/'}\n                    <strong>{'{KEY}'}</strong>\n                    {'/repos/{SLUG}/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderField({\n              help: true,\n              helpParams: {\n                example: (\n                  <>\n                    {'.../projects/{KEY}/repos/'}\n                    <strong>{'{SLUG}'}</strong>\n                    {'/browse'}\n                  </>\n                )\n              },\n              id: 'bitbucket.slug',\n              onFieldChange: props.onFieldChange,\n              propKey: 'slug',\n              value: slug || ''\n            })}\n          </>\n        )}\n\n        {alm === AlmKeys.GitHub && (\n          <>\n            {renderField({\n              help: true,\n              helpParams: { example: 'SonarSource/sonarqube' },\n              id: 'github.repository',\n              onFieldChange: props.onFieldChange,\n              propKey: 'repository',\n              value: repository || ''\n            })}\n            {renderBooleanField({\n              help: true,\n              id: 'github.summary_comment_setting',\n              onFieldChange: props.onFieldChange,\n              propKey: 'summaryCommentEnabled',\n              value: summaryCommentEnabled === undefined ? true : summaryCommentEnabled\n            })}\n          </>\n        )}\n\n        {alm === AlmKeys.GitLab &&\n          renderField({\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {isConfigured && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ntype FormData = T.Omit<ProjectAlmBindingResponse, 'alm'>;\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: FormData;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  orignalData?: FormData;\n  saving: boolean;\n  success: boolean;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<FormData, 'key'>>;\n} = {\n  [AlmKeys.Azure]: [],\n  [AlmKeys.Bitbucket]: ['repository', 'slug'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: ['repository']\n};\n\nexport default class PRDecorationBinding extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '' },\n    instances: [],\n    isChanged: false,\n    isConfigured: false,\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isChanged: false,\n              isConfigured: !!originalData,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              orignalData: newFormData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBindingResponse | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === 404) {\n        return undefined;\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: ''\n            },\n            isChanged: false,\n            isConfigured: false,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<FormData, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n\n    switch (alm) {\n      case AlmKeys.Azure:\n        return setProjectAzureBinding({\n          almSetting,\n          project\n        });\n      case AlmKeys.Bitbucket: {\n        if (!almSpecificFields) {\n          return Promise.reject();\n        }\n        const { repository = '', slug = '' } = almSpecificFields;\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug\n        });\n      }\n      case AlmKeys.GitHub: {\n        const repository = almSpecificFields?.repository;\n        // By default it must remain true.\n        const summaryCommentEnabled =\n          almSpecificFields?.summaryCommentEnabled === undefined\n            ? true\n            : almSpecificFields?.summaryCommentEnabled;\n        if (!repository) {\n          return Promise.reject();\n        }\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository,\n          summaryCommentEnabled\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        const repository = almSpecificFields && almSpecificFields.repository;\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .then(this.fetchDefinitions)\n      .catch(this.catchError);\n  };\n\n  isDataSame(\n    { key, repository = '', slug = '', summaryCommentEnabled = false }: FormData,\n    {\n      key: oKey = '',\n      repository: oRepository = '',\n      slug: oSlug = '',\n      summaryCommentEnabled: osummaryCommentEnabled = false\n    }: FormData\n  ) {\n    return (\n      key === oKey &&\n      repository === oRepository &&\n      slug === oSlug &&\n      summaryCommentEnabled === osummaryCommentEnabled\n    );\n  }\n\n  handleFieldChange = (id: keyof ProjectAlmBindingResponse, value: string | boolean) => {\n    this.setState(({ formData, orignalData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        isChanged: !this.isDataSame(newFormData, orignalData || { key: '' }),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        {...this.state}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\ninterface Category {\n  key: string;\n  name: string;\n}\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport class CategoriesList extends React.PureComponent<CategoriesListProps> {\n  renderLink(category: Category) {\n    const { component, defaultCategory, selectedCategory } = this.props;\n    const pathname = this.props.component ? '/project/settings' : '/settings';\n    const query = {\n      category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n      id: component && component.key\n    };\n    return (\n      <IndexLink\n        className={classNames({\n          active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n        })}\n        title={category.name}\n        to={{ pathname, query }}>\n        {category.name}\n      </IndexLink>\n    );\n  }\n\n  render() {\n    const { branchesEnabled } = this.props;\n\n    const categoriesWithName = this.props.categories\n      .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n      .map(key => ({\n        key,\n        name: getCategoryName(key)\n      }))\n      .concat(\n        ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n          .filter(c =>\n            this.props.component\n              ? // Project settings\n                c.availableForProject\n              : // Global settings\n                c.availableGlobally\n          )\n          .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n      );\n    const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n    return (\n      <ul className=\"side-tabs-menu\">\n        {sortedCategories.map(category => (\n          <li key={category.key}>{this.renderLink(category)}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\ninterface Props {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: Props) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{title}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport '../side-tabs.css';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div className=\"page page-limited\" id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n\n        <PageHeader component={this.props.component} />\n\n        <div className=\"side-tabs-layout settings-layout\">\n          <div className=\"side-tabs-side\">\n            <AllCategoriesList\n              component={this.props.component}\n              defaultCategory={this.props.defaultCategory}\n              selectedCategory={selectedCategory}\n            />\n          </div>\n          <div className=\"side-tabs-main\">\n            {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n              foundAdditionalCategory.renderComponent({\n                component: this.props.component,\n                selectedCategory: originalCategory\n              })\n            ) : (\n              <CategoryDefinitionsList\n                category={selectedCategory}\n                component={this.props.component}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum AlmKeys {\n  Azure = 'azure',\n  Bitbucket = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n\nexport interface AlmBindingDefinition {\n  key: string;\n}\n\nexport interface AzureBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n}\n\nexport interface BitbucketBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url: string;\n}\n\nexport interface GithubBindingDefinition extends AlmBindingDefinition {\n  appId: string;\n  clientId: string;\n  clientSecret: string;\n  privateKey: string;\n  url: string;\n}\n\nexport interface GitlabBindingDefinition extends AlmBindingDefinition {\n  personalAccessToken: string;\n  url?: string;\n}\n\nexport interface ProjectAlmBindingResponse {\n  alm: AlmKeys;\n  key: string;\n  repository?: string;\n  slug?: string;\n  summaryCommentEnabled?: boolean;\n}\n\nexport interface ProjectBitbucketBindingResponse extends ProjectAlmBindingResponse {\n  alm: AlmKeys.Bitbucket;\n  repository: string;\n  slug: string;\n}\n\nexport interface ProjectGitHubBindingResponse extends ProjectAlmBindingResponse {\n  alm: AlmKeys.GitHub;\n  repository: string;\n}\n\nexport interface ProjectGitLabBindingResponse extends ProjectAlmBindingResponse {\n  alm: AlmKeys.GitLab;\n  repository: string;\n  url: string;\n}\n\nexport interface ProjectAlmBindingParams {\n  almSetting: string;\n  project: string;\n}\n\nexport interface AzureProjectAlmBindingParams extends ProjectAlmBindingParams {}\n\nexport interface BitbucketProjectAlmBindingParams extends ProjectAlmBindingParams {\n  repository: string;\n  slug: string;\n}\n\nexport interface GithubProjectAlmBindingParams extends ProjectAlmBindingParams {\n  repository: string;\n  summaryCommentEnabled: boolean;\n}\n\nexport interface GitlabProjectAlmBindingParams extends ProjectAlmBindingParams {\n  repository?: string;\n}\n\nexport interface AlmSettingsInstance {\n  alm: AlmKeys;\n  key: string;\n  url?: string;\n}\n\nexport interface AlmSettingsBindingDefinitions {\n  [AlmKeys.Azure]: AzureBindingDefinition[];\n  [AlmKeys.Bitbucket]: BitbucketBindingDefinition[];\n  [AlmKeys.GitHub]: GithubBindingDefinition[];\n  [AlmKeys.GitLab]: GitlabBindingDefinition[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketBindingDefinition,\n  BitbucketProjectAlmBindingParams,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getAlmDefinitionsNoCatch().catch(throwGlobalError);\n}\n\nexport function getAlmDefinitionsNoCatch(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project })\n    .then(({ almSettings }) => almSettings)\n    .catch(throwGlobalError);\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\n\nexport function getDefinitions(component?: string): Promise<T.SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<T.SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: T.SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  referenceBranch,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  referenceBranch?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'REFERENCE_BRANCH':\n      return referenceBranch;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  overrideGeneralSetting?: boolean;\n  referenceBranch?: string;\n  selected?: T.NewCodePeriodSettingType;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    overrideGeneralSetting,\n    referenceBranch = '',\n    selected\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue) ||\n      (selected === 'REFERENCE_BRANCH' && referenceBranch !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days)) ||\n    (selected === 'REFERENCE_BRANCH' && referenceBranch.length > 0);\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <ValidationInput\n            error={undefined}\n            id=\"baseline_number_of_days\"\n            isInvalid={isChanged && !isValid}\n            isValid={isChanged && isValid}\n            label={translate('baseline.specify_days')}\n            required={true}>\n            <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n          </ValidationInput>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n"],"sourceRoot":""}