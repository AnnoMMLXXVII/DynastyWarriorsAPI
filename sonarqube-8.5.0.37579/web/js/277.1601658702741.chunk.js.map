{"version":3,"sources":["webpack:///./src/main/js/api/branches.ts","webpack:///./src/main/js/app/components/ComponentContext.tsx","webpack:///./src/main/js/components/common/CodeSnippet.css?463c","webpack:///./src/main/js/components/common/CodeSnippet.css","webpack:///./src/main/js/components/common/PrivacyBadgeContainer.tsx","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/api/favorites.ts","webpack:///./src/main/js/components/controls/Favorite.tsx","webpack:///./src/main/js/components/common/BranchStatus.tsx","webpack:///./src/main/js/api/web-api.ts","webpack:///./src/main/js/apps/account/notifications/NotificationsList.tsx","webpack:///./src/main/js/api/projectLinks.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLink.tsx","webpack:///./src/main/js/api/notifications.ts","webpack:///./src/main/js/components/hoc/withNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css?8738","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.css","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css?82fb","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.css","webpack:///./src/main/js/app/components/nav/component/Menu.css?14a8","webpack:///./src/main/js/app/components/nav/component/Menu.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css?f7cf","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css?4563","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/styles.css","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css?e00c","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.css","webpack:///./src/main/js/app/components/ComponentContainerNotFound.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavLicenseNotif.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavBgTaskNotif.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLike.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItem.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/MenuItemList.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/BranchLikeNavigation.tsx","webpack:///./src/main/js/app/components/nav/component/branch-like/CurrentBranchLikeMergeInformation.tsx","webpack:///./src/main/js/app/components/nav/component/Breadcrumb.tsx","webpack:///./src/main/js/app/components/nav/component/Header.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNavWarnings.tsx","webpack:///./src/main/js/app/components/nav/component/HeaderMeta.tsx","webpack:///./src/main/js/app/components/nav/component/Menu.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/utils.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeButton.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/BadgeParams.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/badges/ProjectBadges.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/InfoDrawerPage.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/notifications/ProjectNotifications.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationPages.ts","webpack:///./src/main/js/app/components/nav/component/projectInformation/DrawerLink.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaKey.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaLinks.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityGate.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaQualityProfiles.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaSize.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTagsSelector.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/meta/MetaTags.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformationRenderer.tsx","webpack:///./src/main/js/app/components/nav/component/projectInformation/ProjectInformation.tsx","webpack:///./src/main/js/app/components/nav/component/ComponentNav.tsx","webpack:///./src/main/js/app/components/ComponentContainer.tsx","webpack:///./src/main/js/components/common/CodeSnippet.tsx","webpack:///./src/main/js/components/tags/TagsList.css?d861","webpack:///./src/main/js/components/common/MultiSelectOption.tsx","webpack:///./src/main/js/components/common/MultiSelect.tsx","webpack:///./src/main/js/components/tags/TagsList.tsx","webpack:///./src/main/js/components/tags/TagsList.css","webpack:///./src/main/js/api/nav.ts","webpack:///./src/main/js/components/tags/TagsSelector.tsx","webpack:///./src/main/js/apps/background-tasks/constants.ts","webpack:///./src/main/js/components/icons/BranchLikeIcon.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/components/controls/HomePageSelect.tsx","webpack:///./src/main/js/components/shared/DrilldownLink.tsx","webpack:///./src/main/js/components/common/DocumentationTooltip.tsx"],"names":["getBranches","project","then","r","getPullRequests","deleteBranch","data","catch","deletePullRequest","renameBranch","name","excludeBranchFromPurge","projectKey","branchName","excluded","branch","value","ComponentContext","branchLike","undefined","component","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","PrivacyBadgeContainer","className","qualifier","visibility","overlay","url","test","addFavorite","removeFavorite","props","mounted","toggleFavorite","newFavorite","state","favorite","setState","handleFavorite","componentDidMount","this","componentDidUpdate","_prevProps","prevState","componentWillUnmount","render","status","level","small","fetchWebApi","showInternal","include_internals","fetchResponseExample","domain","action","controller","isEnabled","type","channel","notifications","find","notification","handleCheck","checked","onAdd","onRemove","getDispatcherLabel","dispatcher","globalMessageKey","projectMessageKey","channels","checkboxId","types","map","key","id","onCheck","getProjectLinks","deleteLink","linkId","createLink","expanded","handleClick","event","preventDefault","handleCollapse","handleSelect","currentTarget","select","iconOnly","link","linkTitle","href","onClick","rel","target","title","readOnly","getNotifications","throwGlobalError","addNotification","removeNotification","withNotifications","WrappedComponent","globalTypes","loading","perProjectTypes","fetchNotifications","response","addNotificationToState","added","areNotificationsEqual","removeNotificationFromState","removed","filter","a","b","displayName","ComponentContainerNotFound","defaultTitle","defer","to","fetchIsValidLicense","isValidLicense","currentTask","errorType","Alert","display","variant","componentQualifier","Project","errorMessage","appState","canAdmin","withAppState","renderMessage","messageKey","canSeeBackgroundTasks","configuration","showBackgroundTasks","defaultMessage","values","currentTaskOnSameBranch","isInProgress","isPending","ALL","Failed","pullRequest","pullRequestTitle","message","branchesEnabled","currentBranchLike","hasManyBranches","isApplication","Application","canAdminComponent","showSettings","BranchLikeIcon","plusIcon","fill","blue","size","DocumentationTooltip","links","label","additionalIcon","indent","setSelectedNode","onSelect","selected","active","ref","BranchStatus","listNode","selectedNode","parent","smooth","branchLikeTree","hasResults","selectedBranchLike","renderItem","node","mainBranchTree","branchTree","tree","pullRequests","length","pr","parentlessPullRequests","orphanPullRequests","processBranchLikes","branchLikes","branchLikesToDisplay","reduce","prev","t","branchLikesToDisplayTree","openHighlightedBranchLike","handleOnSelect","highlightSiblingBranchlike","indexDelta","selectBranchLikeIndex","findIndex","newIndex","handleKeyDown","keyCode","Enter","UpArrow","DownArrow","handleSearchChange","query","q","toLowerCase","filteredBranchLikes","bl","includes","onClose","router","some","showManageLink","Dropdown","noPadding","autoFocus","onChange","onKeyDown","placeholder","pathname","withRouter","isMenuOpen","setIsMenuOpen","isMenuEnabled","currentBranchLikeElement","Boolean","dropdown","onRequestClose","open","Breadcrumb","breadcrumbs","lastBreadcrumbElement","isNoMainBranch","breadcrumbElement","isFirst","isNotLast","currentUser","Favorite","isFavorite","AnalysisWarningsModal","lazyLoadComponent","modal","blur","handleCloseModal","warnings","warningsCount","componentKey","onWarningDismiss","isABranch","currentPage","isMain","Portfolio","SubPortfolio","getCurrentPage","displayVersion","version","analysisDate","date","HomePageSelect","SETTINGS_URLS","MenuLink","hasAnalysis","isProject","isDeveloper","Developper","isPortfolio","getConfiguration","getQuery","renderDashboardLink","activeClassName","renderCodeLink","renderActivityLink","renderIssuesLink","resolved","renderComponentMeasuresLink","renderSecurityHotspotsLink","renderSecurityReports","extensions","extension","startsWith","renderAdministration","isSettingsActive","window","location","indexOf","adminLinks","renderAdministrationLinks","tagName","onToggleClick","renderSettingsLink","renderBranchesLink","renderBaselineLink","renderProfilesLink","renderQualityGateLink","renderCustomMeasuresLink","renderLinksLink","renderPermissionsLink","renderBackgroundTasksLink","renderUpdateKeyLink","renderWebhooksLink","renderAdminExtensions","renderDeletionLink","renderProjectInformationButton","e","onToggleProjectInfo","role","tabIndex","showQualityProfiles","showQualityGates","showManualMeasures","showLinks","showPermissions","showUpdateKey","renderExtension","isAdmin","baseQuery","renderExtensions","withoutSecurityExtension","children","displayed","top","style","onKeydown","onClickOutside","BadgeType","getBadgeSnippet","getBadgeUrl","format","metric","projectUrl","marketing","measure","qualityGate","mdImage","color","width","alt","src","badgeMetrics","getColorOptions","getFormatOptions","getMetricOptions","metrics","handleColorChange","updateOptions","handleFormatChange","handleMetricChange","renderBadgeType","htmlFor","clearable","searchable","menuStyle","maxHeight","fetchBadgeMetrics","webservices","d","path","ws","actions","w","param","params","p","possibleValues","selectedType","badgeOptions","alert_status","handleSelectBadge","handleUpdateOptions","fullBadgeOptions","CodeSnippet","isOneLine","snippet","InfoDrawerPage","onPageChange","ProjectInformationPages","projectNotifications","n","NotificationsList","MetaKey","copyValue","loadLinks","prevProps","orderedLinks","MetaLink","MetaQualityGate","isDefault","deprecatedByKey","loadDeprecatedRules","existingProfiles","profiles","requests","profile","loadDeprecatedRulesForProfile","Promise","all","responses","forEach","count","profileKey","activation","organization","ps","qprofile","statuses","getDeprecatedRulesCount","renderProfile","languageFromStore","languages","language","languageName","inner","deleted","tooltip","headerClassName","MetaSize","measures","isApp","ncloc","projects","DrilldownLink","Number","searchResult","onSearch","Math","min","selectedTags","tags","tag","setProjectTags","onUnselect","availableTags","TagsSelector","listSize","canUpdateTags","getPopupPos","eltPos","containerPos","height","right","setTags","application","join","handleSetProjectTags","onComponentChange","card","closeOnClick","closeOnClickOutside","overlayPlacement","BottomLeft","innerRef","tagsList","stopPropagation","TagsList","allowUpdate","canConfigureNotifications","canUseBadges","description","qualityProfiles","badges","page","main","setPage","loadMeasures","metricKeys","fetchMetrics","mapDispatchToProps","ComponentNav","notifComponent","contextNavHeightRaw","globalNavHeightRaw","displayProjectInfo","setDisplayProjectInfo","RecentHistory","add","contextNavHeight","notif","addQualifier","fetchBranches","breadcrumb","resolve","branches","getCurrentBranchLike","registerBranchStatuses","fetchStatus","current","queue","tasksInProgress","newCurrentTask","getCurrentTask","pendingTasks","getPendingTasks","newTasksInProgress","task","currentTaskChanged","progressChanged","clearTimeout","watchStatusTimer","setTimeout","fetchComponent","fetchWarnings","isSameBranch","registerBranchStatus","qualityGateStatus","handleComponentChange","changes","handleBranchesChange","handleWarningDismiss","nav","componentWithQualifier","match","replace","requireAuthorization","needIssueSync","PageUnavailableDueToIndexation","Provider","onBranchesChange","fetchOrganization","finalSnippet","noCopy","snippetRef","Array","isArray","line","MultiSelectOption","custom","disabled","element","onHover","renderLabel","onFocus","onMouseOver","onSelectChange","handleSelectChange","item","onSelectItem","onUnselectItem","onSearchQuery","validateSearchInput","handleElementHover","activeIdx","getAllElements","handleKeyboard","evt","selectNextElement","selectPreviousElement","toggleSelect","stopLoading","isNewElement","elem","selectedElements","elements","updateSelectedElements","filterSelected","updateUnselectedElements","unselectedElements","slice","setElementActive","idx","allElements","container","addEventListener","componentWillReceiveProps","nextProps","totalElements","searchInput","focus","removeEventListener","allowSelection","allowNewElements","footerNode","activeElement","showNewElement","infiniteList","listClasses","div","defaultProps","getComponentNavigation","getMarketplaceNavigation","getSettingsNavigation","validateTag","STATUSES","ALL_EXCEPT_PENDING","ALL_TYPES","CURRENTS","ONLY_CURRENTS","DEFAULT_FILTERS","taskType","currents","minSubmittedAt","maxExecutedAt","DEBOUNCE_DELAY","PROVIDED_TYPES","isProvided","orderLinks","provided","unknown","getLinkName","DEFAULT_HOMEPAGE","setHomePage","handleReset","homepage","isChecked","isSameHomePage","filled","ISSUE_MEASURES","issueParamsPerMetric","blocker_violations","severities","new_blocker_violations","critical_violations","new_critical_violations","major_violations","new_major_violations","minor_violations","new_minor_violations","info_violations","new_info_violations","open_issues","reopened_issues","confirmed_issues","false_positive_issues","resolutions","code_smells","new_code_smells","bugs","new_bugs","vulnerabilities","new_vulnerabilities","isIssueMeasure","propsToIssueParams","sinceLeakPeriod","listView"],"mappings":"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","file":"js/277.1601658702741.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Branch, PullRequest } from '../types/branch-like';\n\nexport function getBranches(project: string): Promise<Branch[]> {\n  return getJSON('/api/project_branches/list', { project }).then(r => r.branches, throwGlobalError);\n}\n\nexport function getPullRequests(project: string): Promise<PullRequest[]> {\n  return getJSON('/api/project_pull_requests/list', { project }).then(\n    r => r.pullRequests,\n    throwGlobalError\n  );\n}\n\nexport function deleteBranch(data: { branch: string; project: string }) {\n  return post('/api/project_branches/delete', data).catch(throwGlobalError);\n}\n\nexport function deletePullRequest(data: { project: string; pullRequest: string }) {\n  return post('/api/project_pull_requests/delete', data).catch(throwGlobalError);\n}\n\nexport function renameBranch(project: string, name: string) {\n  return post('/api/project_branches/rename', { project, name }).catch(throwGlobalError);\n}\n\nexport function excludeBranchFromPurge(projectKey: string, branchName: string, excluded: boolean) {\n  return post('/api/project_branches/set_automatic_deletion_protection', {\n    project: projectKey,\n    branch: branchName,\n    value: excluded\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface ComponentContextType {\n  branchLike: BranchLike | undefined;\n  component: T.Component | undefined;\n}\n\nexport const ComponentContext = React.createContext<ComponentContextType>({\n  branchLike: undefined,\n  component: undefined\n});\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./CodeSnippet.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".code-snippet{background:#e6e6e6;border-radius:3px}.code-snippet pre{padding:8px 16px;border-right:1px solid hsla(0,0%,78.4%,.5);overflow-y:hidden;overflow-x:auto}.code-snippet>button{height:auto;border:0;border-radius:0;background:transparent;padding:8px}.code-snippet>button:active,.code-snippet>button:focus,.code-snippet>button:hover{background-color:hsla(0,0%,78.4%,.5);color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface PrivacyBadgeContainerProps {\n  className?: string;\n  qualifier: string;\n  visibility: T.Visibility;\n}\n\nexport default function PrivacyBadgeContainer({\n  className,\n  qualifier,\n  visibility\n}: PrivacyBadgeContainerProps) {\n  if (visibility !== 'private') {\n    return null;\n  }\n\n  return (\n    <Tooltip overlay={translate('visibility', visibility, 'description', qualifier)}>\n      <div className={classNames('badge', className)}>{translate('visibility', visibility)}</div>\n    </Tooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\n\nexport function getFavorites(): Promise<any> {\n  return getJSON('/api/favorites/search');\n}\n\nexport function addFavorite(component: string): Promise<void> {\n  return post('/api/favorites/add', { component });\n}\n\nexport function removeFavorite(component: string): Promise<void> {\n  return post('/api/favorites/remove', { component });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport FavoriteButton from 'sonar-ui-common/components/controls/FavoriteButton';\nimport { addFavorite, removeFavorite } from '../../api/favorites';\n\ninterface Props {\n  className?: string;\n  component: string;\n  favorite: boolean;\n  qualifier: string;\n  handleFavorite?: (component: string, isFavorite: boolean) => void;\n}\n\ninterface State {\n  favorite: boolean;\n}\n\nexport default class Favorite extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      favorite: props.favorite\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.favorite !== this.props.favorite) {\n      this.setState({ favorite: this.props.favorite });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite;\n    const apiMethod = newFavorite ? addFavorite : removeFavorite;\n\n    return apiMethod(this.props.component).then(() => {\n      if (this.mounted) {\n        this.setState({ favorite: newFavorite }, () => {\n          if (this.props.handleFavorite) {\n            this.props.handleFavorite(this.props.component, newFavorite);\n          }\n        });\n      }\n    });\n  };\n\n  render() {\n    const { className, qualifier } = this.props;\n    const { favorite } = this.state;\n\n    return (\n      <FavoriteButton\n        className={className}\n        favorite={favorite}\n        qualifier={qualifier}\n        toggleFavorite={this.toggleFavorite}\n      />\n    );\n  }\n}\n/*  */\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { getBranchStatusByBranchLike, Store } from '../../store/rootReducer';\nimport { BranchLike } from '../../types/branch-like';\n\ninterface Props {\n  branchLike: BranchLike;\n  component: string;\n  status?: string;\n}\n\nexport function BranchStatus({ status }: Props) {\n  if (!status) {\n    return null;\n  }\n\n  return <Level level={status} small={true} />;\n}\n\nconst mapStateToProps = (state: Store, { branchLike, component }: Props) => {\n  const { status } = getBranchStatusByBranchLike(state, component, branchLike);\n  return { status };\n};\n\nexport default connect(mapStateToProps)(BranchStatus);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\ninterface RawDomain {\n  actions: T.WebApi.Action[];\n  deprecatedSince?: string;\n  description: string;\n  internal: boolean;\n  path: string;\n  since?: string;\n}\n\nexport function fetchWebApi(showInternal = true): Promise<RawDomain[]> {\n  return getJSON('/api/webservices/list', { include_internals: showInternal })\n    .then(r => r.webServices)\n    .catch(throwGlobalError);\n}\n\nexport function fetchResponseExample(domain: string, action: string): Promise<T.WebApi.Example> {\n  return getJSON('/api/webservices/response_example', { controller: domain, action }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onAdd: (n: T.Notification) => void;\n  onRemove: (n: T.Notification) => void;\n  channels: string[];\n  checkboxId: (type: string, channel: string) => string;\n  project?: boolean;\n  types: string[];\n  notifications: T.Notification[];\n}\n\nexport default class NotificationsList extends React.PureComponent<Props> {\n  isEnabled(type: string, channel: string) {\n    return !!this.props.notifications.find(\n      notification => notification.type === type && notification.channel === channel\n    );\n  }\n\n  handleCheck(type: string, channel: string, checked: boolean) {\n    if (checked) {\n      this.props.onAdd({ type, channel });\n    } else {\n      this.props.onRemove({ type, channel });\n    }\n  }\n\n  getDispatcherLabel(dispatcher: string) {\n    const globalMessageKey = ['notification.dispatcher', dispatcher];\n    const projectMessageKey = [...globalMessageKey, 'project'];\n    const shouldUseProjectMessage = this.props.project && hasMessage(...projectMessageKey);\n    return shouldUseProjectMessage\n      ? translate(...projectMessageKey)\n      : translate(...globalMessageKey);\n  }\n\n  render() {\n    const { channels, checkboxId, types } = this.props;\n\n    return (\n      <tbody>\n        {types.map(type => (\n          <tr key={type}>\n            <td>{this.getDispatcherLabel(type)}</td>\n            {channels.map(channel => (\n              <td className=\"text-center\" key={channel}>\n                <Checkbox\n                  checked={this.isEnabled(type, channel)}\n                  id={checkboxId(type, channel)}\n                  onCheck={checked => this.handleCheck(type, channel, checked)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { getLinkName } from '../../../../../../helpers/projectLinks';\nimport isValidUri from '../../../../../utils/isValidUri';\n\ninterface Props {\n  iconOnly?: boolean;\n  link: T.ProjectLink;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\nexport default class MetaLink extends React.PureComponent<Props, State> {\n  state = { expanded: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState(({ expanded }) => ({ expanded: !expanded }));\n  };\n\n  handleCollapse = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleSelect = (event: React.MouseEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n  };\n\n  render() {\n    const { iconOnly, link } = this.props;\n    const linkTitle = getLinkName(link);\n    return (\n      <li>\n        <a\n          className=\"link-with-icon\"\n          href={link.url}\n          onClick={!isValidUri(link.url) ? this.handleClick : undefined}\n          rel=\"nofollow noreferrer noopener\"\n          target=\"_blank\"\n          title={linkTitle}>\n          <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n          {!iconOnly && linkTitle}\n        </a>\n        {this.state.expanded && (\n          <div className=\"little-spacer-top display-flex-center\">\n            <input\n              className=\"overview-key width-80\"\n              onClick={this.handleSelect}\n              readOnly={true}\n              type=\"text\"\n              value={link.url}\n            />\n            <ClearButton className=\"little-spacer-left\" onClick={this.handleCollapse} />\n          </div>\n        )}\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNotifications(): Promise<{\n  channels: string[];\n  globalTypes: string[];\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}> {\n  return getJSON('/api/notifications/list').catch(throwGlobalError);\n}\n\nexport function addNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/add', data).catch(throwGlobalError);\n}\n\nexport function removeNotification(data: { channel: string; type: string; project?: string }) {\n  return post('/api/notifications/remove', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniqWith } from 'lodash';\nimport * as React from 'react';\nimport { addNotification, getNotifications, removeNotification } from '../../api/notifications';\nimport { getWrappedDisplayName } from './utils';\n\ninterface State {\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n}\n\nexport interface WithNotificationsProps {\n  addNotification: (added: T.Notification) => void;\n  channels: string[];\n  globalTypes: string[];\n  loading: boolean;\n  notifications: T.Notification[];\n  perProjectTypes: string[];\n  removeNotification: (removed: T.Notification) => void;\n}\n\nexport function withNotifications<P>(\n  WrappedComponent: React.ComponentType<P & WithNotificationsProps>\n) {\n  class Wrapper extends React.Component<P, State> {\n    mounted = false;\n    static displayName = getWrappedDisplayName(WrappedComponent, 'withNotifications');\n\n    state: State = {\n      channels: [],\n      globalTypes: [],\n      loading: true,\n      notifications: [],\n      perProjectTypes: []\n    };\n\n    componentDidMount() {\n      this.mounted = true;\n      this.fetchNotifications();\n    }\n\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n\n    fetchNotifications = () => {\n      getNotifications().then(\n        response => {\n          if (this.mounted) {\n            this.setState({\n              channels: response.channels,\n              globalTypes: response.globalTypes,\n              loading: false,\n              notifications: response.notifications,\n              perProjectTypes: response.perProjectTypes\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ loading: false });\n          }\n        }\n      );\n    };\n\n    addNotificationToState = (added: T.Notification) => {\n      this.setState(state => {\n        const notifications = uniqWith([...state.notifications, added], this.areNotificationsEqual);\n        return { notifications };\n      });\n    };\n\n    removeNotificationFromState = (removed: T.Notification) => {\n      this.setState(state => {\n        const notifications = state.notifications.filter(\n          notification => !this.areNotificationsEqual(notification, removed)\n        );\n        return { notifications };\n      });\n    };\n\n    addNotification = (added: T.Notification) => {\n      // optimistic update\n      this.addNotificationToState(added);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: added.channel, project: added.project, type: added.type };\n      addNotification(data).catch(() => {\n        this.removeNotificationFromState(added);\n      });\n    };\n\n    removeNotification = (removed: T.Notification) => {\n      // optimistic update\n      this.removeNotificationFromState(removed);\n\n      // recreate `data` to omit `projectName` and `organization` from `Notification`\n      const data = { channel: removed.channel, project: removed.project, type: removed.type };\n      removeNotification(data).catch(() => {\n        this.addNotificationToState(removed);\n      });\n    };\n\n    areNotificationsEqual = (a: T.Notification, b: T.Notification) => {\n      return a.channel === b.channel && a.type === b.type && a.project === b.project;\n    };\n\n    render() {\n      const { channels, globalTypes, loading, notifications, perProjectTypes } = this.state;\n      return (\n        <WrappedComponent\n          {...this.props}\n          addNotification={this.addNotification}\n          channels={channels}\n          globalTypes={globalTypes}\n          loading={loading}\n          notifications={notifications}\n          perProjectTypes={perProjectTypes}\n          removeNotification={this.removeNotification}\n        />\n      );\n    }\n  }\n\n  return Wrapper;\n}\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./BranchLikeNavigation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".branch-like-navigation-toggler-container .popup{min-width:430px;max-width:650px}.branch-like-navigation-menu .search-box-container{padding:8px}.branch-like-navigation-menu .search-box-container .search-box,.branch-like-navigation-menu .search-box-container .search-box-input{max-width:none!important}.branch-like-navigation-menu .item-list{padding-bottom:8px;max-height:300px;overflow-y:auto}.branch-like-navigation-menu .item{padding:4px 8px}.branch-like-navigation-menu .item.header{color:#777}.branch-like-navigation-menu .item:not(.header).active,.branch-like-navigation-menu .item:not(.header):hover{background-color:#f3f3f3;cursor:pointer}.branch-like-navigation-menu .hint-container{padding:8px;background-color:#f3f3f3;border-top:1px solid #e6e6e6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./HeaderMeta.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".header-meta-warnings .alert{margin-bottom:0}.header-meta-warnings .alert-content{padding:6px 8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./Menu.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-tabs>li>a.menu-button{color:#236a97}.navbar-tabs>li>a.menu-button:hover{color:#4b9fd5;border-bottom-color:transparent}.navbar-tabs>li>a.disabled-link,.navbar-tabs>li>a.disabled-link:hover{color:#b4b4b4;cursor:default;border-bottom-color:transparent}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./InfoDrawer.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".navbar-inner-with-notif .info-drawer{border-top:1px solid #e6e6e6}.info-drawer-pane{background-color:#fff;right:-380px;width:380px;transition:right .3s ease-in-out;border-left:1px solid #e6e6e6;box-sizing:border-box}.info-drawer-pane.open{right:0}.info-drawer{position:fixed;bottom:0;z-index:51}.info-drawer .close-button{position:absolute;top:0;right:0;background:#fff;padding:16px;z-index:2}.info-drawer .back-button{cursor:pointer}.info-drawer .back-button:hover{color:#4b9fd5}.info-drawer-page{position:absolute;top:0;bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".badges-list{display:flex;justify-content:space-around;justify-content:space-evenly;flex-wrap:nowrap}.button.badge-button{display:flex;justify-content:center;padding:8px;min-width:146px;height:116px;background-color:#f3f3f3;border:1px solid #e6e6e6;border-radius:3px;transition:all .3s ease}.button.badge-button:active,.button.badge-button:focus,.button.badge-button:hover{background-color:#f3f3f3;border-color:#4b9fd5;box-shadow:none}.button.badge-button.selected{background-color:#cae3f2;border-color:#236a97}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ProjectInformation.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".project-info-list>li{padding-left:1px;padding-bottom:4px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.project-info-tags{position:relative}.project-info-deleted-profile,.project-info-deprecated-rules{margin:4px -6px;padding:3px 6px!important;border:1px solid #f4b1b0;border-radius:3px;background-color:#f2dede}.project-info-deleted-profile a,.project-info-deprecated-rules a{color:#0e516f;border-color:darken(#cae3f2)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport default function ComponentContainerNotFound() {\n  return (\n    <>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('dashboard.project_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('dashboard.project_not_found.2')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { isValidLicense } from '../../../../api/marketplace';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task } from '../../../../types/tasks';\n\ninterface Props {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentTask?: Task;\n}\n\ninterface State {\n  isValidLicense?: boolean;\n  loading: boolean;\n}\n\nexport class ComponentNavLicenseNotif extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIsValidLicense();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchIsValidLicense = () => {\n    this.setState({ loading: true });\n    isValidLicense().then(\n      ({ isValidLicense }) => {\n        if (this.mounted) {\n          this.setState({ isValidLicense, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { currentTask } = this.props;\n    const { isValidLicense, loading } = this.state;\n\n    if (loading || !currentTask || !currentTask.errorType) {\n      return null;\n    }\n\n    if (isValidLicense && currentTask.errorType !== 'LICENSING_LOC') {\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {translateWithParameters(\n            'component_navigation.status.last_blocked_due_to_bad_license_X',\n            translate('qualifier', currentTask.componentQualifier || ComponentQualifier.Project)\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert display=\"banner\" variant=\"error\">\n        <span className=\"little-spacer-right\">{currentTask.errorMessage}</span>\n        {this.props.appState.canAdmin ? (\n          <Link to=\"/admin/extension/license/app\">\n            {translate('license.component_navigation.button', currentTask.errorType)}.\n          </Link>\n        ) : (\n          translate('please_contact_administrator')\n        )}\n      </Alert>\n    );\n  }\n}\n\nexport default withAppState(ComponentNavLicenseNotif);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { STATUSES } from '../../../../apps/background-tasks/constants';\nimport { getComponentBackgroundTaskUrl } from '../../../../helpers/urls';\nimport { Task, TaskStatuses } from '../../../../types/tasks';\nimport ComponentNavLicenseNotif from './ComponentNavLicenseNotif';\n\ninterface Props {\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n}\n\nexport default class ComponentNavBgTaskNotif extends React.PureComponent<Props> {\n  renderMessage(messageKey: string, status?: string, branch?: string) {\n    const { component, currentTask } = this.props;\n    const canSeeBackgroundTasks =\n      component.configuration && component.configuration.showBackgroundTasks;\n\n    let type;\n    if (currentTask && hasMessage('background_task.type', currentTask.type)) {\n      messageKey += '_X';\n      type = translate('background_task.type', currentTask.type);\n    }\n\n    let url;\n    if (canSeeBackgroundTasks) {\n      messageKey += '.admin';\n      url = (\n        <Link to={getComponentBackgroundTaskUrl(component.key, status)}>\n          {translate('background_tasks.page')}\n        </Link>\n      );\n    }\n\n    return (\n      <FormattedMessage\n        defaultMessage={translate(messageKey)}\n        id={messageKey}\n        values={{ branch, url, type }}\n      />\n    );\n  }\n\n  render() {\n    const { currentTask, currentTaskOnSameBranch, isInProgress, isPending } = this.props;\n    if (isInProgress) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.in_progress')}\n        </Alert>\n      );\n    } else if (isPending) {\n      return (\n        <Alert display=\"banner\" variant=\"info\">\n          {this.renderMessage('component_navigation.status.pending', STATUSES.ALL)}\n        </Alert>\n      );\n    } else if (currentTask && currentTask.status === TaskStatuses.Failed) {\n      if (\n        currentTask.errorType &&\n        hasMessage('license.component_navigation.button', currentTask.errorType)\n      ) {\n        return <ComponentNavLicenseNotif currentTask={currentTask} />;\n      }\n      const branch =\n        currentTask.branch ||\n        `${currentTask.pullRequest}${\n          currentTask.pullRequestTitle ? ' - ' + currentTask.pullRequestTitle : ''\n        }`;\n      let message;\n      if (currentTaskOnSameBranch === false && branch) {\n        message = this.renderMessage(\n          'component_navigation.status.failed_branch',\n          undefined,\n          branch\n        );\n      } else {\n        message = this.renderMessage('component_navigation.status.failed');\n      }\n\n      return (\n        <Alert display=\"banner\" variant=\"error\">\n          {message}\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport PlusCircleIcon from 'sonar-ui-common/components/icons/PlusCircleIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport DocumentationTooltip from '../../../../../components/common/DocumentationTooltip';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName } from '../../../../../helpers/branch-like';\nimport { getPortfolioAdminUrl } from '../../../../../helpers/urls';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { colors } from '../../../../theme';\n\nexport interface CurrentBranchLikeProps {\n  branchesEnabled: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  hasManyBranches: boolean;\n}\n\nexport function CurrentBranchLike(props: CurrentBranchLikeProps) {\n  const {\n    branchesEnabled,\n    component,\n    component: { configuration },\n    currentBranchLike,\n    hasManyBranches\n  } = props;\n\n  const displayName = getBranchLikeDisplayName(currentBranchLike);\n  const isApplication = component.qualifier === ComponentQualifier.Application;\n  const canAdminComponent = configuration && configuration.showSettings;\n\n  const additionalIcon = () => {\n    const plusIcon = <PlusCircleIcon fill={colors.blue} size={12} />;\n\n    if (branchesEnabled && hasManyBranches) {\n      return <DropdownIcon />;\n    }\n\n    if (isApplication) {\n      if (!hasManyBranches && canAdminComponent) {\n        return (\n          <HelpTooltip\n            overlay={\n              <>\n                <p>{translate('application.branches.help')}</p>\n                <hr className=\"spacer-top spacer-bottom\" />\n                <Link to={getPortfolioAdminUrl(component.key, component.qualifier)}>\n                  {translate('application.branches.link')}\n                </Link>\n              </>\n            }>\n            {plusIcon}\n          </HelpTooltip>\n        );\n      }\n    } else {\n      if (!branchesEnabled) {\n        return (\n          <DocumentationTooltip\n            content={translate('branch_like_navigation.no_branch_support.content')}\n            data-test=\"branches-support-disabled\"\n            links={[\n              {\n                href: 'https://redirect.sonarsource.com/editions/developer.html',\n                label: translate('learn_more')\n              }\n            ]}\n            title={translate('branch_like_navigation.no_branch_support.title')}>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n\n      if (!hasManyBranches) {\n        return (\n          <DocumentationTooltip\n            content={translate('branch_like_navigation.only_one_branch.content')}\n            data-test=\"only-one-branch-like\"\n            links={[\n              {\n                href: '/documentation/branches/overview/',\n                label: translate('branch_like_navigation.only_one_branch.documentation')\n              },\n              {\n                href: '/documentation/analysis/pull-request/',\n                label: translate('branch_like_navigation.only_one_branch.pr_analysis')\n              }\n            ]}\n            title={translate('branch_like_navigation.only_one_branch.title')}>\n            {plusIcon}\n          </DocumentationTooltip>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <span className=\"display-flex-center flex-shrink text-ellipsis\">\n      <BranchLikeIcon branchLike={currentBranchLike} />\n      <span\n        className=\"spacer-left spacer-right flex-shrink text-ellipsis js-branch-like-name\"\n        title={displayName}>\n        {displayName}\n      </span>\n      {additionalIcon()}\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLike);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../../components/common/BranchStatus';\nimport BranchLikeIcon from '../../../../../components/icons/BranchLikeIcon';\nimport { getBranchLikeDisplayName, isMainBranch } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface MenuItemProps {\n  branchLike: BranchLike;\n  component: T.Component;\n  indent?: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selected: boolean;\n  setSelectedNode?: (node: HTMLLIElement) => void;\n}\n\nexport function MenuItem(props: MenuItemProps) {\n  const { branchLike, component, indent, setSelectedNode, onSelect, selected } = props;\n  const displayName = getBranchLikeDisplayName(branchLike);\n\n  return (\n    <li\n      className={classNames('item', {\n        active: selected\n      })}\n      onClick={() => onSelect(branchLike)}\n      ref={selected ? setSelectedNode : undefined}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between', {\n          'big-spacer-left': indent\n        })}>\n        <div className=\"item-name text-ellipsis\" title={displayName}>\n          <BranchLikeIcon branchLike={branchLike} />\n          <span className=\"spacer-left\">{displayName}</span>\n          {isMainBranch(branchLike) && (\n            <span className=\"badge spacer-left\">{translate('branches.main_branch')}</span>\n          )}\n        </div>\n        <div className=\"spacer-left\">\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default React.memo(MenuItem);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport { getBranchLikeKey, isSameBranchLike } from '../../../../../helpers/branch-like';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport MenuItem from './MenuItem';\n\nexport interface MenuItemListProps {\n  branchLikeTree: BranchLikeTree;\n  component: T.Component;\n  hasResults: boolean;\n  onSelect: (branchLike: BranchLike) => void;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport function MenuItemList(props: MenuItemListProps) {\n  let listNode: HTMLUListElement | null = null;\n  let selectedNode: HTMLLIElement | null = null;\n\n  React.useEffect(() => {\n    if (listNode && selectedNode) {\n      scrollToElement(selectedNode, { parent: listNode, smooth: false });\n    }\n  });\n\n  const { branchLikeTree, component, hasResults, onSelect, selectedBranchLike } = props;\n\n  const renderItem = (branchLike: BranchLike, indent?: boolean) => (\n    <MenuItem\n      branchLike={branchLike}\n      component={component}\n      indent={indent}\n      key={getBranchLikeKey(branchLike)}\n      onSelect={onSelect}\n      selected={isSameBranchLike(branchLike, selectedBranchLike)}\n      setSelectedNode={node => (selectedNode = node)}\n    />\n  );\n\n  return (\n    <ul className=\"item-list\" ref={node => (listNode = node)}>\n      {!hasResults && (\n        <li className=\"item\">\n          <span className=\"note\">{translate('no_results')}</span>\n        </li>\n      )}\n\n      {/* BRANCHES & PR */}\n      {[branchLikeTree.mainBranchTree, ...branchLikeTree.branchTree].filter(isDefined).map(tree => (\n        <React.Fragment key={getBranchLikeKey(tree.branch)}>\n          {renderItem(tree.branch)}\n          {tree.pullRequests.length > 0 && (\n            <>\n              <li className=\"item header\">\n                <span className=\"big-spacer-left\">\n                  {translate('branch_like_navigation.pull_requests')}\n                </span>\n              </li>\n              {tree.pullRequests.map(pr => renderItem(pr, true))}\n            </>\n          )}\n          <hr />\n        </React.Fragment>\n      ))}\n\n      {/* PARENTLESS PR (for display during search) */}\n      {branchLikeTree.parentlessPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">{translate('branch_like_navigation.pull_requests')}</li>\n          {branchLikeTree.parentlessPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n\n      {/* ORPHAN PR */}\n      {branchLikeTree.orphanPullRequests.length > 0 && (\n        <>\n          <li className=\"item header\">\n            {translate('branch_like_navigation.orphan_pull_requests')}\n            <HelpTooltip\n              className=\"little-spacer-left\"\n              overlay={translate('branch_like_navigation.orphan_pull_requests.tooltip')}\n            />\n          </li>\n          {branchLikeTree.orphanPullRequests.map(pr => renderItem(pr))}\n        </>\n      )}\n    </ul>\n  );\n}\n\nexport default React.memo(MenuItemList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { DropdownOverlay } from 'sonar-ui-common/components/controls/Dropdown';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { KeyCodes } from 'sonar-ui-common/helpers/keycodes';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Router, withRouter } from '../../../../../components/hoc/withRouter';\nimport {\n  getBrancheLikesAsTree,\n  isBranch,\n  isPullRequest,\n  isSameBranchLike\n} from '../../../../../helpers/branch-like';\nimport { getBranchLikeUrl } from '../../../../../helpers/urls';\nimport { BranchLike, BranchLikeTree } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport MenuItemList from './MenuItemList';\n\ninterface Props {\n  branchLikes: BranchLike[];\n  canAdminComponent?: boolean;\n  component: T.Component;\n  currentBranchLike: BranchLike;\n  onClose: () => void;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  branchLikesToDisplay: BranchLike[];\n  branchLikesToDisplayTree: BranchLikeTree;\n  query: string;\n  selectedBranchLike: BranchLike | undefined;\n}\n\nexport class Menu extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let selectedBranchLike = undefined;\n\n    if (props.branchLikes.some(b => isSameBranchLike(b, props.currentBranchLike))) {\n      selectedBranchLike = props.currentBranchLike;\n    } else if (props.branchLikes.length > 0) {\n      selectedBranchLike = props.branchLikes[0];\n    }\n\n    this.state = {\n      query: '',\n      selectedBranchLike,\n      ...this.processBranchLikes(props.branchLikes)\n    };\n  }\n\n  processBranchLikes = (branchLikes: BranchLike[]) => {\n    const tree = getBrancheLikesAsTree(branchLikes);\n    return {\n      branchLikesToDisplay: [\n        ...(tree.mainBranchTree\n          ? [tree.mainBranchTree.branch, ...tree.mainBranchTree.pullRequests]\n          : []),\n        ...tree.branchTree.reduce((prev, t) => [...prev, t.branch, ...t.pullRequests], []),\n        ...tree.parentlessPullRequests,\n        ...tree.orphanPullRequests\n      ],\n      branchLikesToDisplayTree: tree\n    };\n  };\n\n  openHighlightedBranchLike = () => {\n    if (this.state.selectedBranchLike) {\n      this.handleOnSelect(this.state.selectedBranchLike);\n    }\n  };\n\n  highlightSiblingBranchlike = (indexDelta: number) => {\n    const selectBranchLikeIndex = this.state.branchLikesToDisplay.findIndex(b =>\n      isSameBranchLike(b, this.state.selectedBranchLike)\n    );\n    const newIndex = selectBranchLikeIndex + indexDelta;\n\n    if (\n      selectBranchLikeIndex !== -1 &&\n      newIndex >= 0 &&\n      newIndex < this.state.branchLikesToDisplay.length\n    ) {\n      this.setState(({ branchLikesToDisplay }) => ({\n        selectedBranchLike: branchLikesToDisplay[newIndex]\n      }));\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCodes.Enter:\n        event.preventDefault();\n        this.openHighlightedBranchLike();\n        break;\n      case KeyCodes.UpArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(-1);\n        break;\n      case KeyCodes.DownArrow:\n        event.preventDefault();\n        this.highlightSiblingBranchlike(+1);\n        break;\n    }\n  };\n\n  handleSearchChange = (query: string) => {\n    const q = query.toLowerCase();\n\n    const filterBranch = (branch: BranchLike) =>\n      isBranch(branch) && branch.name.toLowerCase().includes(q);\n    const filterPullRequest = (pr: BranchLike) =>\n      isPullRequest(pr) && (pr.title.toLowerCase().includes(q) || pr.key.toLowerCase().includes(q));\n\n    const filteredBranchLikes = this.props.branchLikes.filter(\n      bl => filterBranch(bl) || filterPullRequest(bl)\n    );\n\n    this.setState({\n      query: q,\n      selectedBranchLike: filteredBranchLikes.length > 0 ? filteredBranchLikes[0] : undefined,\n      ...this.processBranchLikes(filteredBranchLikes)\n    });\n  };\n\n  handleOnSelect = (branchLike: BranchLike) => {\n    this.setState({ selectedBranchLike: branchLike }, () => {\n      this.props.onClose();\n      this.props.router.push(getBranchLikeUrl(this.props.component.key, branchLike));\n    });\n  };\n\n  render() {\n    const { canAdminComponent, component, onClose } = this.props;\n    const {\n      branchLikesToDisplay,\n      branchLikesToDisplayTree,\n      query,\n      selectedBranchLike\n    } = this.state;\n\n    const showManageLink = component.qualifier === ComponentQualifier.Project && canAdminComponent;\n    const hasResults = branchLikesToDisplay.length > 0;\n\n    return (\n      <DropdownOverlay className=\"branch-like-navigation-menu\" noPadding={true}>\n        <div className=\"search-box-container\">\n          <SearchBox\n            autoFocus={true}\n            onChange={this.handleSearchChange}\n            onKeyDown={this.handleKeyDown}\n            placeholder={translate('branch_like_navigation.search_for_branch_like')}\n            value={query}\n          />\n        </div>\n\n        <div className=\"item-list-container\">\n          <MenuItemList\n            branchLikeTree={branchLikesToDisplayTree}\n            component={component}\n            hasResults={hasResults}\n            onSelect={this.handleOnSelect}\n            selectedBranchLike={selectedBranchLike}\n          />\n        </div>\n\n        {showManageLink && (\n          <div className=\"hint-container text-right\">\n            <Link\n              onClick={() => onClose()}\n              to={{ pathname: '/project/branches', query: { id: component.key } }}>\n              {translate('branch_like_navigation.manage')}\n            </Link>\n          </div>\n        )}\n      </DropdownOverlay>\n    );\n  }\n}\n\nexport default withRouter(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Toggler from 'sonar-ui-common/components/controls/Toggler';\nimport { withAppState } from '../../../../../components/hoc/withAppState';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport './BranchLikeNavigation.css';\nimport CurrentBranchLike from './CurrentBranchLike';\nimport Menu from './Menu';\n\nexport interface BranchLikeNavigationProps {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike;\n}\n\nexport function BranchLikeNavigation(props: BranchLikeNavigationProps) {\n  const {\n    appState: { branchesEnabled },\n    branchLikes,\n    component,\n    component: { configuration },\n    currentBranchLike\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const canAdminComponent = configuration && configuration.showSettings;\n  const hasManyBranches = branchLikes.length >= 2;\n  const isMenuEnabled = branchesEnabled && hasManyBranches;\n\n  const currentBranchLikeElement = (\n    <CurrentBranchLike\n      branchesEnabled={Boolean(branchesEnabled)}\n      component={component}\n      currentBranchLike={currentBranchLike}\n      hasManyBranches={hasManyBranches}\n    />\n  );\n\n  return (\n    <span\n      className={classNames('big-spacer-left flex-0 branch-like-navigation-toggler-container', {\n        dropdown: isMenuEnabled\n      })}>\n      {isMenuEnabled ? (\n        <Toggler\n          onRequestClose={() => setIsMenuOpen(false)}\n          open={isMenuOpen}\n          overlay={\n            <Menu\n              branchLikes={branchLikes}\n              canAdminComponent={canAdminComponent}\n              component={component}\n              currentBranchLike={currentBranchLike}\n              onClose={() => setIsMenuOpen(false)}\n            />\n          }>\n          <a\n            className=\"link-base-color link-no-underline\"\n            href=\"#\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}>\n            {currentBranchLikeElement}\n          </a>\n        </Toggler>\n      ) : (\n        currentBranchLikeElement\n      )}\n    </span>\n  );\n}\n\nexport default withAppState(React.memo(BranchLikeNavigation));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPullRequest } from '../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../types/branch-like';\n\nexport interface CurrentBranchLikeMergeInformationProps {\n  currentBranchLike: BranchLike;\n}\n\nexport function CurrentBranchLikeMergeInformation(props: CurrentBranchLikeMergeInformationProps) {\n  const { currentBranchLike } = props;\n\n  if (!isPullRequest(currentBranchLike)) {\n    return null;\n  }\n\n  return (\n    <span className=\"big-spacer-left flex-shrink note text-ellipsis\">\n      <FormattedMessage\n        defaultMessage={translate('branch_like_navigation.for_merge_into_x_from_y')}\n        id=\"branch_like_navigation.for_merge_into_x_from_y\"\n        values={{\n          target: <strong>{currentBranchLike.target}</strong>,\n          branch: <strong>{currentBranchLike.branch}</strong>\n        }}\n      />\n    </span>\n  );\n}\n\nexport default React.memo(CurrentBranchLikeMergeInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { last } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { isMainBranch } from '../../../../helpers/branch-like';\nimport { getComponentOverviewUrl } from '../../../../helpers/urls';\nimport { BranchLike } from '../../../../types/branch-like';\n\ninterface Props {\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n}\n\nexport function Breadcrumb(props: Props) {\n  const {\n    component: { breadcrumbs },\n    currentBranchLike\n  } = props;\n  const lastBreadcrumbElement = last(breadcrumbs);\n  const isNoMainBranch = currentBranchLike && !isMainBranch(currentBranchLike);\n\n  return (\n    <div className=\"big flex-shrink display-flex-center\">\n      {breadcrumbs.map((breadcrumbElement, i) => {\n        const isFirst = i === 0;\n        const isNotLast = i < breadcrumbs.length - 1;\n\n        return (\n          <span className=\"flex-shrink display-flex-center\" key={breadcrumbElement.key}>\n            {isFirst && lastBreadcrumbElement && (\n              <QualifierIcon className=\"spacer-right\" qualifier={lastBreadcrumbElement.qualifier} />\n            )}\n            {isNoMainBranch || isNotLast ? (\n              <Link\n                className=\"link-no-underline text-ellipsis\"\n                title={breadcrumbElement.name}\n                to={getComponentOverviewUrl(breadcrumbElement.key, breadcrumbElement.qualifier)}>\n                {breadcrumbElement.name}\n              </Link>\n            ) : (\n              <span className=\"text-ellipsis\" title={breadcrumbElement.name}>\n                {breadcrumbElement.name}\n              </span>\n            )}\n            {isNotLast && <span className=\"slash-separator\" />}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default React.memo(Breadcrumb);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport Favorite from '../../../../components/controls/Favorite';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport BranchLikeNavigation from './branch-like/BranchLikeNavigation';\nimport CurrentBranchLikeMergeInformation from './branch-like/CurrentBranchLikeMergeInformation';\nimport { Breadcrumb } from './Breadcrumb';\n\nexport interface HeaderProps {\n  branchLikes: BranchLike[];\n  component: T.Component;\n  currentBranchLike: BranchLike | undefined;\n  currentUser: T.CurrentUser;\n}\n\nexport function Header(props: HeaderProps) {\n  const { branchLikes, component, currentBranchLike, currentUser } = props;\n\n  return (\n    <>\n      <Helmet title={component.name} />\n      <header className=\"display-flex-center flex-shrink\">\n        <Breadcrumb component={component} currentBranchLike={currentBranchLike} />\n        {isLoggedIn(currentUser) && (\n          <Favorite\n            className=\"spacer-left\"\n            component={component.key}\n            favorite={Boolean(component.isFavorite)}\n            qualifier={component.qualifier}\n          />\n        )}\n        {currentBranchLike && (\n          <>\n            <BranchLikeNavigation\n              branchLikes={branchLikes}\n              component={component}\n              currentBranchLike={currentBranchLike}\n            />\n            <CurrentBranchLikeMergeInformation currentBranchLike={currentBranchLike} />\n          </>\n        )}\n      </header>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(React.memo(Header));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { TaskWarning } from '../../../../types/tasks';\n\nconst AnalysisWarningsModal = lazyLoadComponent(\n  () => import('../../../../components/common/AnalysisWarningsModal'),\n  'AnalysisWarningsModal'\n);\n\ninterface Props {\n  componentKey: string;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ComponentNavWarnings extends React.PureComponent<Props, State> {\n  state: State = { modal: false };\n\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modal: false });\n  };\n\n  render() {\n    return (\n      <>\n        <Alert className=\"js-component-analysis-warnings flex-1\" display=\"inline\" variant=\"warning\">\n          <FormattedMessage\n            defaultMessage={translate('component_navigation.last_analysis_had_warnings')}\n            id=\"component_navigation.last_analysis_had_warnings\"\n            values={{\n              warnings: (\n                <a href=\"#\" onClick={this.handleClick}>\n                  <FormattedMessage\n                    defaultMessage={translate('component_navigation.x_warnings')}\n                    id=\"component_navigation.x_warnings\"\n                    values={{\n                      warningsCount: this.props.warnings.length\n                    }}\n                  />\n                </a>\n              )\n            }}\n          />\n        </Alert>\n        {this.state.modal && (\n          <AnalysisWarningsModal\n            componentKey={this.props.componentKey}\n            onClose={this.handleCloseModal}\n            onWarningDismiss={this.props.onWarningDismiss}\n            warnings={this.props.warnings}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DateTimeFormatter from 'sonar-ui-common/components/intl/DateTimeFormatter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport BranchStatus from '../../../../components/common/BranchStatus';\nimport HomePageSelect from '../../../../components/controls/HomePageSelect';\nimport { isBranch, isPullRequest } from '../../../../helpers/branch-like';\nimport { isLoggedIn } from '../../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../../store/rootReducer';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { TaskWarning } from '../../../../types/tasks';\nimport ComponentNavWarnings from './ComponentNavWarnings';\nimport './HeaderMeta.css';\n\nexport interface HeaderMetaProps {\n  branchLike?: BranchLike;\n  currentUser: T.CurrentUser;\n  component: T.Component;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\nexport function HeaderMeta(props: HeaderMetaProps) {\n  const { branchLike, component, currentUser, warnings } = props;\n\n  const isABranch = isBranch(branchLike);\n  const currentPage = getCurrentPage(component, branchLike);\n  const displayVersion = component.version !== undefined && isABranch;\n\n  return (\n    <>\n      <div className=\"display-flex-center flex-0 small\">\n        {warnings.length > 0 && (\n          <span className=\"header-meta-warnings\">\n            <ComponentNavWarnings\n              componentKey={component.key}\n              onWarningDismiss={props.onWarningDismiss}\n              warnings={warnings}\n            />\n          </span>\n        )}\n        {component.analysisDate && (\n          <span className=\"spacer-left nowrap note\">\n            <DateTimeFormatter date={component.analysisDate} />\n          </span>\n        )}\n        {displayVersion && (\n          <span className=\"spacer-left nowrap note\">{`${translate('version')} ${\n            component.version\n          }`}</span>\n        )}\n        {isLoggedIn(currentUser) && currentPage !== undefined && !isPullRequest(branchLike) && (\n          <HomePageSelect className=\"spacer-left\" currentPage={currentPage} />\n        )}\n      </div>\n      {isPullRequest(branchLike) && (\n        <div className=\"navbar-context-meta-secondary display-inline-flex-center\">\n          {branchLike.url !== undefined && (\n            <a\n              className=\"display-inline-flex-center big-spacer-right\"\n              href={branchLike.url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {translate('branches.see_the_pr')}\n              <DetachIcon className=\"little-spacer-left\" size={12} />\n            </a>\n          )}\n          <BranchStatus branchLike={branchLike} component={component.key} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function getCurrentPage(component: T.Component, branchLike: BranchLike | undefined) {\n  let currentPage: T.HomePage | undefined;\n\n  const branch = isBranch(branchLike) && !branchLike.isMain ? branchLike.name : undefined;\n\n  switch (component.qualifier) {\n    case ComponentQualifier.Portfolio:\n    case ComponentQualifier.SubPortfolio:\n      currentPage = { type: 'PORTFOLIO', component: component.key };\n      break;\n    case ComponentQualifier.Application:\n      currentPage = {\n        type: 'APPLICATION',\n        component: component.key,\n        branch\n      };\n      break;\n    case ComponentQualifier.Project:\n      // when home page is set to the default branch of a project, its name is returned as `undefined`\n      currentPage = {\n        type: 'PROJECT',\n        component: component.key,\n        branch\n      };\n      break;\n  }\n\n  return currentPage;\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(HeaderMeta);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link, LinkProps } from 'react-router';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport NavBarTabs from 'sonar-ui-common/components/ui/NavBarTabs';\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getBranchLikeQuery, isPullRequest } from '../../../../helpers/branch-like';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { getPortfolioUrl, getProjectQueryUrl } from '../../../../helpers/urls';\nimport { BranchLike, BranchParameters } from '../../../../types/branch-like';\nimport { ComponentQualifier, isPortfolioLike } from '../../../../types/component';\nimport './Menu.css';\n\nconst SETTINGS_URLS = [\n  '/project/admin',\n  '/project/baseline',\n  '/project/branches',\n  '/project/settings',\n  '/project/quality_profiles',\n  '/project/quality_gate',\n  '/custom_measures',\n  '/project/links',\n  '/project_roles',\n  '/project/history',\n  'background_tasks',\n  '/project/key',\n  '/project/deletion',\n  '/project/webhooks'\n];\n\ninterface Props {\n  appState: Pick<T.AppState, 'branchesEnabled'>;\n  branchLike: BranchLike | undefined;\n  branchLikes: BranchLike[] | undefined;\n  component: T.Component;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onToggleProjectInfo: () => void;\n}\n\ntype Query = BranchParameters & { id: string };\n\nfunction MenuLink({\n  hasAnalysis,\n  label,\n  ...props\n}: LinkProps & { hasAnalysis: boolean; label: React.ReactNode }) {\n  return hasAnalysis ? (\n    <Link {...props}>{label}</Link>\n  ) : (\n    <Tooltip overlay={translate('layout.must_be_configured')}>\n      <a aria-disabled=\"true\" className=\"disabled-link\">\n        {label}\n      </a>\n    </Tooltip>\n  );\n}\n\nexport class Menu extends React.PureComponent<Props> {\n  hasAnalysis = () => {\n    const { branchLikes = [], component, isInProgress, isPending } = this.props;\n    const hasBranches = branchLikes.length > 1;\n    return hasBranches || isInProgress || isPending || component.analysisDate !== undefined;\n  };\n\n  isProject = () => {\n    return this.props.component.qualifier === ComponentQualifier.Project;\n  };\n\n  isDeveloper = () => {\n    return this.props.component.qualifier === ComponentQualifier.Developper;\n  };\n\n  isPortfolio = () => {\n    const { qualifier } = this.props.component;\n    return isPortfolioLike(qualifier);\n  };\n\n  isApplication = () => {\n    return this.props.component.qualifier === ComponentQualifier.Application;\n  };\n\n  getConfiguration = () => {\n    return this.props.component.configuration || {};\n  };\n\n  getQuery = (): Query => {\n    return { id: this.props.component.key, ...getBranchLikeQuery(this.props.branchLike) };\n  };\n\n  renderDashboardLink = ({ id, ...branchLike }: Query, isPortfolio: boolean) => {\n    return (\n      <li>\n        <Link\n          activeClassName=\"active\"\n          to={isPortfolio ? getPortfolioUrl(id) : getProjectQueryUrl(id, branchLike)}>\n          {translate('overview.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCodeLink = (\n    hasAnalysis: boolean,\n    query: Query,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    if (this.isDeveloper()) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={\n            isPortfolio || isApplication ? translate('view_projects.page') : translate('code.page')\n          }\n          to={{ pathname: '/code', query }}\n        />\n      </li>\n    );\n  };\n\n  renderActivityLink = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike } = this.props;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('project_activity.page')}\n          to={{ pathname: '/project/activity', query }}\n        />\n      </li>\n    );\n  };\n\n  renderIssuesLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('issues.page')}\n          to={{ pathname: '/project/issues', query: { ...query, resolved: 'false' } }}\n        />\n      </li>\n    );\n  };\n\n  renderComponentMeasuresLink = (hasAnalysis: boolean, query: Query) => {\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.measures')}\n          to={{ pathname: '/component_measures', query }}\n        />\n      </li>\n    );\n  };\n\n  renderSecurityHotspotsLink = (hasAnalysis: boolean, query: Query, isPortfolio: boolean) => {\n    return (\n      !isPortfolio && (\n        <li>\n          <MenuLink\n            activeClassName=\"active\"\n            hasAnalysis={hasAnalysis}\n            label={translate('layout.security_hotspots')}\n            to={{ pathname: '/security_hotspots', query }}\n          />\n        </li>\n      )\n    );\n  };\n\n  renderSecurityReports = (hasAnalysis: boolean, query: Query) => {\n    const { branchLike, component } = this.props;\n    const { extensions = [] } = component;\n\n    if (isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const hasSecurityReportsEnabled = extensions.some(extension =>\n      extension.key.startsWith('securityreport/')\n    );\n\n    if (!hasSecurityReportsEnabled) {\n      return null;\n    }\n\n    return (\n      <li>\n        <MenuLink\n          activeClassName=\"active\"\n          hasAnalysis={hasAnalysis}\n          label={translate('layout.security_reports')}\n          to={{\n            pathname: '/project/extension/securityreport/securityreport',\n            query\n          }}\n        />\n      </li>\n    );\n  };\n\n  renderAdministration = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    const { branchLike, component } = this.props;\n\n    if (!this.getConfiguration().showSettings || isPullRequest(branchLike)) {\n      return null;\n    }\n\n    const isSettingsActive = SETTINGS_URLS.some(url => window.location.href.indexOf(url) !== -1);\n\n    const adminLinks = this.renderAdministrationLinks(query, isProject, isApplication, isPortfolio);\n    if (!adminLinks.some(link => link != null)) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"administration\"\n        overlay={<ul className=\"menu\">{adminLinks}</ul>}\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: isSettingsActive || open })}\n            href=\"#\"\n            id=\"component-navigation-admin\"\n            onClick={onToggleClick}>\n            {hasMessage('layout.settings', component.qualifier)\n              ? translate('layout.settings', component.qualifier)\n              : translate('layout.settings')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  renderAdministrationLinks = (\n    query: Query,\n    isProject: boolean,\n    isApplication: boolean,\n    isPortfolio: boolean\n  ) => {\n    return [\n      this.renderSettingsLink(query, isApplication, isPortfolio),\n      this.renderBranchesLink(query, isProject),\n      this.renderBaselineLink(query, isApplication, isPortfolio),\n      this.renderProfilesLink(query),\n      this.renderQualityGateLink(query),\n      this.renderCustomMeasuresLink(query),\n      this.renderLinksLink(query),\n      this.renderPermissionsLink(query),\n      this.renderBackgroundTasksLink(query),\n      this.renderUpdateKeyLink(query),\n      this.renderWebhooksLink(query, isProject),\n      ...this.renderAdminExtensions(query),\n      this.renderDeletionLink(query)\n    ];\n  };\n\n  renderProjectInformationButton = (isProject: boolean, isApplication: boolean) => {\n    if (isPullRequest(this.props.branchLike)) {\n      return null;\n    }\n\n    return (\n      (isProject || isApplication) && (\n        <li>\n          <a\n            className=\"menu-button\"\n            onClick={(e: React.SyntheticEvent<HTMLAnchorElement>) => {\n              e.preventDefault();\n              e.currentTarget.blur();\n              this.props.onToggleProjectInfo();\n            }}\n            role=\"button\"\n            tabIndex={0}>\n            <BulletListIcon className=\"little-spacer-right\" />\n            {translate(isProject ? 'project' : 'application', 'info.title')}\n          </a>\n        </li>\n      )\n    );\n  };\n\n  renderSettingsLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"settings\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/settings', query }}>\n          {translate('project_settings.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBranchesLink = (query: Query, isProject: boolean) => {\n    if (\n      !this.props.appState.branchesEnabled ||\n      !isProject ||\n      !this.getConfiguration().showSettings\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"branches\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/branches', query }}>\n          {translate('project_branch_pull_request.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBaselineLink = (query: Query, isApplication: boolean, isPortfolio: boolean) => {\n    if (!this.getConfiguration().showSettings || isApplication || isPortfolio) {\n      return null;\n    }\n    return (\n      <li key=\"baseline\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/baseline', query }}>\n          {translate('project_baseline.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderProfilesLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityProfiles) {\n      return null;\n    }\n    return (\n      <li key=\"profiles\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_profiles', query }}>\n          {translate('project_quality_profiles.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderQualityGateLink = (query: Query) => {\n    if (!this.getConfiguration().showQualityGates) {\n      return null;\n    }\n    return (\n      <li key=\"quality_gate\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/quality_gate', query }}>\n          {translate('project_quality_gate.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderCustomMeasuresLink = (query: Query) => {\n    if (isSonarCloud() || !this.getConfiguration().showManualMeasures) {\n      return null;\n    }\n    return (\n      <li key=\"custom_measures\">\n        <Link activeClassName=\"active\" to={{ pathname: '/custom_measures', query }}>\n          {translate('custom_measures.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderLinksLink = (query: Query) => {\n    if (!this.getConfiguration().showLinks) {\n      return null;\n    }\n    return (\n      <li key=\"links\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/links', query }}>\n          {translate('project_links.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderPermissionsLink = (query: Query) => {\n    if (!this.getConfiguration().showPermissions) {\n      return null;\n    }\n    return (\n      <li key=\"permissions\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project_roles', query }}>\n          {translate('permissions.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderBackgroundTasksLink = (query: Query) => {\n    if (!this.getConfiguration().showBackgroundTasks) {\n      return null;\n    }\n    return (\n      <li key=\"background_tasks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/background_tasks', query }}>\n          {translate('background_tasks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderUpdateKeyLink = (query: Query) => {\n    if (!this.getConfiguration().showUpdateKey) {\n      return null;\n    }\n    return (\n      <li key=\"update_key\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/key', query }}>\n          {translate('update_key.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderWebhooksLink = (query: Query, isProject: boolean) => {\n    if (!this.getConfiguration().showSettings || !isProject) {\n      return null;\n    }\n    return (\n      <li key=\"webhooks\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/webhooks', query }}>\n          {translate('webhooks.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderDeletionLink = (query: Query) => {\n    const { qualifier } = this.props.component;\n\n    if (!this.getConfiguration().showSettings) {\n      return null;\n    }\n\n    if (\n      ![\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      return null;\n    }\n\n    return (\n      <li key=\"project_delete\">\n        <Link activeClassName=\"active\" to={{ pathname: '/project/deletion', query }}>\n          {translate('deletion.page')}\n        </Link>\n      </li>\n    );\n  };\n\n  renderExtension = ({ key, name }: T.Extension, isAdmin: boolean, baseQuery: Query) => {\n    const pathname = isAdmin ? `/project/admin/extension/${key}` : `/project/extension/${key}`;\n    const query = { ...baseQuery, qualifier: this.props.component.qualifier };\n    return (\n      <li key={key}>\n        <Link activeClassName=\"active\" to={{ pathname, query }}>\n          {name}\n        </Link>\n      </li>\n    );\n  };\n\n  renderAdminExtensions = (query: Query) => {\n    const extensions = this.getConfiguration().extensions || [];\n    return extensions.map(e => this.renderExtension(e, true, query));\n  };\n\n  renderExtensions = (query: Query) => {\n    const extensions = this.props.component.extensions || [];\n    const withoutSecurityExtension = extensions.filter(\n      extension => !extension.key.startsWith('securityreport/')\n    );\n\n    if (withoutSecurityExtension.length === 0) {\n      return null;\n    }\n\n    return (\n      <Dropdown\n        data-test=\"extensions\"\n        overlay={\n          <ul className=\"menu\">\n            {withoutSecurityExtension.map(e => this.renderExtension(e, false, query))}\n          </ul>\n        }\n        tagName=\"li\">\n        {({ onToggleClick, open }) => (\n          <a\n            aria-expanded={open}\n            aria-haspopup=\"true\"\n            className={classNames('dropdown-toggle', { active: open })}\n            href=\"#\"\n            id=\"component-navigation-more\"\n            onClick={onToggleClick}>\n            {translate('more')}\n            <DropdownIcon className=\"little-spacer-left\" />\n          </a>\n        )}\n      </Dropdown>\n    );\n  };\n\n  render() {\n    const isProject = this.isProject();\n    const isApplication = this.isApplication();\n    const isPortfolio = this.isPortfolio();\n    const hasAnalysis = this.hasAnalysis();\n    const query = this.getQuery();\n    return (\n      <div className=\"display-flex-center display-flex-space-between\">\n        <NavBarTabs>\n          {this.renderDashboardLink(query, isPortfolio)}\n          {this.renderIssuesLink(hasAnalysis, query)}\n          {this.renderSecurityHotspotsLink(hasAnalysis, query, isPortfolio)}\n          {this.renderSecurityReports(hasAnalysis, query)}\n          {this.renderComponentMeasuresLink(hasAnalysis, query)}\n          {this.renderCodeLink(hasAnalysis, query, isApplication, isPortfolio)}\n          {this.renderActivityLink(hasAnalysis, query)}\n          {this.renderExtensions(query)}\n        </NavBarTabs>\n        <NavBarTabs>\n          {this.renderAdministration(query, isProject, isApplication, isPortfolio)}\n          {this.renderProjectInformationButton(isProject, isApplication)}\n        </NavBarTabs>\n      </div>\n    );\n  }\n}\n\nexport default withAppState(Menu);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClearButton } from 'sonar-ui-common/components/controls/buttons';\nimport EscKeydownHandler from 'sonar-ui-common/components/controls/EscKeydownHandler';\nimport OutsideClickHandler from 'sonar-ui-common/components/controls/OutsideClickHandler';\nimport './InfoDrawer.css';\n\nexport interface InfoDrawerProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onClose: () => void;\n  top: number;\n}\n\nexport default function InfoDrawer(props: InfoDrawerProps) {\n  const { children, displayed, onClose, top } = props;\n\n  return (\n    <div\n      className={classNames('info-drawer info-drawer-pane', { open: displayed })}\n      style={{ top }}>\n      <div className=\"close-button\">\n        <ClearButton onClick={onClose} />\n      </div>\n      {displayed && (\n        <EscKeydownHandler onKeydown={onClose}>\n          <OutsideClickHandler onClickOutside={onClose}>\n            <div className=\"display-flex-column max-height-100\">{children}</div>\n          </OutsideClickHandler>\n        </EscKeydownHandler>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { stringify } from 'querystring';\nimport { getLocalizedMetricName } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { getHostUrl, getPathUrlAsString } from 'sonar-ui-common/helpers/urls';\nimport { getProjectUrl } from '../../../../../../helpers/urls';\n\nexport type BadgeColors = 'white' | 'black' | 'orange';\nexport type BadgeFormats = 'md' | 'url';\n\nexport interface BadgeOptions {\n  branch?: string;\n  color?: BadgeColors;\n  format?: BadgeFormats;\n  project?: string;\n  metric?: string;\n  pullRequest?: string;\n}\n\nexport enum BadgeType {\n  measure = 'measure',\n  qualityGate = 'quality_gate',\n  marketing = 'marketing'\n}\n\nexport function getBadgeSnippet(type: BadgeType, options: BadgeOptions) {\n  const url = getBadgeUrl(type, options);\n  const { branch, format = 'md', metric = 'alert_status', project } = options;\n\n  if (format === 'url') {\n    return url;\n  } else {\n    let label;\n    let projectUrl;\n\n    switch (type) {\n      case BadgeType.marketing:\n        label = 'SonarCloud';\n        break;\n      case BadgeType.measure:\n        label = getLocalizedMetricName({ key: metric });\n        break;\n      case BadgeType.qualityGate:\n      default:\n        label = 'Quality gate';\n        break;\n    }\n\n    if (project) {\n      projectUrl = getPathUrlAsString(getProjectUrl(project, branch), false);\n    }\n\n    const mdImage = `![${label}](${url})`;\n    return projectUrl ? `[${mdImage}](${projectUrl})` : mdImage;\n  }\n}\n\nexport function getBadgeUrl(\n  type: BadgeType,\n  { branch, project, color = 'white', metric = 'alert_status', pullRequest }: BadgeOptions\n) {\n  switch (type) {\n    case BadgeType.marketing:\n      return `${getHostUrl()}/images/project_badges/sonarcloud-${color}.svg`;\n    case BadgeType.qualityGate:\n      return `${getHostUrl()}/api/project_badges/quality_gate?${stringify(\n        omitNil({ branch, project, pullRequest })\n      )}`;\n    case BadgeType.measure:\n    default:\n      return `${getHostUrl()}/api/project_badges/measure?${stringify(\n        omitNil({ branch, project, metric, pullRequest })\n      )}`;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BadgeType } from './utils';\n\ninterface Props {\n  onClick: (type: BadgeType) => void;\n  selected: boolean;\n  type: BadgeType;\n  url: string;\n}\n\nexport default class BadgeButton extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.onClick(this.props.type);\n  };\n\n  render() {\n    const { selected, type, url } = this.props;\n    const width = type !== BadgeType.measure ? '128px' : undefined;\n    return (\n      <Button className={classNames('badge-button', { selected })} onClick={this.handleClick}>\n        <img alt={translate('overview.badges', type, 'alt')} src={url} width={width} />\n      </Button>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { fetchWebApi } from '../../../../../../api/web-api';\nimport { BadgeColors, BadgeFormats, BadgeOptions, BadgeType } from './utils';\n\ninterface Props {\n  className?: string;\n  metrics: T.Dict<T.Metric>;\n  options: BadgeOptions;\n  type: BadgeType;\n  updateOptions: (options: Partial<BadgeOptions>) => void;\n}\n\ninterface State {\n  badgeMetrics: string[];\n}\n\nexport default class BadgeParams extends React.PureComponent<Props> {\n  mounted = false;\n\n  state: State = { badgeMetrics: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchBadgeMetrics();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchBadgeMetrics() {\n    fetchWebApi(false).then(\n      webservices => {\n        if (this.mounted) {\n          const domain = webservices.find(d => d.path === 'api/project_badges');\n          const ws = domain && domain.actions.find(w => w.key === 'measure');\n          const param = ws && ws.params && ws.params.find(p => p.key === 'metric');\n          if (param && param.possibleValues) {\n            this.setState({ badgeMetrics: param.possibleValues });\n          }\n        }\n      },\n      () => {}\n    );\n  }\n\n  getColorOptions = () => {\n    return ['white', 'black', 'orange'].map(color => ({\n      label: translate('overview.badges.options.colors', color),\n      value: color\n    }));\n  };\n\n  getFormatOptions = () => {\n    return ['md', 'url'].map(format => ({\n      label: translate('overview.badges.options.formats', format),\n      value: format\n    }));\n  };\n\n  getMetricOptions = () => {\n    return this.state.badgeMetrics.map(key => {\n      const metric = this.props.metrics[key];\n      return {\n        value: key,\n        label: metric ? getLocalizedMetricName(metric) : key\n      };\n    });\n  };\n\n  handleColorChange = ({ value }: { value: BadgeColors }) => {\n    this.props.updateOptions({ color: value });\n  };\n\n  handleFormatChange = ({ value }: { value: BadgeFormats }) => {\n    this.props.updateOptions({ format: value });\n  };\n\n  handleMetricChange = ({ value }: { value: string }) => {\n    this.props.updateOptions({ metric: value });\n  };\n\n  renderBadgeType = (type: BadgeType, options: BadgeOptions) => {\n    if (type === BadgeType.marketing) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-color\">\n            {translate('color')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            name=\"badge-color\"\n            onChange={this.handleColorChange}\n            options={this.getColorOptions()}\n            searchable={false}\n            value={options.color}\n          />\n        </>\n      );\n    } else if (type === BadgeType.measure) {\n      return (\n        <>\n          <label className=\"spacer-right\" htmlFor=\"badge-metric\">\n            {translate('overview.badges.metric')}:\n          </label>\n          <Select\n            className=\"input-medium\"\n            clearable={false}\n            menuStyle={{ maxHeight: 100 }}\n            name=\"badge-metric\"\n            onChange={this.handleMetricChange}\n            options={this.getMetricOptions()}\n            searchable={false}\n            value={options.metric}\n          />\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  render() {\n    const { className, options, type } = this.props;\n    return (\n      <div className={className}>\n        {this.renderBadgeType(type, options)}\n\n        <label\n          className={classNames('spacer-right', {\n            'spacer-top': type !== BadgeType.qualityGate\n          })}\n          htmlFor=\"badge-format\">\n          {translate('format')}:\n        </label>\n        <Select\n          className=\"input-medium\"\n          clearable={false}\n          name=\"badge-format\"\n          onChange={this.handleFormatChange}\n          options={this.getFormatOptions()}\n          searchable={false}\n          value={this.props.options.format || 'md'}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CodeSnippet from '../../../../../../components/common/CodeSnippet';\nimport { getBranchLikeQuery } from '../../../../../../helpers/branch-like';\nimport { BranchLike } from '../../../../../../types/branch-like';\nimport { MetricKey } from '../../../../../../types/metrics';\nimport BadgeButton from './BadgeButton';\nimport BadgeParams from './BadgeParams';\nimport './styles.css';\nimport { BadgeOptions, BadgeType, getBadgeSnippet, getBadgeUrl } from './utils';\n\ninterface Props {\n  branchLike?: BranchLike;\n  metrics: T.Dict<T.Metric>;\n  project: string;\n  qualifier: string;\n}\n\ninterface State {\n  selectedType: BadgeType;\n  badgeOptions: BadgeOptions;\n}\n\nexport default class ProjectBadges extends React.PureComponent<Props, State> {\n  state: State = {\n    selectedType: BadgeType.measure,\n    badgeOptions: { color: 'white', metric: MetricKey.alert_status }\n  };\n\n  handleSelectBadge = (selectedType: BadgeType) => {\n    this.setState({ selectedType });\n  };\n\n  handleUpdateOptions = (options: Partial<BadgeOptions>) => {\n    this.setState(state => ({ badgeOptions: { ...state.badgeOptions, ...options } }));\n  };\n\n  render() {\n    const { branchLike, project, qualifier } = this.props;\n    const { selectedType, badgeOptions } = this.state;\n    const fullBadgeOptions = { project, ...badgeOptions, ...getBranchLikeQuery(branchLike) };\n\n    return (\n      <div className=\"display-flex-column\">\n        <h3>{translate('overview.badges.get_badge', qualifier)}</h3>\n        <p className=\"big-spacer-bottom\">{translate('overview.badges.description', qualifier)}</p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.measure === selectedType}\n          type={BadgeType.measure}\n          url={getBadgeUrl(BadgeType.measure, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.measure, 'description', qualifier)}\n        </p>\n        <BadgeButton\n          onClick={this.handleSelectBadge}\n          selected={BadgeType.qualityGate === selectedType}\n          type={BadgeType.qualityGate}\n          url={getBadgeUrl(BadgeType.qualityGate, fullBadgeOptions)}\n        />\n        <p className=\"huge-spacer-bottom spacer-top\">\n          {translate('overview.badges', BadgeType.qualityGate, 'description', qualifier)}\n        </p>\n        <BadgeParams\n          className=\"big-spacer-bottom display-flex-column\"\n          metrics={this.props.metrics}\n          options={badgeOptions}\n          type={selectedType}\n          updateOptions={this.handleUpdateOptions}\n        />\n        <CodeSnippet isOneLine={true} snippet={getBadgeSnippet(selectedType, fullBadgeOptions)} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport BackIcon from 'sonar-ui-common/components/icons/BackIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface InfoDrawerPageProps {\n  children: React.ReactNode;\n  displayed: boolean;\n  onPageChange: () => void;\n}\n\nexport default function InfoDrawerPage(props: InfoDrawerPageProps) {\n  const { children, displayed, onPageChange } = props;\n  return (\n    <div\n      className={classNames(\n        'info-drawer-page info-drawer-pane display-flex-column overflow-hidden',\n        {\n          open: displayed\n        }\n      )}>\n      <h2 className=\"back-button big-padded bordered-bottom\" onClick={() => onPageChange()}>\n        <BackIcon className=\"little-spacer-right\" />\n        {translate('back')}\n      </h2>\n\n      {displayed && <div className=\"overflow-y-auto big-padded\">{children}</div>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport NotificationsList from '../../../../../../apps/account/notifications/NotificationsList';\nimport {\n  withNotifications,\n  WithNotificationsProps\n} from '../../../../../../components/hoc/withNotifications';\n\ninterface Props {\n  className?: string;\n  component: T.Component;\n}\n\nexport function ProjectNotifications(props: WithNotificationsProps & Props) {\n  const { channels, component, loading, notifications, perProjectTypes } = props;\n\n  const handleAddNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.addNotification({ project: component.key, channel, type });\n  };\n\n  const handleRemoveNotification = ({ channel, type }: { channel: string; type: string }) => {\n    props.removeNotification({\n      project: component.key,\n      channel,\n      type\n    });\n  };\n\n  const getCheckboxId = (type: string, channel: string) => {\n    return `project-notification-${component.key}-${type}-${channel}`;\n  };\n\n  const projectNotifications = notifications.filter(n => n.project && n.project === component.key);\n\n  return (\n    <>\n      <h3>{translate('project.info.notifications')}</h3>\n\n      <Alert className=\"spacer-top\" variant=\"info\">\n        {translate('notification.dispatcher.information')}\n      </Alert>\n\n      <DeferredSpinner loading={loading}>\n        <table className=\"data zebra notifications-table\">\n          <thead>\n            <tr>\n              <th aria-label={translate('project')} />\n              {channels.map(channel => (\n                <th className=\"text-center\" key={channel}>\n                  <h4>{translate('notification.channel', channel)}</h4>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <NotificationsList\n            channels={channels}\n            checkboxId={getCheckboxId}\n            notifications={projectNotifications}\n            onAdd={handleAddNotification}\n            onRemove={handleRemoveNotification}\n            project={true}\n            types={perProjectTypes}\n          />\n        </table>\n      </DeferredSpinner>\n    </>\n  );\n}\n\nexport default withNotifications(ProjectNotifications);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum ProjectInformationPages {\n  main,\n  badges,\n  notifications\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChevronRightIcon from 'sonar-ui-common/components/icons/ChevronRightIcon';\n\nexport interface DrawerLinkProps<P> {\n  label: string;\n  onPageChange: (page: P) => void;\n  to: P;\n}\n\nexport function DrawerLink<P>(props: DrawerLinkProps<P>) {\n  const { label, to } = props;\n\n  return (\n    <a\n      className=\"display-flex-space-between bordered-bottom big-padded\"\n      onClick={() => props.onPageChange(to)}\n      role=\"link\"\n      tabIndex={0}>\n      {label}\n      <ChevronRightIcon />\n    </a>\n  );\n}\n\nexport default React.memo(DrawerLink);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  componentKey: string;\n  qualifier: string;\n}\n\nexport default function MetaKey({ componentKey, qualifier }: Props) {\n  return (\n    <>\n      <h3>{translate('overview.project_key', qualifier)}</h3>\n      <div className=\"display-flex-center\">\n        <input className=\"overview-key\" readOnly={true} type=\"text\" value={componentKey} />\n        <ClipboardButton className=\"little-spacer-left\" copyValue={componentKey} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProjectLinks } from '../../../../../../api/projectLinks';\nimport { orderLinks } from '../../../../../../helpers/projectLinks';\nimport MetaLink from './MetaLink';\n\ninterface Props {\n  component: T.LightComponent;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n}\n\nexport default class MetaLinks extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.loadLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadLinks = () =>\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links });\n        }\n      },\n      () => {}\n    );\n\n  render() {\n    const { links } = this.state;\n\n    if (!links || links.length === 0) {\n      return null;\n    }\n\n    const orderedLinks = orderLinks(links);\n\n    return (\n      <>\n        <div className=\"big-padded bordered-bottom\">\n          <h3>{translate('overview.external_links')}</h3>\n          <ul className=\"project-info-list\">\n            {orderedLinks.map(link => (\n              <MetaLink key={link.id} link={link} />\n            ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityGateUrl } from '../../../../../../helpers/urls';\n\ninterface Props {\n  qualityGate: { isDefault?: boolean; key: string; name: string };\n}\n\nexport default function MetaQualityGate({ qualityGate }: Props) {\n  return (\n    <>\n      <h3>{translate('project.info.quality_gate')}</h3>\n\n      <ul className=\"project-info-list\">\n        <li>\n          {qualityGate.isDefault && (\n            <span className=\"note spacer-right\">({translate('default')})</span>\n          )}\n          <Link to={getQualityGateUrl(qualityGate.key)}>{qualityGate.name}</Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { searchRules } from '../../../../../../api/rules';\nimport { getQualityProfileUrl } from '../../../../../../helpers/urls';\nimport { getLanguages, Store } from '../../../../../../store/rootReducer';\n\ninterface StateProps {\n  languages: T.Languages;\n}\n\ninterface OwnProps {\n  headerClassName?: string;\n  profiles: T.ComponentQualityProfile[];\n}\n\ninterface State {\n  deprecatedByKey: T.Dict<number>;\n}\n\nexport class MetaQualityProfiles extends React.PureComponent<StateProps & OwnProps, State> {\n  mounted = false;\n  state: State = { deprecatedByKey: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadDeprecatedRules();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadDeprecatedRules() {\n    const existingProfiles = this.props.profiles.filter(p => !p.deleted);\n    const requests = existingProfiles.map(profile =>\n      this.loadDeprecatedRulesForProfile(profile.key)\n    );\n    Promise.all(requests).then(\n      responses => {\n        if (this.mounted) {\n          const deprecatedByKey: T.Dict<number> = {};\n          responses.forEach((count, i) => {\n            const profileKey = existingProfiles[i].key;\n            deprecatedByKey[profileKey] = count;\n          });\n          this.setState({ deprecatedByKey });\n        }\n      },\n      () => {}\n    );\n  }\n\n  loadDeprecatedRulesForProfile(profileKey: string) {\n    const data = {\n      activation: 'true',\n      organization: undefined,\n      ps: 1,\n      qprofile: profileKey,\n      statuses: 'DEPRECATED'\n    };\n    return searchRules(data).then(r => r.total);\n  }\n\n  getDeprecatedRulesCount(profile: { key: string }) {\n    const count = this.state.deprecatedByKey[profile.key];\n    return count || 0;\n  }\n\n  renderProfile(profile: T.ComponentQualityProfile) {\n    const languageFromStore = this.props.languages[profile.language];\n    const languageName = languageFromStore ? languageFromStore.name : profile.language;\n\n    const inner = (\n      <div className=\"text-ellipsis\">\n        <span className=\"note spacer-right\">({languageName})</span>\n        {profile.deleted ? (\n          profile.name\n        ) : (\n          <Link to={getQualityProfileUrl(profile.name, profile.language)}>{profile.name}</Link>\n        )}\n      </div>\n    );\n\n    if (profile.deleted) {\n      const tooltip = translateWithParameters('overview.deleted_profile', profile.name);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deleted-profile\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    const count = this.getDeprecatedRulesCount(profile);\n\n    if (count > 0) {\n      const tooltip = translateWithParameters('overview.deprecated_profile', count);\n      return (\n        <Tooltip key={profile.key} overlay={tooltip}>\n          <li className=\"project-info-deprecated-rules\">{inner}</li>\n        </Tooltip>\n      );\n    }\n\n    return <li key={profile.key}>{inner}</li>;\n  }\n\n  render() {\n    const { headerClassName, profiles } = this.props;\n\n    return (\n      <>\n        <h3 className={headerClassName}>{translate('overview.quality_profiles')}</h3>\n\n        <ul className=\"project-info-list\">\n          {profiles.map(profile => this.renderProfile(profile))}\n        </ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  languages: getLanguages(state)\n});\n\nexport default connect(mapStateToProps)(MetaQualityProfiles);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SizeRating from 'sonar-ui-common/components/ui/SizeRating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure, localizeMetric } from 'sonar-ui-common/helpers/measures';\nimport DrilldownLink from '../../../../../../components/shared/DrilldownLink';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport { MetricKey } from '../../../../../../types/metrics';\n\nexport interface MetaSizeProps {\n  component: T.Component;\n  measures: T.Measure[];\n}\n\nexport default function MetaSize({ component, measures }: MetaSizeProps) {\n  const isApp = component.qualifier === ComponentQualifier.Application;\n  const ncloc = measures.find(measure => measure.metric === MetricKey.ncloc);\n  const projects = isApp\n    ? measures.find(measure => measure.metric === MetricKey.projects)\n    : undefined;\n\n  return (\n    <>\n      <h3>{localizeMetric(MetricKey.ncloc)}</h3>\n      <div className=\"display-flex-center\">\n        {ncloc ? (\n          <>\n            <DrilldownLink className=\"huge\" component={component.key} metric={MetricKey.ncloc}>\n              {formatMeasure(ncloc.value, 'SHORT_INT')}\n            </DrilldownLink>\n\n            <span className=\"spacer-left\">\n              <SizeRating value={Number(ncloc.value)} />\n            </span>\n          </>\n        ) : (\n          <span>0</span>\n        )}\n\n        {isApp && (\n          <span className=\"huge-spacer-left display-inline-flex-center\">\n            {projects ? (\n              <DrilldownLink component={component.key} metric={MetricKey.projects}>\n                <span className=\"big\">{formatMeasure(projects.value, 'SHORT_INT')}</span>\n              </DrilldownLink>\n            ) : (\n              <span className=\"big\">0</span>\n            )}\n            <span className=\"little-spacer-left text-muted\">\n              {translate('metric.projects.name')}\n            </span>\n          </span>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference, without } from 'lodash';\nimport * as React from 'react';\nimport { searchProjectTags } from '../../../../../../api/components';\nimport TagsSelector from '../../../../../../components/tags/TagsSelector';\n\ninterface Props {\n  project: string;\n  selectedTags: string[];\n  setProjectTags: (tags: string[]) => void;\n}\n\ninterface State {\n  searchResult: string[];\n}\n\nconst LIST_SIZE = 10;\n\nexport default class MetaTagsSelector extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { searchResult: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onSearch = (query: string) => {\n    return searchProjectTags({\n      q: query,\n      ps: Math.min(this.props.selectedTags.length - 1 + LIST_SIZE, 100)\n    }).then(\n      ({ tags }) => {\n        if (this.mounted) {\n          this.setState({ searchResult: tags });\n        }\n      },\n      () => {}\n    );\n  };\n\n  onSelect = (tag: string) => {\n    this.props.setProjectTags([...this.props.selectedTags, tag]);\n  };\n\n  onUnselect = (tag: string) => {\n    this.props.setProjectTags(without(this.props.selectedTags, tag));\n  };\n\n  render() {\n    const availableTags = difference(this.state.searchResult, this.props.selectedTags);\n    return (\n      <TagsSelector\n        listSize={LIST_SIZE}\n        onSearch={this.onSearch}\n        onSelect={this.onSelect}\n        onUnselect={this.onUnselect}\n        selectedTags={this.props.selectedTags}\n        tags={availableTags}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport { PopupPlacement } from 'sonar-ui-common/components/ui/popups';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setApplicationTags, setProjectTags } from '../../../../../../api/components';\nimport TagsList from '../../../../../../components/tags/TagsList';\nimport { ComponentQualifier } from '../../../../../../types/component';\nimport MetaTagsSelector from './MetaTagsSelector';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\nexport default class MetaTags extends React.PureComponent<Props> {\n  card?: HTMLDivElement | null;\n  tagsList?: HTMLElement | null;\n  tagsSelector?: HTMLDivElement | null;\n\n  canUpdateTags = () => {\n    const { configuration } = this.props.component;\n    return configuration && configuration.showSettings;\n  };\n\n  getPopupPos = (eltPos: ClientRect, containerPos: ClientRect) => ({\n    top: eltPos.height,\n    right: containerPos.width - eltPos.width\n  });\n\n  setTags = (values: string[]) => {\n    const { component } = this.props;\n\n    if (component.qualifier === ComponentQualifier.Application) {\n      return setApplicationTags({\n        application: component.key,\n        tags: values.join(',')\n      });\n    } else {\n      return setProjectTags({\n        project: component.key,\n        tags: values.join(',')\n      });\n    }\n  };\n\n  handleSetProjectTags = (values: string[]) => {\n    this.setTags(values).then(\n      () => this.props.onComponentChange({ tags: values }),\n      () => {}\n    );\n  };\n\n  render() {\n    const { key } = this.props.component;\n    const tags = this.props.component.tags || [];\n\n    if (this.canUpdateTags()) {\n      return (\n        <div className=\"big-spacer-top project-info-tags\" ref={card => (this.card = card)}>\n          <Dropdown\n            closeOnClick={false}\n            closeOnClickOutside={true}\n            overlay={\n              <MetaTagsSelector\n                project={key}\n                selectedTags={tags}\n                setProjectTags={this.handleSetProjectTags}\n              />\n            }\n            overlayPlacement={PopupPlacement.BottomLeft}>\n            <ButtonLink innerRef={tagsList => (this.tagsList = tagsList)} stopPropagation={true}>\n              <TagsList allowUpdate={true} tags={tags.length ? tags : [translate('no_tags')]} />\n            </ButtonLink>\n          </Dropdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"big-spacer-top project-info-tags\">\n          <TagsList\n            allowUpdate={false}\n            className=\"note\"\n            tags={tags.length ? tags : [translate('no_tags')]}\n          />\n        </div>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport PrivacyBadgeContainer from '../../../../../components/common/PrivacyBadgeContainer';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport DrawerLink from './DrawerLink';\nimport MetaKey from './meta/MetaKey';\nimport MetaLinks from './meta/MetaLinks';\nimport MetaQualityGate from './meta/MetaQualityGate';\nimport MetaQualityProfiles from './meta/MetaQualityProfiles';\nimport MetaSize from './meta/MetaSize';\nimport MetaTags from './meta/MetaTags';\nimport { ProjectInformationPages } from './ProjectInformationPages';\n\nexport interface ProjectInformationRendererProps {\n  canConfigureNotifications: boolean;\n  canUseBadges: boolean;\n  component: T.Component;\n  measures?: T.Measure[];\n  onComponentChange: (changes: {}) => void;\n  onPageChange: (page: ProjectInformationPages) => void;\n}\n\nexport function ProjectInformationRenderer(props: ProjectInformationRendererProps) {\n  const { canConfigureNotifications, canUseBadges, component, measures = [] } = props;\n\n  const isApp = component.qualifier === ComponentQualifier.Application;\n\n  return (\n    <>\n      <div>\n        <h2 className=\"big-padded bordered-bottom\">\n          {translate(isApp ? 'application' : 'project', 'info.title')}\n        </h2>\n      </div>\n\n      <div className=\"overflow-y-auto\">\n        <div className=\"big-padded bordered-bottom\">\n          <div className=\"display-flex-center\">\n            <h3 className=\"spacer-right\">{translate('project.info.description')}</h3>\n            {component.visibility && (\n              <PrivacyBadgeContainer\n                qualifier={component.qualifier}\n                visibility={component.visibility}\n              />\n            )}\n          </div>\n\n          {component.description && <p>{component.description}</p>}\n\n          <MetaTags component={component} onComponentChange={props.onComponentChange} />\n        </div>\n\n        <div className=\"big-padded bordered-bottom it__project-loc-value\">\n          <MetaSize component={component} measures={measures} />\n        </div>\n\n        {!isApp &&\n          (component.qualityGate ||\n            (component.qualityProfiles && component.qualityProfiles.length > 0)) && (\n            <>\n              <div className=\"big-padded bordered-bottom\">\n                {component.qualityGate && <MetaQualityGate qualityGate={component.qualityGate} />}\n\n                {component.qualityProfiles && component.qualityProfiles.length > 0 && (\n                  <MetaQualityProfiles\n                    headerClassName={component.qualityGate ? 'big-spacer-top' : undefined}\n                    profiles={component.qualityProfiles}\n                  />\n                )}\n              </div>\n            </>\n          )}\n\n        {!isApp && <MetaLinks component={component} />}\n\n        <div className=\"big-padded bordered-bottom\">\n          <MetaKey componentKey={component.key} qualifier={component.qualifier} />\n        </div>\n\n        {canUseBadges && (\n          <DrawerLink\n            label={translate('overview.badges.get_badge', component.qualifier)}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.badges}\n          />\n        )}\n        {canConfigureNotifications && (\n          <DrawerLink\n            label={translate('project.info.to_notifications')}\n            onPageChange={props.onPageChange}\n            to={ProjectInformationPages.notifications}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(ProjectInformationRenderer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getMeasures } from '../../../../../api/measures';\nimport { isLoggedIn } from '../../../../../helpers/users';\nimport { fetchMetrics } from '../../../../../store/rootActions';\nimport { getCurrentUser, getMetrics, Store } from '../../../../../store/rootReducer';\nimport { BranchLike } from '../../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../../types/component';\nimport { MetricKey } from '../../../../../types/metrics';\nimport ProjectBadges from './badges/ProjectBadges';\nimport InfoDrawerPage from './InfoDrawerPage';\nimport ProjectNotifications from './notifications/ProjectNotifications';\nimport './ProjectInformation.css';\nimport { ProjectInformationPages } from './ProjectInformationPages';\nimport ProjectInformationRenderer from './ProjectInformationRenderer';\n\ninterface Props {\n  branchLike?: BranchLike;\n  component: T.Component;\n  currentUser: T.CurrentUser;\n  fetchMetrics: () => void;\n  onComponentChange: (changes: {}) => void;\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface State {\n  measures?: T.Measure[];\n  page: ProjectInformationPages;\n}\n\nexport class ProjectInformation extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    page: ProjectInformationPages.main\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.loadMeasures();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  setPage = (page: ProjectInformationPages = ProjectInformationPages.main) => {\n    this.setState({ page });\n  };\n\n  loadMeasures = () => {\n    const {\n      component: { key }\n    } = this.props;\n\n    return getMeasures({\n      component: key,\n      metricKeys: [MetricKey.ncloc, MetricKey.projects].join()\n    }).then(measures => {\n      if (this.mounted) {\n        this.setState({ measures });\n      }\n    });\n  };\n\n  render() {\n    const { branchLike, component, currentUser, metrics } = this.props;\n    const { measures, page } = this.state;\n\n    const canConfigureNotifications =\n      isLoggedIn(currentUser) && component.qualifier === ComponentQualifier.Project;\n    const canUseBadges =\n      metrics !== undefined &&\n      component.visibility !== 'private' &&\n      (component.qualifier === ComponentQualifier.Application ||\n        component.qualifier === ComponentQualifier.Project);\n\n    return (\n      <>\n        <ProjectInformationRenderer\n          canConfigureNotifications={canConfigureNotifications}\n          canUseBadges={canUseBadges}\n          component={component}\n          measures={measures}\n          onComponentChange={this.props.onComponentChange}\n          onPageChange={this.setPage}\n        />\n        {canUseBadges && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.badges}\n            onPageChange={this.setPage}>\n            <ProjectBadges\n              branchLike={branchLike}\n              metrics={metrics}\n              project={component.key}\n              qualifier={component.qualifier}\n            />\n          </InfoDrawerPage>\n        )}\n        {canConfigureNotifications && (\n          <InfoDrawerPage\n            displayed={page === ProjectInformationPages.notifications}\n            onPageChange={this.setPage}>\n            <ProjectNotifications component={component} />\n          </InfoDrawerPage>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectInformation);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ContextNavBar from 'sonar-ui-common/components/ui/ContextNavBar';\nimport { BranchLike } from '../../../../types/branch-like';\nimport { ComponentQualifier } from '../../../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../../../types/tasks';\nimport { rawSizes } from '../../../theme';\nimport RecentHistory from '../../RecentHistory';\nimport ComponentNavBgTaskNotif from './ComponentNavBgTaskNotif';\nimport Header from './Header';\nimport HeaderMeta from './HeaderMeta';\nimport Menu from './Menu';\nimport InfoDrawer from './projectInformation/InfoDrawer';\nimport ProjectInformation from './projectInformation/ProjectInformation';\n\nexport interface ComponentNavProps {\n  branchLikes: BranchLike[];\n  currentBranchLike: BranchLike | undefined;\n  component: T.Component;\n  currentTask?: Task;\n  currentTaskOnSameBranch?: boolean;\n  isInProgress?: boolean;\n  isPending?: boolean;\n  onComponentChange: (changes: Partial<T.Component>) => void;\n  onWarningDismiss: () => void;\n  warnings: TaskWarning[];\n}\n\nexport default function ComponentNav(props: ComponentNavProps) {\n  const {\n    branchLikes,\n    component,\n    currentBranchLike,\n    currentTask,\n    currentTaskOnSameBranch,\n    isInProgress,\n    isPending,\n    warnings\n  } = props;\n  const { contextNavHeightRaw, globalNavHeightRaw } = rawSizes;\n\n  const [displayProjectInfo, setDisplayProjectInfo] = React.useState(false);\n\n  React.useEffect(() => {\n    const { breadcrumbs, key, name, organization } = component;\n    const { qualifier } = breadcrumbs[breadcrumbs.length - 1];\n    if (\n      [\n        ComponentQualifier.Project,\n        ComponentQualifier.Portfolio,\n        ComponentQualifier.Application,\n        ComponentQualifier.Developper\n      ].includes(qualifier as ComponentQualifier)\n    ) {\n      RecentHistory.add(key, name, qualifier.toLowerCase(), organization);\n    }\n  }, [component, component.key]);\n\n  let notifComponent;\n  if (isInProgress || isPending || (currentTask && currentTask.status === TaskStatuses.Failed)) {\n    notifComponent = (\n      <ComponentNavBgTaskNotif\n        component={component}\n        currentTask={currentTask}\n        currentTaskOnSameBranch={currentTaskOnSameBranch}\n        isInProgress={isInProgress}\n        isPending={isPending}\n      />\n    );\n  }\n\n  const contextNavHeight = notifComponent ? contextNavHeightRaw + 30 : contextNavHeightRaw;\n\n  return (\n    <ContextNavBar height={contextNavHeight} id=\"context-navigation\" notif={notifComponent}>\n      <div\n        className={classNames('display-flex-center display-flex-space-between little-padded-top', {\n          'padded-bottom': warnings.length === 0\n        })}>\n        <Header\n          branchLikes={branchLikes}\n          component={component}\n          currentBranchLike={currentBranchLike}\n        />\n        <HeaderMeta\n          branchLike={currentBranchLike}\n          component={component}\n          onWarningDismiss={props.onWarningDismiss}\n          warnings={warnings}\n        />\n      </div>\n      <Menu\n        branchLike={currentBranchLike}\n        branchLikes={branchLikes}\n        component={component}\n        isInProgress={isInProgress}\n        isPending={isPending}\n        onToggleProjectInfo={() => setDisplayProjectInfo(!displayProjectInfo)}\n      />\n      <InfoDrawer\n        displayed={displayProjectInfo}\n        onClose={() => setDisplayProjectInfo(false)}\n        top={globalNavHeightRaw + contextNavHeightRaw}>\n        <ProjectInformation\n          branchLike={currentBranchLike}\n          component={component}\n          onComponentChange={props.onComponentChange}\n        />\n      </InfoDrawer>\n    </ContextNavBar>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { differenceBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getBranches, getPullRequests } from '../../api/branches';\nimport { getAnalysisStatus, getTasksForComponent } from '../../api/ce';\nimport { getComponentData } from '../../api/components';\nimport { getComponentNavigation } from '../../api/nav';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport {\n  getBranchLikeQuery,\n  isBranch,\n  isMainBranch,\n  isPullRequest\n} from '../../helpers/branch-like';\nimport { getPortfolioUrl } from '../../helpers/urls';\nimport {\n  fetchOrganization,\n  registerBranchStatus,\n  requireAuthorization\n} from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport { isPortfolioLike } from '../../types/component';\nimport { Task, TaskStatuses, TaskWarning } from '../../types/tasks';\nimport ComponentContainerNotFound from './ComponentContainerNotFound';\nimport { ComponentContext } from './ComponentContext';\nimport PageUnavailableDueToIndexation from './indexation/PageUnavailableDueToIndexation';\nimport ComponentNav from './nav/component/ComponentNav';\n\ninterface Props {\n  children: React.ReactElement;\n  fetchOrganization: (organization: string) => void;\n  location: Pick<Location, 'query' | 'pathname'>;\n  registerBranchStatus: (branchLike: BranchLike, component: string, status: T.Status) => void;\n  requireAuthorization: (router: Pick<Router, 'replace'>) => void;\n  router: Pick<Router, 'replace'>;\n}\n\ninterface State {\n  branchLike?: BranchLike;\n  branchLikes: BranchLike[];\n  component?: T.Component;\n  currentTask?: Task;\n  isPending: boolean;\n  loading: boolean;\n  tasksInProgress?: Task[];\n  warnings: TaskWarning[];\n}\n\nconst FETCH_STATUS_WAIT_TIME = 3000;\n\nexport class ComponentContainer extends React.PureComponent<Props, State> {\n  watchStatusTimer?: number;\n  mounted = false;\n  state: State = { branchLikes: [], isPending: false, loading: true, warnings: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchComponent();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.query.id !== this.props.location.query.id ||\n      prevProps.location.query.branch !== this.props.location.query.branch ||\n      prevProps.location.query.pullRequest !== this.props.location.query.pullRequest\n    ) {\n      this.fetchComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.clearTimeout(this.watchStatusTimer);\n  }\n\n  addQualifier = (component: T.Component) => ({\n    ...component,\n    qualifier: component.breadcrumbs[component.breadcrumbs.length - 1].qualifier\n  });\n\n  fetchComponent() {\n    const { branch, id: key, pullRequest } = this.props.location.query;\n    this.setState({ loading: true });\n\n    const onError = (response?: Response) => {\n      if (this.mounted) {\n        if (response && response.status === 403) {\n          this.props.requireAuthorization(this.props.router);\n        } else {\n          this.setState({ component: undefined, loading: false });\n        }\n      }\n    };\n\n    Promise.all([\n      getComponentNavigation({ component: key, branch, pullRequest }),\n      getComponentData({ component: key, branch, pullRequest })\n    ])\n      .then(([nav, { component }]) => {\n        const componentWithQualifier = this.addQualifier({ ...nav, ...component });\n\n        /*\n         * There used to be a redirect from /dashboard to /portfolio which caused issues.\n         * Links should be fixed to not rely on this redirect, but:\n         * This is a fail-safe in case there are still some faulty links remaining.\n         */\n        if (\n          this.props.location.pathname.match('dashboard') &&\n          isPortfolioLike(componentWithQualifier.qualifier)\n        ) {\n          this.props.router.replace(getPortfolioUrl(component.key));\n        }\n\n        return componentWithQualifier;\n      }, onError)\n      .then(this.fetchBranches)\n      .then(\n        ({ branchLike, branchLikes, component }) => {\n          if (this.mounted) {\n            this.setState({\n              branchLike,\n              branchLikes,\n              component,\n              loading: false\n            });\n            this.fetchStatus(component);\n            this.fetchWarnings(component, branchLike);\n          }\n        },\n        () => {}\n      );\n  }\n\n  fetchBranches = (\n    component: T.Component\n  ): Promise<{\n    branchLike?: BranchLike;\n    branchLikes: BranchLike[];\n    component: T.Component;\n  }> => {\n    const breadcrumb = component.breadcrumbs.find(({ qualifier }) => {\n      return ['APP', 'TRK'].includes(qualifier);\n    });\n\n    if (breadcrumb) {\n      const { key } = breadcrumb;\n      return Promise.all([\n        getBranches(key),\n        breadcrumb.qualifier === 'APP' ? Promise.resolve([]) : getPullRequests(key)\n      ]).then(([branches, pullRequests]) => {\n        const branchLikes = [...branches, ...pullRequests];\n        const branchLike = this.getCurrentBranchLike(branchLikes);\n\n        this.registerBranchStatuses(branchLikes, component);\n\n        return { branchLike, branchLikes, component };\n      });\n    } else {\n      return Promise.resolve({ branchLikes: [], component });\n    }\n  };\n\n  fetchStatus = (component: T.Component) => {\n    getTasksForComponent(component.key).then(\n      ({ current, queue }) => {\n        if (this.mounted) {\n          let shouldFetchComponent = false;\n          this.setState(\n            ({ branchLike, component, currentTask, tasksInProgress }) => {\n              const newCurrentTask = this.getCurrentTask(current, branchLike);\n              const pendingTasks = this.getPendingTasks(queue, branchLike);\n              const newTasksInProgress = pendingTasks.filter(\n                task => task.status === TaskStatuses.InProgress\n              );\n\n              const currentTaskChanged =\n                (!currentTask && newCurrentTask) ||\n                (currentTask && newCurrentTask && currentTask.id !== newCurrentTask.id);\n              const progressChanged =\n                tasksInProgress &&\n                (newTasksInProgress.length !== tasksInProgress.length ||\n                  differenceBy(newTasksInProgress, tasksInProgress, 'id').length > 0);\n\n              shouldFetchComponent = Boolean(currentTaskChanged || progressChanged);\n              if (\n                !shouldFetchComponent &&\n                component &&\n                (newTasksInProgress.length > 0 || !component.analysisDate)\n              ) {\n                // Refresh the status as long as there is tasks in progress or no analysis\n                window.clearTimeout(this.watchStatusTimer);\n                this.watchStatusTimer = window.setTimeout(\n                  () => this.fetchStatus(component),\n                  FETCH_STATUS_WAIT_TIME\n                );\n              }\n\n              const isPending = pendingTasks.some(task => task.status === TaskStatuses.Pending);\n              return {\n                currentTask: newCurrentTask,\n                isPending,\n                tasksInProgress: newTasksInProgress\n              };\n            },\n            () => {\n              if (shouldFetchComponent) {\n                this.fetchComponent();\n              }\n            }\n          );\n        }\n      },\n      () => {}\n    );\n  };\n\n  fetchWarnings = (component: T.Component, branchLike?: BranchLike) => {\n    if (component.qualifier === 'TRK') {\n      getAnalysisStatus({\n        component: component.key,\n        ...getBranchLikeQuery(branchLike)\n      }).then(\n        ({ component }) => {\n          this.setState({ warnings: component.warnings });\n        },\n        () => {}\n      );\n    }\n  };\n\n  getCurrentBranchLike = (branchLikes: BranchLike[]) => {\n    const { query } = this.props.location;\n    return query.pullRequest\n      ? branchLikes.find(b => isPullRequest(b) && b.key === query.pullRequest)\n      : branchLikes.find(b => isBranch(b) && (query.branch ? b.name === query.branch : b.isMain));\n  };\n\n  getCurrentTask = (current: Task, branchLike?: BranchLike) => {\n    if (!current) {\n      return undefined;\n    }\n\n    return current.status === TaskStatuses.Failed || this.isSameBranch(current, branchLike)\n      ? current\n      : undefined;\n  };\n\n  getPendingTasks = (pendingTasks: Task[], branchLike?: BranchLike) => {\n    return pendingTasks.filter(task => this.isSameBranch(task, branchLike));\n  };\n\n  isSameBranch = (task: Pick<Task, 'branch' | 'pullRequest'>, branchLike?: BranchLike) => {\n    if (branchLike) {\n      if (isMainBranch(branchLike)) {\n        return (!task.pullRequest && !task.branch) || branchLike.name === task.branch;\n      }\n      if (isPullRequest(branchLike)) {\n        return branchLike.key === task.pullRequest;\n      }\n      if (isBranch(branchLike)) {\n        return branchLike.name === task.branch;\n      }\n    }\n    return !task.branch && !task.pullRequest;\n  };\n\n  registerBranchStatuses = (branchLikes: BranchLike[], component: T.Component) => {\n    branchLikes.forEach(branchLike => {\n      if (branchLike.status) {\n        this.props.registerBranchStatus(\n          branchLike,\n          component.key,\n          branchLike.status.qualityGateStatus\n        );\n      }\n    });\n  };\n\n  handleComponentChange = (changes: Partial<T.Component>) => {\n    if (this.mounted) {\n      this.setState(state => {\n        if (state.component) {\n          const newComponent: T.Component = { ...state.component, ...changes };\n          return { component: newComponent };\n        }\n        return null;\n      });\n    }\n  };\n\n  handleBranchesChange = () => {\n    if (this.mounted && this.state.component) {\n      this.fetchBranches(this.state.component).then(\n        ({ branchLike, branchLikes }) => {\n          if (this.mounted) {\n            this.setState({ branchLike, branchLikes });\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  handleWarningDismiss = () => {\n    const { component } = this.state;\n    if (component !== undefined) {\n      this.fetchWarnings(component);\n    }\n  };\n\n  render() {\n    const { component, loading } = this.state;\n\n    if (!loading && !component) {\n      return <ComponentContainerNotFound />;\n    }\n\n    if (component?.needIssueSync) {\n      return <PageUnavailableDueToIndexation component={component} />;\n    }\n\n    const { branchLike, branchLikes, currentTask, isPending, tasksInProgress } = this.state;\n    const isInProgress = tasksInProgress && tasksInProgress.length > 0;\n\n    return (\n      <div>\n        {component && !['FIL', 'UTS'].includes(component.qualifier) && (\n          <ComponentNav\n            branchLikes={branchLikes}\n            component={component}\n            currentBranchLike={branchLike}\n            currentTask={currentTask}\n            currentTaskOnSameBranch={currentTask && this.isSameBranch(currentTask, branchLike)}\n            isInProgress={isInProgress}\n            isPending={isPending}\n            onComponentChange={this.handleComponentChange}\n            onWarningDismiss={this.handleWarningDismiss}\n            warnings={this.state.warnings}\n          />\n        )}\n        {loading ? (\n          <div className=\"page page-limited\">\n            <i className=\"spinner\" />\n          </div>\n        ) : (\n          <ComponentContext.Provider value={{ branchLike, component }}>\n            {React.cloneElement(this.props.children, {\n              branchLike,\n              branchLikes,\n              component,\n              isInProgress,\n              isPending,\n              onBranchesChange: this.handleBranchesChange,\n              onComponentChange: this.handleComponentChange\n            })}\n          </ComponentContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchOrganization, registerBranchStatus, requireAuthorization };\n\nexport default withRouter(connect(null, mapDispatchToProps)(ComponentContainer));\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { isDefined } from 'sonar-ui-common/helpers/types';\nimport './CodeSnippet.css';\n\nexport interface CodeSnippetProps {\n  isOneLine?: boolean;\n  noCopy?: boolean;\n  snippet: string | (string | undefined)[];\n}\n\nexport default function CodeSnippet(props: CodeSnippetProps) {\n  const { isOneLine, noCopy, snippet } = props;\n  const snippetRef = React.useRef<HTMLPreElement>(null);\n\n  let finalSnippet: string;\n  if (Array.isArray(snippet)) {\n    finalSnippet = snippet.filter(line => isDefined(line)).join(isOneLine ? ' ' : ' \\\\\\n  ');\n  } else {\n    finalSnippet = snippet;\n  }\n\n  return (\n    <div className={classNames('code-snippet spacer-top spacer-bottom display-flex-row', {})}>\n      <pre className=\"flex-1\" ref={snippetRef}>\n        {finalSnippet}\n      </pre>\n      {!noCopy && <ClipboardButton copyValue={finalSnippet} />}\n    </div>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./TagsList.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface MultiSelectOptionProps {\n  active?: boolean;\n  custom?: boolean;\n  disabled?: boolean;\n  element: string;\n  onHover: (element: string) => void;\n  onSelectChange: (selected: boolean, element: string) => void;\n  renderLabel: (element: string) => React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function MultiSelectOption(props: MultiSelectOptionProps) {\n  const { active, custom, disabled, element, selected } = props;\n  const onHover = () => props.onHover(element);\n  const className = classNames({ active, disabled });\n  const label = props.renderLabel(element);\n\n  return (\n    <li onFocus={onHover} onMouseOver={onHover}>\n      <Checkbox\n        checked={Boolean(selected)}\n        className={className}\n        disabled={disabled}\n        id={element}\n        onCheck={props.onSelectChange}>\n        {custom ? (\n          <span\n            aria-label={`${translate('create_new_element')}: ${label}`}\n            className=\"little-spacer-left\">\n            <span aria-hidden={true} className=\"little-spacer-right\">\n              +\n            </span>\n            {label}\n          </span>\n        ) : (\n          <span className=\"little-spacer-left\">{label}</span>\n        )}\n      </Checkbox>\n    </li>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelectOption from './MultiSelectOption';\n\ninterface Props {\n  allowNewElements?: boolean;\n  allowSelection?: boolean;\n  elements: string[];\n  filterSelected?: (query: string, selectedElements: string[]) => string[];\n  footerNode?: React.ReactNode;\n  listSize?: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  placeholder: string;\n  renderLabel?: (element: string) => React.ReactNode;\n  selectedElements: string[];\n  validateSearchInput?: (value: string) => string;\n}\n\ninterface State {\n  activeIdx: number;\n  loading: boolean;\n  query: string;\n  selectedElements: string[];\n  unselectedElements: string[];\n}\n\ninterface DefaultProps {\n  filterSelected: (query: string, selectedElements: string[]) => string[];\n  listSize: number;\n  renderLabel: (element: string) => React.ReactNode;\n  validateSearchInput: (value: string) => string;\n}\n\ntype PropsWithDefault = Props & DefaultProps;\n\nexport default class MultiSelect extends React.PureComponent<Props, State> {\n  container?: HTMLDivElement | null;\n  searchInput?: HTMLInputElement | null;\n  mounted = false;\n\n  static defaultProps: DefaultProps = {\n    filterSelected: (query: string, selectedElements: string[]) =>\n      selectedElements.filter(elem => elem.includes(query)),\n    listSize: 0,\n    renderLabel: (element: string) => element,\n    validateSearchInput: (value: string) => value\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeIdx: 0,\n      loading: true,\n      query: '',\n      selectedElements: [],\n      unselectedElements: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onSearchQuery('');\n    this.updateSelectedElements(this.props as PropsWithDefault);\n    this.updateUnselectedElements(this.props as PropsWithDefault);\n    if (this.container) {\n      this.container.addEventListener('keydown', this.handleKeyboard, true);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: PropsWithDefault) {\n    if (\n      this.props.elements !== nextProps.elements ||\n      this.props.selectedElements !== nextProps.selectedElements\n    ) {\n      this.updateSelectedElements(nextProps);\n      this.updateUnselectedElements(nextProps);\n\n      const totalElements = this.getAllElements(nextProps, this.state).length;\n      if (this.state.activeIdx >= totalElements) {\n        this.setState({ activeIdx: totalElements - 1 });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.container) {\n      this.container.removeEventListener('keydown', this.handleKeyboard);\n    }\n  }\n\n  handleSelectChange = (selected: boolean, item: string) => {\n    if (selected) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  handleSearchChange = (value: string) => {\n    this.onSearchQuery((this.props as PropsWithDefault).validateSearchInput(value));\n  };\n\n  handleElementHover = (element: string) => {\n    this.setState((prevState, props) => {\n      return { activeIdx: this.getAllElements(props, prevState).indexOf(element) };\n    });\n  };\n\n  handleKeyboard = (evt: KeyboardEvent) => {\n    switch (evt.keyCode) {\n      case 40: // down\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectNextElement);\n        break;\n      case 38: // up\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.setState(this.selectPreviousElement);\n        break;\n      case 37: // left\n      case 39: // right\n        evt.stopPropagation();\n        break;\n      case 13: // enter\n        if (this.state.activeIdx >= 0) {\n          this.toggleSelect(this.getAllElements(this.props, this.state)[this.state.activeIdx]);\n        }\n        break;\n    }\n  };\n\n  onSearchQuery = (query: string) => {\n    this.setState({ activeIdx: 0, loading: true, query });\n    this.props.onSearch(query).then(this.stopLoading, this.stopLoading);\n  };\n\n  onSelectItem = (item: string) => {\n    if (this.isNewElement(item, this.props)) {\n      this.onSearchQuery('');\n    }\n    this.props.onSelect(item);\n  };\n\n  onUnselectItem = (item: string) => this.props.onUnselect(item);\n\n  isNewElement = (elem: string, { selectedElements, elements }: Props) =>\n    elem.length > 0 && selectedElements.indexOf(elem) === -1 && elements.indexOf(elem) === -1;\n\n  updateSelectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (state.query) {\n        return {\n          selectedElements: props.filterSelected(state.query, props.selectedElements)\n        };\n      } else {\n        return { selectedElements: [...props.selectedElements] };\n      }\n    });\n  };\n\n  updateUnselectedElements = (props: PropsWithDefault) => {\n    this.setState((state: State) => {\n      if (props.listSize === 0) {\n        return { unselectedElements: difference(props.elements, props.selectedElements) };\n      } else if (props.listSize < state.selectedElements.length) {\n        return { unselectedElements: [] };\n      } else {\n        return {\n          unselectedElements: difference(props.elements, props.selectedElements).slice(\n            0,\n            props.listSize - state.selectedElements.length\n          )\n        };\n      }\n    });\n  };\n\n  getAllElements = (props: Props, state: State) => {\n    if (this.isNewElement(state.query, props)) {\n      return [...state.selectedElements, ...state.unselectedElements, state.query];\n    } else {\n      return [...state.selectedElements, ...state.unselectedElements];\n    }\n  };\n\n  setElementActive = (idx: number) => this.setState({ activeIdx: idx });\n\n  selectNextElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx < 0 || activeIdx >= allElements.length - 1) {\n      return { activeIdx: 0 };\n    } else {\n      return { activeIdx: activeIdx + 1 };\n    }\n  };\n\n  selectPreviousElement = (state: State, props: Props) => {\n    const { activeIdx } = state;\n    const allElements = this.getAllElements(props, state);\n    if (activeIdx <= 0) {\n      const lastIdx = allElements.length - 1;\n      return { activeIdx: lastIdx };\n    } else {\n      return { activeIdx: activeIdx - 1 };\n    }\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  toggleSelect = (item: string) => {\n    if (this.props.selectedElements.indexOf(item) === -1) {\n      this.onSelectItem(item);\n    } else {\n      this.onUnselectItem(item);\n    }\n  };\n\n  render() {\n    const { allowSelection = true, allowNewElements = true, footerNode = '' } = this.props;\n    const { renderLabel } = this.props as PropsWithDefault;\n    const { query, activeIdx, selectedElements, unselectedElements } = this.state;\n    const activeElement = this.getAllElements(this.props, this.state)[activeIdx];\n    const showNewElement = allowNewElements && this.isNewElement(query, this.props);\n    const infiniteList = this.props.listSize === 0;\n    const listClasses = classNames('menu', {\n      'menu-vertically-limited': infiniteList,\n      'spacer-top': infiniteList,\n      'with-top-separator': infiniteList,\n      'with-bottom-separator': Boolean(footerNode)\n    });\n\n    return (\n      <div className=\"multi-select\" ref={div => (this.container = div)}>\n        <div className=\"menu-search\">\n          <SearchBox\n            autoFocus={true}\n            className=\"little-spacer-top\"\n            loading={this.state.loading}\n            onChange={this.handleSearchChange}\n            placeholder={this.props.placeholder}\n            value={query}\n          />\n        </div>\n        <ul className={listClasses}>\n          {selectedElements.length > 0 &&\n            selectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n                selected={true}\n              />\n            ))}\n          {unselectedElements.length > 0 &&\n            unselectedElements.map(element => (\n              <MultiSelectOption\n                active={activeElement === element}\n                disabled={!allowSelection}\n                element={element}\n                key={element}\n                onHover={this.handleElementHover}\n                onSelectChange={this.handleSelectChange}\n                renderLabel={renderLabel}\n              />\n            ))}\n          {showNewElement && (\n            <MultiSelectOption\n              active={activeElement === query}\n              custom={true}\n              element={query}\n              key={query}\n              onHover={this.handleElementHover}\n              onSelectChange={this.handleSelectChange}\n              renderLabel={renderLabel}\n            />\n          )}\n          {!showNewElement && selectedElements.length < 1 && unselectedElements.length < 1 && (\n            <li className=\"spacer-left\">{translateWithParameters('no_results_for_x', query)}</li>\n          )}\n        </ul>\n        {footerNode}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport TagsIcon from 'sonar-ui-common/components/icons/TagsIcon';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport './TagsList.css';\n\ninterface Props {\n  allowUpdate?: boolean;\n  className?: string;\n  tags: string[];\n}\n\nexport default function TagsList({ allowUpdate = false, className, tags }: Props) {\n  return (\n    <span\n      aria-label={translateWithParameters('tags_list_x', tags.join(', '))}\n      className={classNames('tags-list', className)}>\n      <TagsIcon className=\"text-middle\" />\n      <span aria-hidden={true} className=\"text-ellipsis text-middle\" title={tags.join(', ')}>\n        {tags.join(', ')}\n      </span>\n      {allowUpdate && <DropdownIcon className=\"text-middle\" />}\n    </span>\n  );\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".tags-list{white-space:nowrap;line-height:16px}.tags-list i:before{font-size:12px}.tags-list span{display:inline-block;vertical-align:middle;text-align:left;max-width:220px;padding-left:4px;padding-right:4px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BranchParameters } from '../types/branch-like';\n\ntype NavComponent = T.Omit<T.Component, 'alm' | 'qualifier' | 'leakPeriodDate' | 'path' | 'tags'>;\n\nexport function getComponentNavigation(\n  data: { component: string } & BranchParameters\n): Promise<NavComponent> {\n  return getJSON('/api/navigation/component', data).catch(throwGlobalError);\n}\n\nexport function getMarketplaceNavigation(): Promise<{ serverId: string; ncloc: number }> {\n  return getJSON('/api/navigation/marketplace').catch(throwGlobalError);\n}\n\nexport function getSettingsNavigation(): Promise<any> {\n  return getJSON('/api/navigation/settings').catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport MultiSelect from '../common/MultiSelect';\nimport './TagsList.css';\n\ninterface Props {\n  listSize: number;\n  onSearch: (query: string) => Promise<void>;\n  onSelect: (item: string) => void;\n  onUnselect: (item: string) => void;\n  selectedTags: string[];\n  tags: string[];\n}\n\nexport default function TagsSelector(props: Props) {\n  return (\n    <MultiSelect\n      elements={props.tags}\n      listSize={props.listSize}\n      onSearch={props.onSearch}\n      onSelect={props.onSelect}\n      onUnselect={props.onUnselect}\n      placeholder={translate('search.search_for_tags')}\n      selectedElements={props.selectedTags}\n      validateSearchInput={validateTag}\n    />\n  );\n}\n\nexport function validateTag(value: string) {\n  // Allow only a-z, 0-9, '+', '-', '#', '.'\n  return value.toLowerCase().replace(/[^-a-z0-9+#.]/gi, '');\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Query } from './utils';\n\nexport const STATUSES = {\n  ALL: '__ALL__',\n  ALL_EXCEPT_PENDING: '__ALL_EXCEPT_PENDING__'\n};\n\nexport const ALL_TYPES = 'ALL_TYPES';\n\nexport const CURRENTS = {\n  ALL: '__ALL__',\n  ONLY_CURRENTS: 'CURRENTS'\n};\n\nexport const DATE = {\n  ANY: 'ANY',\n  TODAY: 'TODAY',\n  CUSTOM: 'CUSTOM'\n};\n\nexport const DEFAULT_FILTERS: Query = {\n  status: STATUSES.ALL_EXCEPT_PENDING,\n  taskType: ALL_TYPES,\n  currents: CURRENTS.ALL,\n  minSubmittedAt: undefined,\n  maxExecutedAt: undefined,\n  query: ''\n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DEBOUNCE_DELAY = 250;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BranchIcon from 'sonar-ui-common/components/icons/BranchIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport PullRequestIcon from 'sonar-ui-common/components/icons/PullRequestIcon';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { BranchLike } from '../../types/branch-like';\n\nexport interface BranchLikeIconProps extends IconProps {\n  branchLike: BranchLike;\n}\n\nexport default function BranchLikeIcon({ branchLike, ...props }: BranchLikeIconProps) {\n  if (isPullRequest(branchLike)) {\n    return <PullRequestIcon {...props} />;\n  } else {\n    return <BranchIcon {...props} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport HomeIcon from 'sonar-ui-common/components/icons/HomeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getCurrentUser, Store } from '../../store/rootReducer';\nimport { setHomePage } from '../../store/users';\n\ninterface StateProps {\n  currentUser: T.CurrentUser;\n}\n\ninterface DispatchProps {\n  setHomePage: (homepage: T.HomePage) => void;\n}\n\ninterface Props extends StateProps, DispatchProps {\n  className?: string;\n  currentPage: T.HomePage;\n}\n\nexport const DEFAULT_HOMEPAGE: T.HomePage = { type: 'PROJECTS' };\n\nexport class HomePageSelect extends React.PureComponent<Props> {\n  handleClick = () => {\n    this.props.setHomePage(this.props.currentPage);\n  };\n\n  handleReset = () => {\n    this.props.setHomePage(DEFAULT_HOMEPAGE);\n  };\n\n  render() {\n    const { currentPage, currentUser } = this.props;\n\n    if (!isLoggedIn(currentUser)) {\n      return null;\n    }\n\n    const { homepage } = currentUser;\n    const isChecked = homepage !== undefined && isSameHomePage(homepage, currentPage);\n    const isDefault = isChecked && isSameHomePage(currentPage, DEFAULT_HOMEPAGE);\n    const tooltip = isChecked\n      ? translate(isDefault ? 'homepage.current.is_default' : 'homepage.current')\n      : translate('homepage.check');\n\n    return (\n      <Tooltip overlay={tooltip}>\n        {isDefault ? (\n          <span\n            aria-label={tooltip}\n            className={classNames('display-inline-block', this.props.className)}>\n            <HomeIcon filled={isChecked} />\n          </span>\n        ) : (\n          <ButtonLink\n            aria-label={tooltip}\n            className={classNames('link-no-underline', 'set-homepage-link', this.props.className)}\n            onClick={isChecked ? this.handleReset : this.handleClick}>\n            <HomeIcon filled={isChecked} />\n          </ButtonLink>\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  currentUser: getCurrentUser(state)\n});\n\nconst mapDispatchToProps: DispatchProps = { setHomePage };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageSelect);\n\nfunction isSameHomePage(a: T.HomePage, b: T.HomePage) {\n  return (\n    a.type === b.type &&\n    (a as any).branch === (b as any).branch &&\n    (a as any).component === (b as any).component &&\n    (a as any).organization === (b as any).organization\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getBranchLikeQuery } from '../../helpers/branch-like';\nimport { getComponentDrilldownUrl, getComponentIssuesUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\n\nconst ISSUE_MEASURES = [\n  'violations',\n  'new_violations',\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'new_blocker_violations',\n  'new_critical_violations',\n  'new_major_violations',\n  'new_minor_violations',\n  'new_info_violations',\n  'open_issues',\n  'reopened_issues',\n  'confirmed_issues',\n  'false_positive_issues',\n  'code_smells',\n  'new_code_smells',\n  'bugs',\n  'new_bugs',\n  'vulnerabilities',\n  'new_vulnerabilities'\n];\n\nconst issueParamsPerMetric: T.Dict<T.Dict<string>> = {\n  blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  new_blocker_violations: { resolved: 'false', severities: 'BLOCKER' },\n  critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  new_critical_violations: { resolved: 'false', severities: 'CRITICAL' },\n  major_violations: { resolved: 'false', severities: 'MAJOR' },\n  new_major_violations: { resolved: 'false', severities: 'MAJOR' },\n  minor_violations: { resolved: 'false', severities: 'MINOR' },\n  new_minor_violations: { resolved: 'false', severities: 'MINOR' },\n  info_violations: { resolved: 'false', severities: 'INFO' },\n  new_info_violations: { resolved: 'false', severities: 'INFO' },\n  open_issues: { resolved: 'false', statuses: 'OPEN' },\n  reopened_issues: { resolved: 'false', statuses: 'REOPENED' },\n  confirmed_issues: { resolved: 'false', statuses: 'CONFIRMED' },\n  false_positive_issues: { resolutions: 'FALSE-POSITIVE' },\n  code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  new_code_smells: { resolved: 'false', types: 'CODE_SMELL' },\n  bugs: { resolved: 'false', types: 'BUG' },\n  new_bugs: { resolved: 'false', types: 'BUG' },\n  vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' },\n  new_vulnerabilities: { resolved: 'false', types: 'VULNERABILITY' }\n};\n\ninterface Props {\n  branchLike?: BranchLike;\n  children?: React.ReactNode;\n  className?: string;\n  component: string;\n  metric: string;\n  sinceLeakPeriod?: boolean;\n}\n\nexport default class DrilldownLink extends React.PureComponent<Props> {\n  isIssueMeasure = () => {\n    return ISSUE_MEASURES.indexOf(this.props.metric) !== -1;\n  };\n\n  propsToIssueParams = () => {\n    const params: T.Dict<string | boolean> = {\n      ...(issueParamsPerMetric[this.props.metric] || { resolved: 'false' })\n    };\n\n    if (this.props.sinceLeakPeriod) {\n      params.sinceLeakPeriod = true;\n    }\n\n    return params;\n  };\n\n  renderIssuesLink = () => {\n    const url = getComponentIssuesUrl(this.props.component, {\n      ...this.propsToIssueParams(),\n      ...getBranchLikeQuery(this.props.branchLike)\n    });\n\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  };\n\n  render() {\n    if (this.isIssueMeasure()) {\n      return this.renderIssuesLink();\n    }\n\n    const url = getComponentDrilldownUrl({\n      componentKey: this.props.component,\n      metric: this.props.metric,\n      branchLike: this.props.branchLike,\n      listView: true\n    });\n    return (\n      <Link className={this.props.className} to={url}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { isWebUri } from 'valid-url';\n\nexport interface DocumentationTooltipProps {\n  children?: React.ReactNode;\n  className?: string;\n  content?: React.ReactNode;\n  links?: Array<{ href: string; label: string }>;\n  title?: string;\n}\n\nexport default function DocumentationTooltip(props: DocumentationTooltipProps) {\n  const { className, content, links, title } = props;\n\n  return (\n    <HelpTooltip\n      className={className}\n      overlay={\n        <div className=\"big-padded-top big-padded-bottom\">\n          {title && (\n            <div className=\"spacer-bottom\">\n              <strong>{title}</strong>\n            </div>\n          )}\n\n          {content && <p>{content}</p>}\n\n          {links && (\n            <>\n              <hr className=\"big-spacer-top big-spacer-bottom\" />\n\n              {links.map(({ href, label }) => (\n                <div className=\"little-spacer-bottom\" key={label}>\n                  <a\n                    className=\"display-inline-flex-center link-with-icon\"\n                    href={href}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    {isWebUri(href) && <DetachIcon size={14} className=\"spacer-right\" />}\n                    <span>{label}</span>\n                  </a>\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n      }>\n      {props.children}\n    </HelpTooltip>\n  );\n}\n"],"sourceRoot":""}