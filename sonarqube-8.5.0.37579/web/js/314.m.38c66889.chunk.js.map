{"version":3,"sources":["webpack:///./src/main/js/apps/permission-templates/utils.ts","webpack:///./src/main/js/apps/permission-templates/components/Form.tsx","webpack:///./src/main/js/apps/permission-templates/components/Header.tsx","webpack:///./src/main/js/apps/permission-templates/components/ListHeader.tsx","webpack:///./src/main/js/apps/permission-templates/components/DeleteForm.tsx","webpack:///./src/main/js/apps/permission-templates/components/ActionsCell.tsx","webpack:///./src/main/js/apps/permission-templates/components/Defaults.tsx","webpack:///./src/main/js/apps/permission-templates/components/NameCell.tsx","webpack:///./src/main/js/apps/permission-templates/components/PermissionCell.tsx","webpack:///./src/main/js/apps/permission-templates/components/ListItem.tsx","webpack:///./src/main/js/apps/permission-templates/components/List.tsx","webpack:///./src/main/js/apps/permission-templates/components/Home.tsx","webpack:///./src/main/js/apps/permission-templates/components/TemplateDetails.tsx","webpack:///./src/main/js/apps/permission-templates/components/TemplateHeader.tsx","webpack:///./src/main/js/apps/permission-templates/components/Template.tsx","webpack:///./src/main/js/apps/permission-templates/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/apps/permissions/utils.ts","webpack:///./src/main/js/api/permissions.ts","webpack:///./src/main/js/apps/permissions/styles.css?a730","webpack:///./src/main/js/apps/permissions/styles.css","webpack:///./src/main/js/apps/permissions/shared/components/SearchForm.tsx","webpack:///./src/main/js/apps/permissions/shared/components/PermissionCell.tsx","webpack:///./src/main/js/apps/permissions/shared/components/GroupHolder.tsx","webpack:///./src/main/js/apps/permissions/shared/components/PermissionHeader.tsx","webpack:///./src/main/js/apps/permissions/shared/components/UserHolder.tsx","webpack:///./src/main/js/apps/permissions/shared/components/HoldersList.tsx","webpack:///./src/main/js/components/common/OrganizationHelmet.tsx"],"names":["PERMISSIONS_ORDER","props","super","mounted","handleSubmit","this","onSubmit","description","state","name","projectKeyPattern","then","onClose","handleNameChange","event","setState","currentTarget","value","handleDescriptionChange","handleProjectKeyPatternChange","permissionTemplate","header","size","onCloseClick","onFormSubmit","submitting","id","className","htmlFor","autoFocus","maxLength","onChange","required","type","loading","disabled","confirmButtonText","onClick","createModal","handleCreateClick","handleCreateModalClose","handleCreateModalSubmit","data","organization","key","response","refresh","pathname","router","push","query","ready","withRouter","permission","InstanceMessage","message","Alert","variant","cells","permissions","map","overlay","renderTooltip","DeleteForm","t","deleteForm","updateModal","handleUpdateClick","handleCloseUpdateModal","handleSubmitUpdateModal","handleDeleteClick","handleCloseDeleteForm","handleDeleteSubmit","templateId","replace","setDefault","qualifier","topQualifiers","isDefault","defaultFor","availableQualifiers","getAvailableQualifiers","length","renderIfSingleTopQualifier","renderIfMultipleTopQualifiers","child","ActionsDropdown","renderSetDefaultLink","renderSetDefaultsControl","fromDetails","to","destructive","Defaults","template","qualifiersToDisplay","qualifiers","join","NameCell","PermissionCell","p","withProjectCreator","usersCount","groupsCount","ListItem","List","permissionTemplates","Home","defer","title","TemplateDetails","TemplateHeader","filter","groups","users","requestHolders","realQuery","selectedPermission","requests","finalQuery","Promise","resolve","all","responses","handleToggleUser","user","login","handleToggleProjectCreator","hasPermission","includes","handleToggleGroup","group","groupName","Object","assign","handleSearch","handleFilter","handleSelectPermission","undefined","shouldDisplayCreator","creatorPermissions","CREATOR_NAME","isFiltered","matchQuery","toLocaleLowerCase","toLowerCase","matchPermission","allUsers","creator","unshift","HoldersList","onSelectPermission","onToggleGroup","onToggleUser","showPublicProjectsWarning","SearchForm","onFilter","onSearch","requestPermissions","r","indexOf","sortPermissions","defaultTemplates","forEach","defaultTemplate","mergeDefaultsToTemplates","basePermissions","basePermission","projectPermission","find","mergePermissionsToTemplates","location","Suggestions","suggestions","OrganizationHelmet","renderTemplate","renderHome","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE","PERMISSIONS_ORDER_GLOBAL","category","PERMISSIONS_ORDER_GLOBAL_GOV","PERMISSIONS_ORDER_FOR_VIEW","PERMISSIONS_ORDER_BY_QUALIFIER","TRK","VW","SVW","APP","DEV","convertToPermissionDefinition","l10nPrefix","getMessage","messageKey","cloudMessageKey","convertToPermissionDefinitions","isPermissionDefinitionGroup","Boolean","grantPermissionToUser","catch","revokePermissionFromUser","grantPermissionToGroup","revokePermissionFromGroup","getPermissionTemplates","url","createPermissionTemplate","updatePermissionTemplate","deletePermissionTemplate","setDefaultPermissionTemplate","applyTemplateToProject","bulkApplyTemplate","grantTemplatePermissionToUser","revokeTemplatePermissionFromUser","grantTemplatePermissionToGroup","revokeTemplatePermissionFromGroup","addProjectCreatorToTemplate","removeProjectCreatorFromTemplate","getPermissionsUsersForComponent","ps","getPermissionsGroupsForComponent","getGlobalPermissionsUsers","getGlobalPermissionsGroups","getPermissionTemplateUsers","q","getPermissionTemplateGroups","changeProjectVisibility","project","visibility","changeProjectDefaultVisibility","projectVisibility","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","filterOptions","label","onCheck","minLength","placeholder","permissionItem","checked","selected","stopLoading","handleCheck","_checked","onToggle","style","whiteSpace","handlePermissionClick","preventDefault","blur","getTooltipOverlay","href","permissionCells","Avatar","hash","avatar","email","initialPermissionsCount","handleGroupToggle","handleUserToggle","getItemInitialPermissionsCount","item","isPermissionUser","columns","colSpan","items","itemWithPermissions","itemWithoutPermissions","children","renderEmpty","renderItem","defaultTitle","titleTemplate"],"mappings":"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","file":"js/314.m.38c66889.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\n\nexport const PERMISSIONS_ORDER = [\n  'user',\n  'codeviewer',\n  'issueadmin',\n  'securityhotspotadmin',\n  'admin',\n  'scan'\n];\n\nexport function sortPermissions(permissions: T.Permission[]) {\n  return sortBy(permissions, p => PERMISSIONS_ORDER.indexOf(p.key));\n}\n\nexport function mergePermissionsToTemplates(\n  permissionTemplates: T.PermissionTemplate[],\n  basePermissions: T.Permission[]\n): T.PermissionTemplate[] {\n  return permissionTemplates.map(permissionTemplate => {\n    // it's important to keep the order of the permission template's permissions\n    // the same as the order of base permissions\n    const permissions = basePermissions.map(basePermission => {\n      const projectPermission = permissionTemplate.permissions.find(\n        p => p.key === basePermission.key\n      );\n      return { usersCount: 0, groupsCount: 0, ...basePermission, ...projectPermission };\n    });\n\n    return { ...permissionTemplate, permissions };\n  });\n}\n\nexport function mergeDefaultsToTemplates(\n  permissionTemplates: T.PermissionTemplate[],\n  defaultTemplates: Array<{ templateId: string; qualifier: string }> = []\n): T.PermissionTemplate[] {\n  return permissionTemplates.map(permissionTemplate => {\n    const defaultFor: string[] = [];\n\n    defaultTemplates.forEach(defaultTemplate => {\n      if (defaultTemplate.templateId === permissionTemplate.id) {\n        defaultFor.push(defaultTemplate.qualifier);\n      }\n    });\n\n    return { ...permissionTemplate, defaultFor };\n  });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  confirmButtonText: string;\n  header: string;\n  onClose: () => void;\n  onSubmit: (data: {\n    description: string;\n    name: string;\n    projectKeyPattern: string;\n  }) => Promise<void>;\n  permissionTemplate?: { description?: string; name: string; projectKeyPattern?: string };\n}\n\ninterface State {\n  description: string;\n  name: string;\n  projectKeyPattern: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: (props.permissionTemplate && props.permissionTemplate.description) || '',\n      name: (props.permissionTemplate && props.permissionTemplate.name) || '',\n      projectKeyPattern:\n        (props.permissionTemplate && props.permissionTemplate.projectKeyPattern) || ''\n    };\n  }\n\n  handleSubmit = () => {\n    return this.props\n      .onSubmit({\n        description: this.state.description,\n        name: this.state.name,\n        projectKeyPattern: this.state.projectKeyPattern\n      })\n      .then(this.props.onClose);\n  };\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleDescriptionChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleProjectKeyPatternChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ projectKeyPattern: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <SimpleModal\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form id=\"permission-template-form\" onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{this.props.header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              <div className=\"modal-field\">\n                <label htmlFor=\"permission-template-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"permission-template-name\"\n                  maxLength={256}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n                <div className=\"modal-field-description\">{translate('should_be_unique')}</div>\n              </div>\n\n              <div className=\"modal-field\">\n                <label htmlFor=\"permission-template-description\">{translate('description')}</label>\n                <textarea\n                  id=\"permission-template-description\"\n                  name=\"description\"\n                  onChange={this.handleDescriptionChange}\n                  value={this.state.description}\n                />\n              </div>\n\n              <div className=\"modal-field\">\n                <label htmlFor=\"permission-template-project-key-pattern\">\n                  {translate('permission_template.key_pattern')}\n                </label>\n                <input\n                  id=\"permission-template-project-key-pattern\"\n                  maxLength={500}\n                  name=\"projectKeyPattern\"\n                  onChange={this.handleProjectKeyPatternChange}\n                  type=\"text\"\n                  value={this.state.projectKeyPattern}\n                />\n                <div className=\"modal-field-description\">\n                  {translate('permission_template.key_pattern.description')}\n                </div>\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting} id=\"permission-template-submit\">\n                {this.props.confirmButtonText}\n              </SubmitButton>\n              <ResetButtonLink\n                disabled={submitting}\n                id=\"permission-template-cancel\"\n                onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createPermissionTemplate } from '../../../api/permissions';\nimport { Router, withRouter } from '../../../components/hoc/withRouter';\nimport Form from './Form';\n\ninterface Props {\n  organization?: { key: string };\n  ready?: boolean;\n  refresh: () => Promise<void>;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  createModal: boolean;\n}\n\nclass Header extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { createModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCreateClick = () => {\n    this.setState({ createModal: true });\n  };\n\n  handleCreateModalClose = () => {\n    if (this.mounted) {\n      this.setState({ createModal: false });\n    }\n  };\n\n  handleCreateModalSubmit = (data: {\n    description: string;\n    name: string;\n    projectKeyPattern: string;\n  }) => {\n    const organization = this.props.organization && this.props.organization.key;\n    return createPermissionTemplate({ ...data, organization }).then(response => {\n      this.props.refresh().then(() => {\n        const pathname = organization\n          ? `/organizations/${organization}/permission_templates`\n          : '/permission_templates';\n        this.props.router.push({ pathname, query: { id: response.permissionTemplate.id } });\n      });\n    });\n  };\n\n  render() {\n    return (\n      <header className=\"page-header\" id=\"project-permissions-header\">\n        <h1 className=\"page-title\">{translate('permission_templates.page')}</h1>\n\n        {!this.props.ready && <i className=\"spinner\" />}\n\n        <div className=\"page-actions\">\n          <Button onClick={this.handleCreateClick}>{translate('create')}</Button>\n\n          {this.state.createModal && (\n            <Form\n              confirmButtonText={translate('create')}\n              header={translate('permission_template.new_template')}\n              onClose={this.handleCreateModalClose}\n              onSubmit={this.handleCreateModalSubmit}\n            />\n          )}\n        </div>\n\n        <p className=\"page-description\">{translate('permission_templates.page.description')}</p>\n      </header>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  permissions: T.Permission[];\n}\n\nexport default class ListHeader extends React.PureComponent<Props> {\n  renderTooltip(permission: T.Permission) {\n    return permission.key === 'user' || permission.key === 'codeviewer' ? (\n      <div>\n        <InstanceMessage message={translate('projects_role', permission.key, 'desc')} />\n        <Alert className=\"spacer-top\" variant=\"warning\">\n          {translate('projects_role.public_projects_warning')}\n        </Alert>\n      </div>\n    ) : (\n      <InstanceMessage message={translate('projects_role', permission.key, 'desc')} />\n    );\n  }\n\n  render() {\n    const cells = this.props.permissions.map(permission => (\n      <th className=\"permission-column little-padded-left little-padded-right\" key={permission.key}>\n        <div className=\"permission-column-inner\">\n          <span className=\"text-middle\">{translate('projects_role', permission.key)}</span>\n          <HelpTooltip className=\"spacer-left\" overlay={this.renderTooltip(permission)} />\n        </div>\n      </th>\n    ));\n\n    return (\n      <thead>\n        <tr>\n          <th className=\"little-padded-left little-padded-right\">&nbsp;</th>\n          {cells}\n          <th className=\"thin nowrap text-right little-padded-left little-padded-right\">&nbsp;</th>\n        </tr>\n      </thead>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  onSubmit: () => Promise<void>;\n  permissionTemplate: T.PermissionTemplate;\n}\n\nexport default function DeleteForm({ onClose, onSubmit, permissionTemplate: t }: Props) {\n  const header = translate('permission_template.delete_confirm_title');\n\n  return (\n    <SimpleModal header={header} onClose={onClose} onSubmit={onSubmit}>\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n\n          <div className=\"modal-body\">\n            {translateWithParameters(\n              'permission_template.do_you_want_to_delete_template_xxx',\n              t.name\n            )}\n          </div>\n\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton className=\"button-red\" disabled={submitting}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { difference } from 'lodash';\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  deletePermissionTemplate,\n  setDefaultPermissionTemplate,\n  updatePermissionTemplate\n} from '../../../api/permissions';\nimport { Router, withRouter } from '../../../components/hoc/withRouter';\nimport DeleteForm from './DeleteForm';\nimport Form from './Form';\n\ninterface Props {\n  fromDetails?: boolean;\n  organization?: { isDefault?: boolean; key: string };\n  permissionTemplate: T.PermissionTemplate;\n  refresh: () => void;\n  router: Pick<Router, 'replace'>;\n  topQualifiers: string[];\n}\n\ninterface State {\n  deleteForm: boolean;\n  updateModal: boolean;\n}\n\nexport class ActionsCell extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteForm: false, updateModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleUpdateClick = () => {\n    this.setState({ updateModal: true });\n  };\n\n  handleCloseUpdateModal = () => {\n    if (this.mounted) {\n      this.setState({ updateModal: false });\n    }\n  };\n\n  handleSubmitUpdateModal = (data: {\n    description: string;\n    name: string;\n    projectKeyPattern: string;\n  }) => {\n    return updatePermissionTemplate({ id: this.props.permissionTemplate.id, ...data }).then(\n      this.props.refresh\n    );\n  };\n\n  handleDeleteClick = () => {\n    this.setState({ deleteForm: true });\n  };\n\n  handleCloseDeleteForm = () => {\n    if (this.mounted) {\n      this.setState({ deleteForm: false });\n    }\n  };\n\n  handleDeleteSubmit = () => {\n    return deletePermissionTemplate({ templateId: this.props.permissionTemplate.id }).then(() => {\n      const pathname = this.props.organization\n        ? `/organizations/${this.props.organization.key}/permission_templates`\n        : '/permission_templates';\n      this.props.router.replace(pathname);\n      this.props.refresh();\n    });\n  };\n\n  setDefault = (qualifier: string) => () => {\n    setDefaultPermissionTemplate(this.props.permissionTemplate.id, qualifier).then(\n      this.props.refresh,\n      () => {}\n    );\n  };\n\n  getAvailableQualifiers() {\n    const topQualifiers =\n      this.props.organization && !this.props.organization.isDefault\n        ? ['TRK']\n        : this.props.topQualifiers;\n    return difference(topQualifiers, this.props.permissionTemplate.defaultFor);\n  }\n\n  renderSetDefaultsControl() {\n    const availableQualifiers = this.getAvailableQualifiers();\n\n    if (availableQualifiers.length === 0) {\n      return null;\n    }\n\n    return this.props.topQualifiers.length === 1\n      ? this.renderIfSingleTopQualifier(availableQualifiers)\n      : this.renderIfMultipleTopQualifiers(availableQualifiers);\n  }\n\n  renderSetDefaultLink(qualifier: string, child: React.ReactNode) {\n    return (\n      <ActionsDropdownItem\n        className=\"js-set-default\"\n        data-qualifier={qualifier}\n        key={qualifier}\n        onClick={this.setDefault(qualifier)}>\n        {child}\n      </ActionsDropdownItem>\n    );\n  }\n\n  renderIfSingleTopQualifier(availableQualifiers: string[]) {\n    return availableQualifiers.map(qualifier =>\n      this.renderSetDefaultLink(\n        qualifier,\n        <span>{translate('permission_templates.set_default')}</span>\n      )\n    );\n  }\n\n  renderIfMultipleTopQualifiers(availableQualifiers: string[]) {\n    return availableQualifiers.map(qualifier =>\n      this.renderSetDefaultLink(\n        qualifier,\n        <span>\n          {translate('permission_templates.set_default_for')}{' '}\n          <QualifierIcon qualifier={qualifier} /> {translate('qualifiers', qualifier)}\n        </span>\n      )\n    );\n  }\n\n  render() {\n    const { permissionTemplate: t, organization } = this.props;\n\n    const pathname = organization\n      ? `/organizations/${organization.key}/permission_templates`\n      : '/permission_templates';\n\n    return (\n      <>\n        <ActionsDropdown>\n          {this.renderSetDefaultsControl()}\n\n          {!this.props.fromDetails && (\n            <ActionsDropdownItem to={{ pathname, query: { id: t.id } }}>\n              {translate('edit_permissions')}\n            </ActionsDropdownItem>\n          )}\n\n          <ActionsDropdownItem className=\"js-update\" onClick={this.handleUpdateClick}>\n            {translate('update_details')}\n          </ActionsDropdownItem>\n\n          {t.defaultFor.length === 0 && (\n            <ActionsDropdownItem\n              className=\"js-delete\"\n              destructive={true}\n              onClick={this.handleDeleteClick}>\n              {translate('delete')}\n            </ActionsDropdownItem>\n          )}\n        </ActionsDropdown>\n\n        {this.state.updateModal && (\n          <Form\n            confirmButtonText={translate('update_verb')}\n            header={translate('permission_template.edit_template')}\n            onClose={this.handleCloseUpdateModal}\n            onSubmit={this.handleSubmitUpdateModal}\n            permissionTemplate={t}\n          />\n        )}\n\n        {this.state.deleteForm && (\n          <DeleteForm\n            onClose={this.handleCloseDeleteForm}\n            onSubmit={this.handleDeleteSubmit}\n            permissionTemplate={t}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(ActionsCell);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  template: T.PermissionTemplate;\n}\n\nexport default function Defaults({ organization, template }: Props) {\n  const qualifiersToDisplay =\n    organization && !organization.isDefault ? ['TRK'] : template.defaultFor;\n\n  const qualifiers = sortBy(qualifiersToDisplay)\n    .map(qualifier => translate('qualifiers', qualifier))\n    .join(', ');\n\n  return (\n    <div>\n      <span className=\"badge spacer-right\">\n        {translateWithParameters('permission_template.default_for', qualifiers)}\n      </span>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Defaults from './Defaults';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  template: T.PermissionTemplate;\n}\n\nexport default function NameCell({ template, organization }: Props) {\n  const pathname = organization\n    ? `/organizations/${organization.key}/permission_templates`\n    : '/permission_templates';\n\n  return (\n    <td className=\"little-padded-left little-padded-right\">\n      <Link to={{ pathname, query: { id: template.id } }}>\n        <strong className=\"js-name\">{template.name}</strong>\n      </Link>\n\n      {template.defaultFor.length > 0 && (\n        <div className=\"spacer-top js-defaults\">\n          <Defaults organization={organization} template={template} />\n        </div>\n      )}\n\n      {!!template.description && (\n        <div className=\"spacer-top js-description\">{template.description}</div>\n      )}\n\n      {!!template.projectKeyPattern && (\n        <div className=\"spacer-top js-project-key-pattern\">\n          Project Key Pattern: <code>{template.projectKeyPattern}</code>\n        </div>\n      )}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isSonarCloud } from '../../../helpers/system';\n\ninterface Props {\n  permission: {\n    key: string;\n    usersCount: number;\n    groupsCount: number;\n    withProjectCreator?: boolean;\n  };\n}\n\nexport default function PermissionCell({ permission: p }: Props) {\n  return (\n    <td className=\"permission-column little-padded-left little-padded-right\">\n      <div className=\"permission-column-inner\">\n        <ul>\n          {p.withProjectCreator && (\n            <li className=\"little-spacer-bottom display-flex-center\">\n              {translate('permission_templates.project_creators')}\n              <HelpTooltip\n                className=\"little-spacer-left\"\n                overlay={translate(\n                  isSonarCloud()\n                    ? 'permission_templates.project_creators.explanation.sonarcloud'\n                    : 'permission_templates.project_creators.explanation'\n                )}\n              />\n            </li>\n          )}\n          <li className=\"little-spacer-bottom\">\n            <strong>{p.usersCount}</strong>\n            {'  user(s)'}\n          </li>\n          <li>\n            <strong>{p.groupsCount}</strong>\n            {' group(s)'}\n          </li>\n        </ul>\n      </div>\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsCell from './ActionsCell';\nimport NameCell from './NameCell';\nimport PermissionCell from './PermissionCell';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  refresh: () => Promise<void>;\n  template: T.PermissionTemplate;\n  topQualifiers: string[];\n}\n\nexport default function ListItem(props: Props) {\n  const permissions = props.template.permissions.map(p => (\n    <PermissionCell key={p.key} permission={p} />\n  ));\n\n  return (\n    <tr data-id={props.template.id} data-name={props.template.name}>\n      <NameCell organization={props.organization} template={props.template} />\n\n      {permissions}\n\n      <td className=\"nowrap thin text-right text-top little-padded-left little-padded-right\">\n        <ActionsCell\n          organization={props.organization}\n          permissionTemplate={props.template}\n          refresh={props.refresh}\n          topQualifiers={props.topQualifiers}\n        />\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ListHeader from './ListHeader';\nimport ListItem from './ListItem';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  permissionTemplates: T.PermissionTemplate[];\n  permissions: T.Permission[];\n  refresh: () => Promise<void>;\n  topQualifiers: string[];\n}\n\nexport default function List(props: Props) {\n  const permissionTemplates = props.permissionTemplates.map(p => (\n    <ListItem\n      key={p.id}\n      organization={props.organization}\n      refresh={props.refresh}\n      template={p}\n      topQualifiers={props.topQualifiers}\n    />\n  ));\n\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra permissions-table\" id=\"permission-templates\">\n        <ListHeader organization={props.organization} permissions={props.permissions} />\n        <tbody>{permissionTemplates}</tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Header from './Header';\nimport List from './List';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  permissionTemplates: T.PermissionTemplate[];\n  permissions: T.Permission[];\n  ready: boolean;\n  refresh: () => Promise<void>;\n  topQualifiers: string[];\n}\n\nexport default function Home(props: Props) {\n  return (\n    <div className=\"page page-limited\">\n      <Helmet defer={false} title={translate('permission_templates.page')} />\n\n      <Header organization={props.organization} ready={props.ready} refresh={props.refresh} />\n\n      <List\n        organization={props.organization}\n        permissionTemplates={props.permissionTemplates}\n        permissions={props.permissions}\n        refresh={props.refresh}\n        topQualifiers={props.topQualifiers}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Defaults from './Defaults';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  template: T.PermissionTemplate;\n}\n\nexport default function TemplateDetails({ organization, template }: Props) {\n  return (\n    <div className=\"big-spacer-bottom\">\n      {template.defaultFor.length > 0 && (\n        <div className=\"spacer-top js-defaults\">\n          <Defaults organization={organization} template={template} />\n        </div>\n      )}\n\n      {!!template.description && (\n        <div className=\"spacer-top js-description\">{template.description}</div>\n      )}\n\n      {!!template.projectKeyPattern && (\n        <div className=\"spacer-top js-project-key-pattern\">\n          Project Key Pattern: <code>{template.projectKeyPattern}</code>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ActionsCell from './ActionsCell';\n\ninterface Props {\n  loading: boolean;\n  organization: T.Organization | undefined;\n  refresh: () => void;\n  template: T.PermissionTemplate;\n  topQualifiers: string[];\n}\n\nexport default function TemplateHeader(props: Props) {\n  const { template, organization } = props;\n\n  const pathname = organization\n    ? `/organizations/${organization.key}/permission_templates`\n    : '/permission_templates';\n\n  return (\n    <header className=\"page-header\" id=\"project-permissions-header\">\n      <div className=\"note spacer-bottom\">\n        <Link className=\"text-muted\" to={pathname}>\n          {translate('permission_templates.page')}\n        </Link>\n      </div>\n\n      <h1 className=\"page-title\">{template.name}</h1>\n\n      {props.loading && <i className=\"spinner\" />}\n\n      <div className=\"pull-right\">\n        <ActionsCell\n          fromDetails={true}\n          organization={organization}\n          permissionTemplate={template}\n          refresh={props.refresh}\n          topQualifiers={props.topQualifiers}\n        />\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport * as api from '../../../api/permissions';\nimport HoldersList from '../../permissions/shared/components/HoldersList';\nimport SearchForm from '../../permissions/shared/components/SearchForm';\nimport {\n  convertToPermissionDefinitions,\n  PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE\n} from '../../permissions/utils';\nimport TemplateDetails from './TemplateDetails';\nimport TemplateHeader from './TemplateHeader';\n\ninterface Props {\n  organization: T.Organization | undefined;\n  refresh: () => void;\n  template: T.PermissionTemplate;\n  topQualifiers: string[];\n}\n\ninterface State {\n  filter: string;\n  groups: T.PermissionGroup[];\n  loading: boolean;\n  query: string;\n  selectedPermission?: string;\n  users: T.PermissionUser[];\n}\n\nexport default class Template extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    filter: 'all',\n    groups: [],\n    loading: false,\n    query: '',\n    users: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.requestHolders();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  requestHolders = (realQuery?: string) => {\n    this.setState({ loading: true });\n\n    const { template } = this.props;\n    const { query, filter, selectedPermission } = this.state;\n    const requests = [];\n\n    const finalQuery = realQuery != null ? realQuery : query;\n\n    if (filter !== 'groups') {\n      requests.push(api.getPermissionTemplateUsers(template.id, finalQuery, selectedPermission));\n    } else {\n      requests.push(Promise.resolve([]));\n    }\n\n    if (filter !== 'users') {\n      requests.push(api.getPermissionTemplateGroups(template.id, finalQuery, selectedPermission));\n    } else {\n      requests.push(Promise.resolve([]));\n    }\n\n    return Promise.all(requests).then(responses => {\n      if (this.mounted) {\n        this.setState({\n          users: responses[0],\n          groups: responses[1],\n          loading: false\n        });\n      }\n    });\n  };\n\n  handleToggleUser = (user: T.PermissionUser, permission: string) => {\n    if (user.login === '<creator>') {\n      return this.handleToggleProjectCreator(user, permission);\n    }\n    const { template, organization } = this.props;\n    const hasPermission = user.permissions.includes(permission);\n    const data: { templateId: string; login: string; permission: string; organization?: string } = {\n      templateId: template.id,\n      login: user.login,\n      permission\n    };\n    if (organization) {\n      data.organization = organization.key;\n    }\n    const request = hasPermission\n      ? api.revokeTemplatePermissionFromUser(data)\n      : api.grantTemplatePermissionToUser(data);\n    return request.then(() => this.requestHolders()).then(this.props.refresh);\n  };\n\n  handleToggleProjectCreator = (user: T.PermissionUser, permission: string) => {\n    const { template } = this.props;\n    const hasPermission = user.permissions.includes(permission);\n    const request = hasPermission\n      ? api.removeProjectCreatorFromTemplate(template.id, permission)\n      : api.addProjectCreatorToTemplate(template.id, permission);\n    return request.then(() => this.requestHolders()).then(this.props.refresh);\n  };\n\n  handleToggleGroup = (group: T.PermissionGroup, permission: string) => {\n    const { template, organization } = this.props;\n    const hasPermission = group.permissions.includes(permission);\n    const data = {\n      templateId: template.id,\n      groupName: group.name,\n      permission\n    };\n    if (organization) {\n      Object.assign(data, { organization: organization.key });\n    }\n    const request = hasPermission\n      ? api.revokeTemplatePermissionFromGroup(data)\n      : api.grantTemplatePermissionToGroup(data);\n    return request.then(() => this.requestHolders()).then(this.props.refresh);\n  };\n\n  handleSearch = (query: string) => {\n    this.setState({ query });\n    this.requestHolders(query);\n  };\n\n  handleFilter = (filter: string) => {\n    this.setState({ filter }, this.requestHolders);\n  };\n\n  handleSelectPermission = (selectedPermission: string) => {\n    if (selectedPermission === this.state.selectedPermission) {\n      this.setState({ selectedPermission: undefined }, this.requestHolders);\n    } else {\n      this.setState({ selectedPermission }, this.requestHolders);\n    }\n  };\n\n  shouldDisplayCreator = (creatorPermissions: string[]) => {\n    const { filter, query, selectedPermission } = this.state;\n    const CREATOR_NAME = translate('permission_templates.project_creators');\n\n    const isFiltered = filter !== 'all';\n\n    const matchQuery = !query || CREATOR_NAME.toLocaleLowerCase().includes(query.toLowerCase());\n\n    const matchPermission =\n      selectedPermission === undefined || creatorPermissions.includes(selectedPermission);\n\n    return !isFiltered && matchQuery && matchPermission;\n  };\n\n  render() {\n    const permissions = convertToPermissionDefinitions(\n      PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE,\n      'projects_role'\n    );\n\n    const allUsers = [...this.state.users];\n\n    const creatorPermissions = this.props.template.permissions\n      .filter(p => p.withProjectCreator)\n      .map(p => p.key);\n\n    if (this.shouldDisplayCreator(creatorPermissions)) {\n      const creator = {\n        login: '<creator>',\n        name: translate('permission_templates.project_creators'),\n        permissions: creatorPermissions\n      };\n\n      allUsers.unshift(creator);\n    }\n\n    return (\n      <div className=\"page page-limited\">\n        <Helmet defer={false} title={this.props.template.name} />\n\n        <TemplateHeader\n          loading={this.state.loading}\n          organization={this.props.organization}\n          refresh={this.props.refresh}\n          template={this.props.template}\n          topQualifiers={this.props.topQualifiers}\n        />\n\n        <TemplateDetails organization={this.props.organization} template={this.props.template} />\n\n        <HoldersList\n          groups={this.state.groups}\n          onSelectPermission={this.handleSelectPermission}\n          onToggleGroup={this.handleToggleGroup}\n          onToggleUser={this.handleToggleUser}\n          permissions={permissions}\n          selectedPermission={this.state.selectedPermission}\n          showPublicProjectsWarning={true}\n          users={allUsers}>\n          <SearchForm\n            filter={this.state.filter}\n            onFilter={this.handleFilter}\n            onSearch={this.handleSearch}\n            query={this.state.query}\n          />\n        </HoldersList>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Location } from 'history';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getPermissionTemplates } from '../../../api/permissions';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport OrganizationHelmet from '../../../components/common/OrganizationHelmet';\nimport { getAppState, Store } from '../../../store/rootReducer';\nimport '../../permissions/styles.css';\nimport { mergeDefaultsToTemplates, mergePermissionsToTemplates, sortPermissions } from '../utils';\nimport Home from './Home';\nimport Template from './Template';\n\ninterface Props {\n  location: Location;\n  organization: T.Organization | undefined;\n  topQualifiers: string[];\n}\n\ninterface State {\n  ready: boolean;\n  permissions: T.Permission[];\n  permissionTemplates: T.PermissionTemplate[];\n}\n\nexport class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    ready: false,\n    permissions: [],\n    permissionTemplates: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.requestPermissions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  requestPermissions = () => {\n    const { organization } = this.props;\n    const request = organization\n      ? getPermissionTemplates(organization.key)\n      : getPermissionTemplates();\n    return request.then(r => {\n      if (this.mounted) {\n        const permissions = sortPermissions(r.permissions);\n        const permissionTemplates = mergeDefaultsToTemplates(\n          mergePermissionsToTemplates(r.permissionTemplates, permissions),\n          r.defaultTemplates\n        );\n        this.setState({ ready: true, permissionTemplates, permissions });\n      }\n    });\n  };\n\n  renderTemplate(id: string) {\n    if (!this.state.ready) {\n      return null;\n    }\n\n    const template = this.state.permissionTemplates.find(t => t.id === id);\n    if (!template) {\n      return null;\n    }\n\n    return (\n      <Template\n        organization={this.props.organization}\n        refresh={this.requestPermissions}\n        template={template}\n        topQualifiers={this.props.topQualifiers}\n      />\n    );\n  }\n\n  renderHome() {\n    return (\n      <Home\n        organization={this.props.organization}\n        permissionTemplates={this.state.permissionTemplates}\n        permissions={this.state.permissions}\n        ready={this.state.ready}\n        refresh={this.requestPermissions}\n        topQualifiers={this.props.topQualifiers}\n      />\n    );\n  }\n\n  render() {\n    const { id } = this.props.location.query;\n    return (\n      <div>\n        <Suggestions suggestions=\"permission_templates\" />\n        <OrganizationHelmet\n          organization={this.props.organization}\n          title={translate('permission_templates.page')}\n        />\n\n        {id && this.renderTemplate(id)}\n        {!id && this.renderHome()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ topQualifiers: getAppState(state).qualifiers });\n\nexport default connect(mapStateToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { hasMessage, translate } from 'sonar-ui-common/helpers/l10n';\nimport { isSonarCloud } from '../../helpers/system';\n\nexport const PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE = [\n  'user',\n  'codeviewer',\n  'issueadmin',\n  'securityhotspotadmin',\n  'admin',\n  'scan'\n];\n\nexport const PERMISSIONS_ORDER_GLOBAL = [\n  'admin',\n  { category: 'administer', permissions: ['gateadmin', 'profileadmin'] },\n  'scan',\n  { category: 'creator', permissions: ['provisioning'] }\n];\n\nexport const PERMISSIONS_ORDER_GLOBAL_GOV = [\n  'admin',\n  { category: 'administer', permissions: ['gateadmin', 'profileadmin'] },\n  'scan',\n  { category: 'creator', permissions: ['provisioning', 'applicationcreator', 'portfoliocreator'] }\n];\n\nexport const PERMISSIONS_ORDER_FOR_VIEW = ['user', 'admin'];\n\nexport const PERMISSIONS_ORDER_FOR_DEV = ['user', 'admin'];\n\nexport const PERMISSIONS_ORDER_BY_QUALIFIER: T.Dict<string[]> = {\n  TRK: PERMISSIONS_ORDER_FOR_PROJECT_TEMPLATE,\n  VW: PERMISSIONS_ORDER_FOR_VIEW,\n  SVW: PERMISSIONS_ORDER_FOR_VIEW,\n  APP: PERMISSIONS_ORDER_FOR_VIEW,\n  DEV: PERMISSIONS_ORDER_FOR_DEV\n};\n\nfunction convertToPermissionDefinition(permission: string, l10nPrefix: string) {\n  const getMessage = (messageKey: string) => {\n    const cloudMessageKey = `${messageKey}.sonarcloud`;\n    return isSonarCloud() && hasMessage(cloudMessageKey)\n      ? translate(cloudMessageKey)\n      : translate(messageKey);\n  };\n\n  const name = getMessage(`${l10nPrefix}.${permission}`);\n  const description = getMessage(`${l10nPrefix}.${permission}.desc`);\n\n  return {\n    key: permission,\n    name,\n    description\n  };\n}\n\nexport function convertToPermissionDefinitions(\n  permissions: Array<string | { category: string; permissions: string[] }>,\n  l10nPrefix: string\n): Array<T.PermissionDefinition | T.PermissionDefinitionGroup> {\n  return permissions.map(permission => {\n    if (typeof permission === 'object') {\n      return {\n        category: permission.category,\n        permissions: permission.permissions.map(permission =>\n          convertToPermissionDefinition(permission, l10nPrefix)\n        )\n      };\n    }\n    return convertToPermissionDefinition(permission, l10nPrefix);\n  });\n}\n\nexport function isPermissionDefinitionGroup(\n  permission?: T.PermissionDefinition | T.PermissionDefinitionGroup\n): permission is T.PermissionDefinitionGroup {\n  return Boolean(permission && (permission as T.PermissionDefinitionGroup).category);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { BaseSearchProjectsParameters } from './components';\n\nconst PAGE_SIZE = 100;\n\nexport function grantPermissionToUser(data: {\n  projectKey?: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/add_user', data).catch(throwGlobalError);\n}\n\nexport function revokePermissionFromUser(data: {\n  projectKey?: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/remove_user', data).catch(throwGlobalError);\n}\n\nexport function grantPermissionToGroup(data: {\n  projectKey?: string;\n  groupName: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/add_group', data).catch(throwGlobalError);\n}\n\nexport function revokePermissionFromGroup(data: {\n  projectKey?: string;\n  groupName: string;\n  permission: string;\n  organization?: string;\n}) {\n  return post('/api/permissions/remove_group', data).catch(throwGlobalError);\n}\n\ninterface GetPermissionTemplatesResponse {\n  permissionTemplates: T.PermissionTemplate[];\n  defaultTemplates: Array<{ templateId: string; qualifier: string }>;\n  permissions: Array<{ key: string; name: string; description: string }>;\n}\n\nexport function getPermissionTemplates(\n  organization?: string\n): Promise<GetPermissionTemplatesResponse> {\n  const url = '/api/permissions/search_templates';\n  return organization ? getJSON(url, { organization }) : getJSON(url);\n}\n\nexport function createPermissionTemplate(data: RequestData) {\n  return postJSON('/api/permissions/create_template', data);\n}\n\nexport function updatePermissionTemplate(data: RequestData): Promise<void> {\n  return post('/api/permissions/update_template', data);\n}\n\nexport function deletePermissionTemplate(data: RequestData) {\n  return post('/api/permissions/delete_template', data).catch(throwGlobalError);\n}\n\n/**\n * Set default permission template for a given qualifier\n */\nexport function setDefaultPermissionTemplate(templateId: string, qualifier: string): Promise<void> {\n  return post('/api/permissions/set_default_template', { templateId, qualifier });\n}\n\nexport function applyTemplateToProject(data: RequestData) {\n  return post('/api/permissions/apply_template', data).catch(throwGlobalError);\n}\n\nexport function bulkApplyTemplate(data: BaseSearchProjectsParameters): Promise<void> {\n  return post('/api/permissions/bulk_apply_template', data);\n}\n\nexport function grantTemplatePermissionToUser(data: {\n  templateId: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}): Promise<void> {\n  return post('/api/permissions/add_user_to_template', data);\n}\n\nexport function revokeTemplatePermissionFromUser(data: {\n  templateId: string;\n  login: string;\n  permission: string;\n  organization?: string;\n}): Promise<void> {\n  return post('/api/permissions/remove_user_from_template', data);\n}\n\nexport function grantTemplatePermissionToGroup(data: RequestData): Promise<void> {\n  return post('/api/permissions/add_group_to_template', data);\n}\n\nexport function revokeTemplatePermissionFromGroup(data: RequestData): Promise<void> {\n  return post('/api/permissions/remove_group_from_template', data);\n}\n\nexport function addProjectCreatorToTemplate(templateId: string, permission: string): Promise<void> {\n  return post('/api/permissions/add_project_creator_to_template', { templateId, permission });\n}\n\nexport function removeProjectCreatorFromTemplate(\n  templateId: string,\n  permission: string\n): Promise<void> {\n  return post('/api/permissions/remove_project_creator_from_template', { templateId, permission });\n}\n\nexport function getPermissionsUsersForComponent(data: {\n  projectKey: string;\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; users: T.PermissionUser[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/users', data).catch(throwGlobalError);\n}\n\nexport function getPermissionsGroupsForComponent(data: {\n  projectKey: string;\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; groups: T.PermissionGroup[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/groups', data).catch(throwGlobalError);\n}\n\nexport function getGlobalPermissionsUsers(data: {\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; users: T.PermissionUser[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/users', data);\n}\n\nexport function getGlobalPermissionsGroups(data: {\n  q?: string;\n  permission?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n}): Promise<{ paging: T.Paging; groups: T.PermissionGroup[] }> {\n  if (!data.ps) {\n    data.ps = PAGE_SIZE;\n  }\n  return getJSON('/api/permissions/groups', data);\n}\n\nexport function getPermissionTemplateUsers(\n  templateId: string,\n  query?: string,\n  permission?: string,\n  organization?: string\n): Promise<any> {\n  const data: RequestData = { templateId, ps: PAGE_SIZE };\n  if (query) {\n    data.q = query;\n  }\n  if (permission) {\n    data.permission = permission;\n  }\n  if (organization) {\n    Object.assign(data, { organization });\n  }\n  return getJSON('/api/permissions/template_users', data).then(r => r.users);\n}\n\nexport function getPermissionTemplateGroups(\n  templateId: string,\n  query?: string,\n  permission?: string,\n  organization?: string\n): Promise<any> {\n  const data: RequestData = { templateId, ps: PAGE_SIZE };\n  if (query) {\n    data.q = query;\n  }\n  if (permission) {\n    data.permission = permission;\n  }\n  if (organization) {\n    Object.assign(data, { organization });\n  }\n  return getJSON('/api/permissions/template_groups', data).then(r => r.groups);\n}\n\nexport function changeProjectVisibility(\n  project: string,\n  visibility: T.Visibility\n): Promise<void | Response> {\n  return post('/api/projects/update_visibility', { project, visibility }).catch(throwGlobalError);\n}\n\nexport function changeProjectDefaultVisibility(\n  organization: string,\n  projectVisibility: T.Visibility\n): Promise<void | Response> {\n  return post('/api/projects/update_default_visibility', { organization, projectVisibility }).catch(\n    throwGlobalError\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".permissions-table .permission-column.selected{background-color:#d9edf7}.permissions-table .permission-column-inner{width:100px}.permissions-table .divider{background:#fff;padding:16px 0}.permissions-table .divider:after{display:block;content:\\\"\\\";background:#e6e6e6;height:1px;width:100%}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  filter: string;\n  onFilter: (value: string) => void;\n  onSearch: (value: string) => void;\n  query: string;\n}\n\nexport default function SearchForm(props: Props) {\n  const filterOptions = [\n    { value: 'all', label: translate('all') },\n    { value: 'users', label: translate('users.page') },\n    { value: 'groups', label: translate('user_groups.page') }\n  ];\n\n  return (\n    <div className=\"display-flex-row\">\n      <RadioToggle\n        name=\"users-or-groups\"\n        onCheck={props.onFilter}\n        options={filterOptions}\n        value={props.filter}\n      />\n\n      <div className=\"flex-1 spacer-left\">\n        <SearchBox\n          minLength={3}\n          onChange={props.onSearch}\n          placeholder={translate('search.search_for_users_or_groups')}\n          value={props.query}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Checkbox from 'sonar-ui-common/components/controls/Checkbox';\nimport { isPermissionDefinitionGroup } from '../../utils';\n\ninterface Props {\n  loading: string[];\n  onCheck: (checked: boolean, permission?: string) => void;\n  permission: T.PermissionDefinition | T.PermissionDefinitionGroup;\n  permissionItem: T.PermissionGroup | T.PermissionUser;\n  selectedPermission?: string;\n}\n\nexport default class PermissionCell extends React.PureComponent<Props> {\n  render() {\n    const { loading, onCheck, permission, permissionItem, selectedPermission } = this.props;\n    if (isPermissionDefinitionGroup(permission)) {\n      return (\n        <td className=\"text-middle\">\n          {permission.permissions.map(permission => (\n            <div key={permission.key}>\n              <Checkbox\n                checked={permissionItem.permissions.includes(permission.key)}\n                disabled={loading.includes(permission.key)}\n                id={permission.key}\n                onCheck={onCheck}>\n                <span className=\"little-spacer-left\">{permission.name}</span>\n              </Checkbox>\n            </div>\n          ))}\n        </td>\n      );\n    } else {\n      return (\n        <td\n          className={classNames('permission-column text-center text-middle', {\n            selected: permission.key === selectedPermission\n          })}>\n          <Checkbox\n            checked={permissionItem.permissions.includes(permission.key)}\n            disabled={loading.includes(permission.key)}\n            id={permission.key}\n            onCheck={onCheck}\n          />\n        </td>\n      );\n    }\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { without } from 'lodash';\nimport * as React from 'react';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { isPermissionDefinitionGroup } from '../../utils';\nimport PermissionCell from './PermissionCell';\n\ninterface Props {\n  group: T.PermissionGroup;\n  onToggle: (group: T.PermissionGroup, permission: string) => Promise<void>;\n  permissions: T.PermissionDefinitions;\n  selectedPermission?: string;\n}\n\ninterface State {\n  loading: string[];\n}\n\nexport default class GroupHolder extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = (permission: string) => {\n    if (this.mounted) {\n      this.setState(state => ({ loading: without(state.loading, permission) }));\n    }\n  };\n\n  handleCheck = (_checked: boolean, permission?: string) => {\n    if (permission !== undefined) {\n      this.setState(state => ({ loading: [...state.loading, permission] }));\n      this.props.onToggle(this.props.group, permission).then(\n        () => this.stopLoading(permission),\n        () => this.stopLoading(permission)\n      );\n    }\n  };\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <tr>\n        <td className=\"nowrap text-middle\">\n          <div className=\"display-inline-block text-middle big-spacer-right\">\n            <GroupIcon />\n          </div>\n          <div className=\"display-inline-block text-middle\">\n            <div>\n              <strong>{group.name}</strong>\n            </div>\n            <div className=\"little-spacer-top\" style={{ whiteSpace: 'normal' }}>\n              {group.description}\n            </div>\n          </div>\n        </td>\n        {this.props.permissions.map(permission => (\n          <PermissionCell\n            key={isPermissionDefinitionGroup(permission) ? permission.category : permission.key}\n            loading={this.state.loading}\n            onCheck={this.handleCheck}\n            permission={permission}\n            permissionItem={group}\n            selectedPermission={this.props.selectedPermission}\n          />\n        ))}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../../components/common/InstanceMessage';\nimport { isPermissionDefinitionGroup } from '../../utils';\n\ninterface Props {\n  onSelectPermission?: (permission: string) => void;\n  permission: T.PermissionDefinition | T.PermissionDefinitionGroup;\n  selectedPermission?: string;\n  showPublicProjectsWarning?: boolean;\n}\n\nexport default class PermissionHeader extends React.PureComponent<Props> {\n  handlePermissionClick = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    const { permission } = this.props;\n    if (this.props.onSelectPermission && !isPermissionDefinitionGroup(permission)) {\n      this.props.onSelectPermission(permission.key);\n    }\n  };\n\n  getTooltipOverlay = () => {\n    const { permission } = this.props;\n\n    if (isPermissionDefinitionGroup(permission)) {\n      return permission.permissions.map(permission => (\n        <React.Fragment key={permission.key}>\n          <b className=\"little-spacer-right\">{permission.name}:</b>\n          <InstanceMessage key={permission.key} message={permission.description} />\n          <br />\n        </React.Fragment>\n      ));\n    } else {\n      if (this.props.showPublicProjectsWarning && ['user', 'codeviewer'].includes(permission.key)) {\n        return (\n          <div>\n            <InstanceMessage message={permission.description} />\n            <Alert className=\"spacer-top\" variant=\"warning\">\n              {translate('projects_role.public_projects_warning')}\n            </Alert>\n          </div>\n        );\n      }\n      return <InstanceMessage message={permission.description} />;\n    }\n  };\n\n  render() {\n    const { onSelectPermission, permission } = this.props;\n    let name;\n    if (isPermissionDefinitionGroup(permission)) {\n      name = translate('global_permissions', permission.category);\n    } else {\n      name = onSelectPermission ? (\n        <Tooltip\n          overlay={translateWithParameters(\n            'global_permissions.filter_by_x_permission',\n            permission.name\n          )}>\n          <a href=\"#\" onClick={this.handlePermissionClick}>\n            {permission.name}\n          </a>\n        </Tooltip>\n      ) : (\n        permission.name\n      );\n    }\n    return (\n      <th\n        className={classNames('permission-column text-center text-middle', {\n          selected:\n            !isPermissionDefinitionGroup(permission) &&\n            permission.key === this.props.selectedPermission\n        })}>\n        <div className=\"permission-column-inner\">\n          {name}\n          <HelpTooltip className=\"spacer-left\" overlay={this.getTooltipOverlay()} />\n        </div>\n      </th>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { without } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../../components/ui/Avatar';\nimport { isSonarCloud } from '../../../../helpers/system';\nimport { isPermissionDefinitionGroup } from '../../utils';\nimport PermissionCell from './PermissionCell';\n\ninterface Props {\n  onToggle: (user: T.PermissionUser, permission: string) => Promise<void>;\n  permissions: T.PermissionDefinitions;\n  selectedPermission?: string;\n  user: T.PermissionUser;\n}\n\ninterface State {\n  loading: string[];\n}\n\nexport default class UserHolder extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = (permission: string) => {\n    if (this.mounted) {\n      this.setState(state => ({ loading: without(state.loading, permission) }));\n    }\n  };\n\n  handleCheck = (_checked: boolean, permission?: string) => {\n    if (permission !== undefined) {\n      this.setState(state => ({ loading: [...state.loading, permission] }));\n      this.props.onToggle(this.props.user, permission).then(\n        () => this.stopLoading(permission),\n        () => this.stopLoading(permission)\n      );\n    }\n  };\n\n  render() {\n    const { user } = this.props;\n    const permissionCells = this.props.permissions.map(permission => (\n      <PermissionCell\n        key={isPermissionDefinitionGroup(permission) ? permission.category : permission.key}\n        loading={this.state.loading}\n        onCheck={this.handleCheck}\n        permission={permission}\n        permissionItem={user}\n        selectedPermission={this.props.selectedPermission}\n      />\n    ));\n\n    if (user.login === '<creator>') {\n      return (\n        <tr>\n          <td className=\"nowrap text-middle\">\n            <div className=\"display-inline-block text-middle\">\n              <div>\n                <strong>{user.name}</strong>\n              </div>\n              <div className=\"little-spacer-top\" style={{ whiteSpace: 'normal' }}>\n                {translate(\n                  isSonarCloud()\n                    ? 'permission_templates.project_creators.explanation.sonarcloud'\n                    : 'permission_templates.project_creators.explanation'\n                )}\n              </div>\n            </div>\n          </td>\n          {permissionCells}\n        </tr>\n      );\n    }\n\n    return (\n      <tr>\n        <td className=\"nowrap text-middle\">\n          <Avatar\n            className=\"text-middle big-spacer-right\"\n            hash={user.avatar}\n            name={user.name}\n            size={36}\n          />\n          <div className=\"display-inline-block text-middle\">\n            {isSonarCloud() ? (\n              <>\n                <div>\n                  <strong>{user.name}</strong>\n                </div>\n                <div className=\"note little-spacer-top\">{user.login}</div>\n              </>\n            ) : (\n              <>\n                <div>\n                  <strong>{user.name}</strong>\n                  <span className=\"note spacer-left\">{user.login}</span>\n                </div>\n                <div className=\"little-spacer-top\">{user.email}</div>\n              </>\n            )}\n          </div>\n        </td>\n        {permissionCells}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isPermissionDefinitionGroup } from '../../utils';\nimport GroupHolder from './GroupHolder';\nimport PermissionHeader from './PermissionHeader';\nimport UserHolder from './UserHolder';\n\ninterface Props {\n  filter?: string;\n  groups: T.PermissionGroup[];\n  loading?: boolean;\n  onSelectPermission?: (permission: string) => void;\n  onToggleGroup: (group: T.PermissionGroup, permission: string) => Promise<void>;\n  onToggleUser: (user: T.PermissionUser, permission: string) => Promise<void>;\n  permissions: T.PermissionDefinitions;\n  query?: string;\n  selectedPermission?: string;\n  showPublicProjectsWarning?: boolean;\n  users: T.PermissionUser[];\n}\n\ninterface State {\n  initialPermissionsCount: T.Dict<number>;\n}\nexport default class HoldersList extends React.PureComponent<Props, State> {\n  state: State = { initialPermissionsCount: {} };\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.filter !== prevProps.filter || this.props.query !== prevProps.query) {\n      this.setState({ initialPermissionsCount: {} });\n    }\n  }\n\n  isPermissionUser(item: T.PermissionGroup | T.PermissionUser): item is T.PermissionUser {\n    return (item as T.PermissionUser).login !== undefined;\n  }\n\n  handleGroupToggle = (group: T.PermissionGroup, permission: string) => {\n    const key = group.id || group.name;\n    if (this.state.initialPermissionsCount[key] === undefined) {\n      this.setState(state => ({\n        initialPermissionsCount: {\n          ...state.initialPermissionsCount,\n          [key]: group.permissions.length\n        }\n      }));\n    }\n    return this.props.onToggleGroup(group, permission);\n  };\n\n  handleUserToggle = (user: T.PermissionUser, permission: string) => {\n    if (this.state.initialPermissionsCount[user.login] === undefined) {\n      this.setState(state => ({\n        initialPermissionsCount: {\n          ...state.initialPermissionsCount,\n          [user.login]: user.permissions.length\n        }\n      }));\n    }\n    return this.props.onToggleUser(user, permission);\n  };\n\n  getItemInitialPermissionsCount = (item: T.PermissionGroup | T.PermissionUser) => {\n    const key = this.isPermissionUser(item) ? item.login : item.id || item.name;\n    return this.state.initialPermissionsCount[key] !== undefined\n      ? this.state.initialPermissionsCount[key]\n      : item.permissions.length;\n  };\n\n  renderEmpty() {\n    const columns = this.props.permissions.length + 1;\n    return (\n      <tr>\n        <td colSpan={columns}>{translate('no_results_search')}</td>\n      </tr>\n    );\n  }\n\n  renderItem(item: T.PermissionUser | T.PermissionGroup, permissions: T.PermissionDefinitions) {\n    return this.isPermissionUser(item) ? (\n      <UserHolder\n        key={`user-${item.login}`}\n        onToggle={this.handleUserToggle}\n        permissions={permissions}\n        selectedPermission={this.props.selectedPermission}\n        user={item}\n      />\n    ) : (\n      <GroupHolder\n        group={item}\n        key={`group-${item.id || item.name}`}\n        onToggle={this.handleGroupToggle}\n        permissions={permissions}\n        selectedPermission={this.props.selectedPermission}\n      />\n    );\n  }\n\n  render() {\n    const { permissions } = this.props;\n    const items = sortBy([...this.props.users, ...this.props.groups], item => {\n      if (this.isPermissionUser(item) && item.login === '<creator>') {\n        return 0;\n      }\n      return item.name;\n    });\n    const [itemWithPermissions, itemWithoutPermissions] = partition(items, item =>\n      this.getItemInitialPermissionsCount(item)\n    );\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <table className=\"data zebra permissions-table\">\n          <thead>\n            <tr>\n              <td className=\"nowrap bordered-bottom\">{this.props.children}</td>\n              {permissions.map(permission => (\n                <PermissionHeader\n                  key={\n                    isPermissionDefinitionGroup(permission) ? permission.category : permission.key\n                  }\n                  onSelectPermission={this.props.onSelectPermission}\n                  permission={permission}\n                  selectedPermission={this.props.selectedPermission}\n                  showPublicProjectsWarning={this.props.showPublicProjectsWarning}\n                />\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {items.length === 0 && !this.props.loading && this.renderEmpty()}\n            {itemWithPermissions.map(item => this.renderItem(item, permissions))}\n            {itemWithPermissions.length > 0 && itemWithoutPermissions.length > 0 && (\n              <>\n                <tr>\n                  <td className=\"divider\" colSpan={20} />\n                </tr>\n                <tr />\n                {/* Keep correct zebra colors in the table */}\n              </>\n            )}\n            {itemWithoutPermissions.map(item => this.renderItem(item, permissions))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\ninterface Props {\n  organization?: { name: string };\n  title: string;\n}\n\nexport default function OrganizationHelmet({ title, organization }: Props) {\n  const defaultTitle = title + (organization ? ' - ' + organization.name : '');\n  return (\n    <Helmet defaultTitle={defaultTitle} defer={false} titleTemplate={`%s - ${defaultTitle}`} />\n  );\n}\n"],"sourceRoot":""}