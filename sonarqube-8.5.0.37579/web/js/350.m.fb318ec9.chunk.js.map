{"version":3,"sources":["webpack:///./src/main/js/components/workspace/WorkspaceRuleDetails.tsx","webpack:///./src/main/js/components/workspace/WorkspaceRuleViewer.tsx","webpack:///./src/main/js/components/workspace/WorkspaceRuleTitle.tsx","webpack:///./src/main/js/components/workspace/WorkspaceHeader.tsx"],"names":["mounted","state","loading","referencedRepositories","fetchRuleDetails","this","setState","Promise","all","props","organizationKey","key","ruleKey","organization","then","repositories","rule","ruleDetails","onLoad","name","noOp","prevProps","organizationsEnabled","appState","undefined","RuleDetailsMeta","canWrite","hideSimilarRulesFilter","onFilterChange","onTagsChange","RuleDetailsDescription","onChange","withAppState","handleClose","onClose","handleLoaded","setTimeout","className","WorkspaceHeader","maximized","onCollapse","onMaximize","onMinimize","onResize","WorkspaceRuleTitle","style","height","limited","fill","blue","handleDrag","_event","data","deltaY","children","offsetParent","document","body","onDrag","WorkspaceHeaderButton","icon","onClick","tooltip","Icon","color"],"mappings":"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","file":"js/350.m.fb318ec9.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { getRuleDetails, getRulesApp } from '../../api/rules';\nimport RuleDetailsDescription from '../../apps/coding-rules/components/RuleDetailsDescription';\nimport RuleDetailsMeta from '../../apps/coding-rules/components/RuleDetailsMeta';\nimport '../../apps/coding-rules/styles.css';\nimport { withAppState } from '../hoc/withAppState';\n\ninterface Props {\n  appState: Pick<T.AppState, 'organizationsEnabled'>;\n  onLoad: (details: { name: string }) => void;\n  organizationKey: string | undefined;\n  ruleKey: string;\n}\n\ninterface State {\n  loading: boolean;\n  referencedRepositories: T.Dict<{ key: string; language: string; name: string }>;\n  ruleDetails?: T.RuleDetails;\n}\n\nexport class WorkspaceRuleDetails extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true, referencedRepositories: {} };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchRuleDetails();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.ruleKey !== this.props.ruleKey ||\n      prevProps.organizationKey !== this.props.organizationKey\n    ) {\n      this.fetchRuleDetails();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchRuleDetails = () => {\n    this.setState({ loading: true });\n    Promise.all([\n      getRulesApp(this.props.organizationKey),\n      getRuleDetails({ key: this.props.ruleKey, organization: this.props.organizationKey })\n    ]).then(\n      ([{ repositories }, { rule }]) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            referencedRepositories: keyBy(repositories, 'key'),\n            ruleDetails: rule\n          });\n          this.props.onLoad({ name: rule.name });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  noOp = () => {};\n\n  render() {\n    const { organizationKey } = this.props;\n    const { organizationsEnabled } = this.props.appState;\n    const organization = organizationsEnabled ? organizationKey : undefined;\n\n    return (\n      <DeferredSpinner loading={this.state.loading}>\n        {this.state.ruleDetails && (\n          <>\n            <RuleDetailsMeta\n              canWrite={false}\n              hideSimilarRulesFilter={true}\n              onFilterChange={this.noOp}\n              onTagsChange={this.noOp}\n              organization={organization}\n              referencedRepositories={this.state.referencedRepositories}\n              ruleDetails={this.state.ruleDetails}\n            />\n            <RuleDetailsDescription\n              canWrite={false}\n              onChange={this.noOp}\n              organization={organization}\n              ruleDetails={this.state.ruleDetails}\n            />\n          </>\n        )}\n      </DeferredSpinner>\n    );\n  }\n}\n\nexport default withAppState(WorkspaceRuleDetails);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { RuleDescriptor } from './context';\nimport WorkspaceHeader, { Props as WorkspaceHeaderProps } from './WorkspaceHeader';\nimport WorkspaceRuleDetails from './WorkspaceRuleDetails';\nimport WorkspaceRuleTitle from './WorkspaceRuleTitle';\n\nexport interface Props extends T.Omit<WorkspaceHeaderProps, 'children' | 'onClose'> {\n  rule: RuleDescriptor;\n  height: number;\n  onClose: (componentKey: string) => void;\n  onLoad: (details: { key: string; name: string }) => void;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport default class WorkspaceRuleViewer extends React.PureComponent<Props> {\n  state: State = { loading: true };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.rule.key !== this.props.rule.key) {\n      this.setState({ loading: true });\n    }\n  }\n\n  handleClose = () => {\n    this.props.onClose(this.props.rule.key);\n  };\n\n  handleLoaded = (rule: { name: string }) => {\n    this.props.onLoad({ key: this.props.rule.key, name: rule.name });\n    // Allow time for the actual rendering, and the browser to pick it up.\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 1000);\n  };\n\n  render() {\n    const { rule } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div className=\"workspace-viewer\">\n        <WorkspaceHeader\n          maximized={this.props.maximized}\n          onClose={this.handleClose}\n          onCollapse={this.props.onCollapse}\n          onMaximize={this.props.onMaximize}\n          onMinimize={this.props.onMinimize}\n          onResize={this.props.onResize}>\n          <WorkspaceRuleTitle rule={rule} />\n        </WorkspaceHeader>\n\n        <div\n          aria-busy={loading}\n          aria-live=\"polite\"\n          className=\"workspace-viewer-container\"\n          style={{ height: this.props.height }}>\n          <WorkspaceRuleDetails\n            onLoad={this.handleLoaded}\n            organizationKey={rule.organization}\n            ruleKey={rule.key}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport LightBulbIcon from 'sonar-ui-common/components/icons/LightBulbIcon';\nimport { colors } from '../../app/theme';\nimport { RuleDescriptor } from './context';\n\ninterface Props {\n  limited?: boolean;\n  rule: RuleDescriptor;\n}\n\nexport default function WorkspaceRuleTitle({ limited, rule }: Props) {\n  const { name = '—' } = rule;\n  return (\n    <>\n      <LightBulbIcon className=\"little-spacer-right\" fill={colors.blue} />\n      {limited ? <span className=\"text-limited\">{name}</span> : name}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DraggableCore, DraggableData } from 'react-draggable';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport CollapseIcon from 'sonar-ui-common/components/icons/CollapseIcon';\nimport ExpandIcon from 'sonar-ui-common/components/icons/ExpandIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport MinimizeIcon from 'sonar-ui-common/components/icons/MinimizeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  children: React.ReactNode;\n  maximized?: boolean;\n  onClose: () => void;\n  onCollapse: () => void;\n  onMaximize: () => void;\n  onMinimize: () => void;\n  onResize: (deltaY: number) => void;\n}\n\nexport default class WorkspaceHeader extends React.PureComponent<Props> {\n  handleDrag = (_event: MouseEvent, data: DraggableData) => {\n    this.props.onResize(data.deltaY);\n  };\n\n  render() {\n    return (\n      <header className=\"workspace-viewer-header\">\n        <h6 className=\"workspace-viewer-name\">{this.props.children}</h6>\n\n        <DraggableCore offsetParent={document.body} onDrag={this.handleDrag}>\n          <div className=\"workspace-viewer-resize js-resize\" />\n        </DraggableCore>\n\n        <div className=\"workspace-viewer-actions\">\n          <WorkspaceHeaderButton\n            icon={MinimizeIcon}\n            onClick={this.props.onCollapse}\n            tooltip=\"workspace.minimize\"\n          />\n\n          {this.props.maximized ? (\n            <WorkspaceHeaderButton\n              icon={CollapseIcon}\n              onClick={this.props.onMinimize}\n              tooltip=\"workspace.normal_size\"\n            />\n          ) : (\n            <WorkspaceHeaderButton\n              icon={ExpandIcon}\n              onClick={this.props.onMaximize}\n              tooltip=\"workspace.full_window\"\n            />\n          )}\n\n          <WorkspaceHeaderButton\n            icon={ClearIcon}\n            onClick={this.props.onClose}\n            tooltip=\"workspace.close\"\n          />\n        </div>\n      </header>\n    );\n  }\n}\n\ninterface WorkspaceHeaderButtonProps {\n  icon: React.SFC<IconProps>;\n  onClick: () => void;\n  tooltip: string;\n}\n\nfunction WorkspaceHeaderButton({ icon: Icon, onClick, tooltip }: WorkspaceHeaderButtonProps) {\n  return (\n    <ButtonIcon\n      className=\"workspace-header-icon\"\n      color=\"#fff\"\n      onClick={onClick}\n      tooltip={translate(tooltip)}>\n      <Icon fill={undefined} />\n    </ButtonIcon>\n  );\n}\n"],"sourceRoot":""}